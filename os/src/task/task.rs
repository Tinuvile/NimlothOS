//! # 任务控制块和任务状态
//!
//! 定义任务的基本数据结构和状态枚举，用于任务管理和调度。

use super::context::TaskContext;

/// 任务控制块 (Task Control Block, TCB)
///
/// 存储单个任务的所有必要信息，包括任务状态和执行上下文。
/// 每个应用程序对应一个任务控制块。
///
/// ## 设计原则
///
/// - **最小化设计**: 只包含任务调度所需的核心信息
/// - **状态分离**: 将任务状态与上下文分开存储，便于管理
/// - **复制语义**: 实现 `Copy` trait，支持高效的值拷贝
///
/// ## 扩展性
///
/// 未来版本可能会添加更多字段：
/// - 任务优先级
/// - 执行时间统计
/// - 内存使用信息
/// - 进程 ID 和父子关系
#[derive(Copy, Clone)]
pub struct TaskControlBlock {
    /// 任务当前状态
    ///
    /// 标识任务在其生命周期中的当前阶段，用于调度决策。
    pub task_status: TaskStatus,

    /// 任务上下文
    ///
    /// 保存任务的 CPU 寄存器状态，用于任务切换时的状态保存和恢复。
    pub task_cx: TaskContext,
}

/// 任务状态枚举
///
/// 定义任务在其生命周期中可能处于的各种状态。
/// 任务状态转换遵循特定的规则，确保系统调度的正确性。
///
/// ## 状态转换图
///
/// ```text
/// ┌─────────┐    load     ┌───────┐    schedule   ┌─────────┐
/// │ Uninit  │ ──────────> │ Ready │ ────────────> │ Running │
/// └─────────┘             └───────┘               └─────────┘
///                            ^                         │
///                            │          yield/         │ exit/
///                            │         timeout         │ error
///                            └─────────────────────────┘
///                                                      │
///                                                      v
///                                              ┌─────────────┐
///                                              │   Exited    │
///                                              └─────────────┘
/// ```
///
/// ## 状态说明
///
/// - **Uninit**: 任务尚未初始化，仅在系统启动时短暂存在
/// - **Ready**: 任务已准备就绪，等待被调度执行
/// - **Running**: 任务正在 CPU 上执行
/// - **Exited**: 任务已完成执行，不会再被调度
#[derive(Copy, Clone, PartialEq)]
pub enum TaskStatus {
    /// 未初始化状态
    ///
    /// 任务刚创建时的初始状态，表示任务控制块已分配但尚未完成初始化。
    /// 这个状态在系统启动过程中短暂存在，很快会转换为 Ready 状态。
    Uninit,

    /// 就绪状态
    ///
    /// 任务已准备好执行，正在等待获得 CPU 时间片。
    /// 处于此状态的任务会被调度器考虑进行调度。
    Ready,

    /// 运行状态
    ///
    /// 任务正在 CPU 上执行。在单 CPU 系统中，同时只能有一个任务处于此状态。
    /// 任务可能因为时间片用完、主动让出或异常而离开此状态。
    Running,

    /// 已退出状态
    ///
    /// 任务已完成执行并退出，不会再被调度。
    /// 任务可能因为正常结束、调用 exit() 或发生致命错误而进入此状态。
    Exited,
}
