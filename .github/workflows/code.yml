name: Build Rust Doc And Run tests

on: [push]

env:
  CARGO_TERM_COLOR: always
  rust_toolchain: nightly-2025-02-18

jobs:
  build-doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.rust_toolchain }}
          components: rust-src, llvm-tools-preview
          target: riscv64gc-unknown-none-elf
      - name: Build os doc
        run: |
          cd os
          cargo doc --no-deps --verbose -Z build-std=core,alloc
      - name: Build easy-fs doc
        run: |
          cd easy-fs
          cargo doc --no-deps --verbose
      - name: Create combined doc directory
        run: |
          mkdir -p combined_docs
          # 复制 os 文档到 combined_docs/os/
          mkdir -p combined_docs/os
          cp -r os/target/riscv64gc-unknown-none-elf/doc/* combined_docs/os/
          # 复制 easy-fs 文档到 combined_docs/easy_fs/
          mkdir -p combined_docs/easy_fs
          cp -r easy-fs/target/doc/* combined_docs/easy_fs/
          # 创建主页面，重定向到 os 文档
          cat > combined_docs/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <meta charset="utf-8">
              <title>NimlothOS Documentation</title>
              <meta http-equiv="refresh" content="0; url=./os/os/">
          </head>
          <body>
              <p>Redirecting to <a href="./os/os/">OS Documentation</a>...</p>
          </body>
          </html>
          EOF
      - name: Deploy to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./combined_docs
          destination_dir: ${{ github.ref_name }}

  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.rust_toolchain }}
          components: rust-src, llvm-tools-preview
          target: riscv64gc-unknown-none-elf
      - uses: actions-rs/install@v0.1
        with:
          crate: cargo-binutils
          version: latest
          use-tool-cache: true
      - name: Cache QEMU
        uses: actions/cache@v3
        with:
          path: qemu-7.0.0
          key: qemu-7.0.0-x86_64-riscv64
      - name: Install QEMU
        run: |
          sudo apt-get update
          sudo apt-get install autoconf automake autotools-dev curl libmpc-dev libmpfr-dev libgmp-dev \
                               gawk build-essential bison flex texinfo gperf libtool patchutils bc \
                               zlib1g-dev libexpat-dev pkg-config  libglib2.0-dev libpixman-1-dev libsdl2-dev libslirp-dev \
                               python3 python3-pip ninja-build -y
          if [ ! -d qemu-7.0.0 ]; then
            wget https://download.qemu.org/qemu-7.0.0.tar.xz
            tar -xf qemu-7.0.0.tar.xz
            cd qemu-7.0.0
            ./configure --target-list=riscv64-softmmu
            make -j
          else
            cd qemu-7.0.0
          fi
          sudo make install
          qemu-system-riscv64 --version
      - name: Run usertests
        run: cd os && make run TEST=1
        timeout-minutes: 10