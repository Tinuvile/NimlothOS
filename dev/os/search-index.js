var searchIndex = new Map(JSON.parse('[["os",{"t":"CHCCQCQCQCCCQQHCCCCCCQCQISSSESSEESSSSSHFNNNNHNNNNEECFEONNNNNNNNCFSFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNKEEEEECEEMMCMMTFFFTTFTTONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNHNNOHNNNNONNNNNNNNNNNNNNNNNNNNONFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHFJNNHNNNHNNHHNNNEEEEEEEEEEEEEECECECHECCEEEESSFFFFKSISFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNOONMNNNNNNNNNNNNNNNNNNNNNNNNNFKIFFOMNNNNNNNOOMNNNOONHHHNNNNHNNNMNNOOONNNNNNNNNJJHHPPFFFGFTTTTONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNONNHHHNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNONONNNNONNHNNHHNNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNOTTTFFFTTFFTTTNNNNNNNONNNNNNNNNNNNOONNNNNOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNHHHNNNNNNNNNNNNNNNNNNHHHHHECFNNNNONNNNNSSSSSSSSSSSCCHHHHHHHHHHHHSFEOHENNCEEENHNNCCCEEHCECNNNFNNNNNNNNOOONNNNNFFONHNNNNNNHNNNNNONNNNNNFFFFONNNNNNNNNONNNNNNNNNNNNHNNOHNONNNNNNNNNNNNNFFONNNNNOHHHNNNONNNNHHHNNNNNNNHPPFFGPNONNNNNNONNNNNOONNNNNNONNNNNOONOONOONNONNNNNNNNNNSSHHHECHHHHHHHFNNNNNOOONOONNNO","n":["board","clear_bss","config","console","debug","drivers","error","fs","info","lang_items","log","mm","print","println","rust_main","sbi","stack_trace","sync","syscall","task","timer","trace","trap","warn","BlockDeviceImpl","CLOCK_FREQ","MEMORY_END","MMIO","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MEMORY_END","MMIO","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT","USER_STACK_SIZE","kernel_stack_position","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","BLOCK_DEVICE","","block","BLOCK_DEVICE","VirtIOBlock","__private_field","borrow","borrow_mut","deref","from","into","try_from","try_into","type_id","virtio_blk","QUEUE_FRAMES","VIRTIO0","VirtIOBlock","VirtioHal","__private_field","borrow","","","borrow_mut","","","deref","dma_alloc","dma_dealloc","from","","","into","","","new","phys_to_virt","read_block","try_from","","","try_into","","","type_id","","","virt_to_phys","write_block","File","OSInode","OpenFlags","Stderr","Stdin","Stdout","inode","list_apps","open_file","read","readable","stdio","writable","write","CREATE","OSInode","OSInodeInner","OpenFlags","RDONLY","RDWR","ROOT_INODE","TRUNC","WRONLY","__private_field","all","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","borrow_mut","","","","complement","contains","deref","difference","empty","extend","fmt","","","","from","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","inner","inode","insert","intersection","intersects","into","","","","into_iter","is_all","is_empty","iter","iter_names","list_apps","new","not","offset","open_file","read","read_all","read_write","readable","","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","","","","try_into","","","","type_id","","","","union","writable","","write","Stderr","Stdin","Stdout","borrow","","","borrow_mut","","","from","","","into","","","read","","","readable","","","try_from","","","try_into","","","type_id","","","writable","","","write","","","panic","SimpleLogger","TICK_COUNT","borrow","borrow_mut","cpu_id","enabled","flush","from","init","into","log","thread_id","timestamp","try_from","try_into","type_id","FrameTracker","KERNEL_SPACE","","MapPermission","MemorySet","PageTable","PageTableEntry","PhysAddr","PhysPageNum","StepByOne","UserBuffer","VPNRange","VirtAddr","VirtPageNum","address","frame_alloc","frame_allocator","frame_dealloc","heap_allocator","init","kernel_token","memory_set","page_table","remap_test","translated_byte_buffer","translated_refmut","translated_str","PA_WIDTH_SV39","PPN_WIDTH_SV39","PhysAddr","PhysPageNum","SimpleRange","SimpleRangeIterator","StepByOne","VA_WIDTH_SV39","VPNRange","VPN_WIDTH_SV39","VirtAddr","VirtPageNum","_ref","aligned","","borrow","","","","","","borrow_mut","","","","","","bytes_array","ceil","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","cmp","","","","current","end","","eq","","","","floor","","fmt","","","","from","","","","","","","","","","","","","","indexes","into","","","","","","into_iter","","l","","mut_ref","","new","","next","page_offset","","partial_cmp","","","","pte_array","r","","start","step","","","to_owned","","","","","try_from","","","","","","try_into","","","","","","type_id","","","","","","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","","borrow","","","borrow_mut","","","current","","dealloc","","deref","drop","end","","fmt","frame_alloc","frame_alloctor_test","frame_dealloc","from","","","init","init_frame_allocator","into","","","new","","","ppn","recycled","","try_from","","","try_into","","","type_id","","","HEAP_ALLOCATOR","HEAP_SPACE","alloc_error_handler","init_heap","Framed","Identical","KERNEL_SPACE","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","__private_field","activate","all","append_to","areas","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","complement","contains","copy_data","data_frames","deref","difference","ebss","edata","ekernel","empty","eq","erodata","etext","extend","fmt","","","","","from","","","","","from_another","from_bits","from_bits_retain","","from_bits_truncate","from_elf","from_existed_user","from_iter","from_name","insert","insert_framed_area","intersection","intersects","into","","","","","into_iter","is_all","is_empty","iter","iter_names","kernel_token","map","map_one","map_perm","map_trampoline","map_type","new","new_bare","new_kernel","not","page_table","push","recycle_data_pages","remap_test","remove","remove_area_with_start_vpn","sbss_with_stack","sdata","set","shrink_to","srodata","stext","strampoline","sub","sub_assign","symmetric_difference","to_owned","","toggle","token","translate","try_from","","","","","try_into","","","","","type_id","","","","","union","unmap","unmap_one","vpn_range","A","D","G","PTEFlags","PageTable","PageTableEntry","R","U","UserBuffer","UserBufferIterator","V","W","X","all","bitand","bitand_assign","bitor","bitor_assign","bits","","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","buffers","","clone","clone_into","clone_to_uninit","complement","contains","current_buffer","current_idx","difference","empty","","eq","executable","extend","find_pte","find_pte_create","flags","fmt","","","","frames","from","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","from_token","insert","intersection","intersects","into","","","","","into_iter","","","is_all","is_empty","is_valid","iter","iter_names","len","map","new","","","next","not","ppn","readable","remove","root_ppn","set","sub","sub_assign","symmetric_difference","to_owned","toggle","token","translate","translate_va","translated_byte_buffer","translated_refmut","translated_str","try_from","","","","","try_into","","","","","type_id","","","","","union","unmap","writable","console_getchar","console_putchar","shutdown","timer","print_stack_trace","UPSafeCell","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_CLOSE","SYSCALL_EXEC","SYSCALL_EXIT","SYSCALL_FORK","SYSCALL_OPEN","SYSCALL_PID","SYSCALL_READ","SYSCALL_TIME","SYSCALL_WAITPID","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","syscall","sys_close","sys_open","sys_read","sys_write","sys_exec","sys_exit","sys_fork","sys_pid","sys_time","sys_waitpid","sys_yield","IDLE_PID","INITPROC","TaskContext","__private_field","add_initproc","add_task","borrow","borrow_mut","context","current_task","current_trap_cx","current_user_token","deref","exit_current_and_run_next","from","into","manager","pid","processor","run_tasks","schedule","suspend_current_and_run_next","switch","take_current_task","task","try_from","try_into","type_id","TaskContext","borrow","borrow_mut","clone","clone_into","clone_to_uninit","from","goto_trap_return","into","ra","s","sp","to_owned","try_from","try_into","type_id","zero_init","TASK_MANAGER","TaskManager","__private_field","add","add_task","borrow","","borrow_mut","","deref","fetch","fetch_task","from","","into","","new","ready_queue","try_from","","try_into","","type_id","","KernelStack","PID_ALLOCATOR","PidAllocator","PidHandle","__private_field","alloc","borrow","","","","borrow_mut","","","","current","dealloc","deref","drop","","from","","","","into","","","","kernel_stack_position","new","","pid","pid_alloc","push_on_top","recycled","top","try_from","","","","try_into","","","","type_id","","","","PROCESSOR","Processor","__private_field","borrow","","borrow_mut","","current","","current_task","current_trap_cx","current_user_token","deref","from","","idle_task_cx","idle_task_cx_ptr","into","","new","run_tasks","schedule","take_current_task","task_current","try_from","","try_into","","type_id","","__switch","Ready","Running","TaskControlBlock","TaskControlBlockInner","TaskStatus","Zombie","alloc_fd","base_size","borrow","","","borrow_mut","","","children","clone","clone_into","clone_to_uninit","eq","exec","exit_code","fd_table","fmt","fork","from","","","getpid","inner","inner_exclusive_access","into","","","is_zombie","kernel_stack","memory_set","new","parent","pid","status","task_cx","task_status","to_owned","trap_cx","trap_cx_ppn","try_from","","","try_into","","","type_id","","","user_token","MSEC_PER_SEC","TICKS_PER_SEC","next_trigger","time","time_ms","TrapContext","context","enable_timer_interrupt","init","set_kernel_trap_entry","set_user_trap_entry","trap_from_kernel","trap_handler","trap_return","TrapContext","app_init_context","borrow","borrow_mut","from","into","kernel_satp","kernel_sp","sepc","sp","sstatus","trap_handler","try_from","try_into","type_id","x"],"q":[[0,"os"],[24,"os::board"],[28,"os::config"],[39,"os::console"],[49,"os::drivers"],[52,"os::drivers::block"],[64,"os::drivers::block::virtio_blk"],[98,"os::fs"],[112,"os::fs::inode"],[205,"os::fs::stdio"],[241,"os::lang_items"],[242,"os::log"],[258,"os::mm"],[285,"os::mm::address"],[413,"os::mm::frame_allocator"],[462,"os::mm::heap_allocator"],[466,"os::mm::memory_set"],[603,"os::mm::page_table"],[728,"os::sbi"],[732,"os::stack_trace"],[733,"os::sync"],[735,"os::sync::up"],[746,"os::syscall"],[760,"os::syscall::fs"],[764,"os::syscall::process"],[771,"os::task"],[799,"os::task::context"],[816,"os::task::manager"],[840,"os::task::pid"],[887,"os::task::processor"],[917,"os::task::switch"],[918,"os::task::task"],[973,"os::timer"],[978,"os::trap"],[987,"os::trap::context"],[1003,"core::fmt"],[1004,"core::result"],[1005,"core::any"],[1006,"easy_fs::block_dev"],[1007,"alloc::sync"],[1008,"alloc::vec"],[1009,"easy_fs::vfs"],[1010,"core::iter::traits::collect"],[1011,"core::option"],[1012,"bitflags::iter"],[1013,"core::panic::panic_info"],[1014,"log"],[1015,"core::marker"],[1016,"core::cmp"],[1017,"core::clone"],[1018,"buddy_system_allocator"],[1019,"core::alloc::layout"],[1020,"alloc::collections::btree::map"],[1021,"alloc::string"],[1022,"core::cell"],[1023,"alloc::collections::vec_deque"],[1024,"riscv::register::sstatus"]],"i":"````````````````````````````````````````Ad000`0000`````Aj00000000`````B`BjLd210220010210210110210210201`````````C`0`00Ch```00`00Cf111111111DhDf2310233323333333102333333301333102333333`031`003003333331023102310233000```DnE`Eb210210210210210210210210210210```Ef0`000`00``000```````````````````````````````````````El0EnGd21F`FbFd3542102545421054210542105421303542154542135554442221110135421030Gh1634146565323011Ff4376432576432576432576432`````GlGnH`0Bb31031Hb3241201```2142`214321120214214214````Ib0`````Hl000HhHj2Hn1333333330124301243434343330023```34``3433330124303333113331330124333333`000100113111`31``30```333433110124301243012433000If00```00``0000000000Gj11I`CbIh432104310333440044343422344442210434444442444210431044434412213043342444434222```210432104321043423````````Bf000000000````````````````````````````Jb``00````0`00`````````000`Jf000000000000000``JhJj`010110`010100010101````JnK`Kb1Kd312032231012031203`200`020120312031203``KhKj10100```10100010```0010101`L`0```0Kn0Jd1201212222011200120000121010101112110120120121```````````````Kl00000000000000","f":"`{{}b}````````````{{}d}``````````{{}f}0{{}h}`11``11111{f{{j{ff}}}}`{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}{cc{}}{{}c{}}{nb}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{hAb}{{{h{lAd}}{h{Af}}}Ah}`````{Ajb}98{{{h{Aj}}}{{h{{An{Al}}}}}}87543``=``{B`b};;;:::{{{h{B`}}}{{h{{Bf{{Bd{Bb}}}}}}}}{ff}{{ff}Bh}<<<;;;{{}Bj}2{{{h{Bj}}f{h{l{Bn{Bl}}}}}b};;;:::9993{{{h{Bj}}f{h{{Bn{Bl}}}}}b}`````````{{{h{C`}}Cb}f}{{{h{C`}}}Cd}`01`````````{Cfb}{{}Ch}{{ChCh}Ch}{{{h{lCh}}Ch}b}10{{{h{Ch}}}Cj}021{h{{h{c}}}{}}000{{{h{l}}}{{h{lc}}}{}}000{ChCh}{{{h{Ch}}Ch}Cd}{{{h{Cf}}}{{h{{An{Cl}}}}}}78{{{h{lCh}}c}b{{D`{}{{Cn{Ch}}}}}}{{{h{Ch}}{h{lDb}}}Ah}000{cc{}}000{Cj{{Dd{Ch}}}}{CjCh}00{cCh{{D`{}{{Cn{Ch}}}}}}{{{h{Af}}}{{Dd{Ch}}}}{DfBf}{DhAn}?{{ChCh}Ch};{{}c{}}000{Chc{}}{{{h{Ch}}}Cd}0{{{h{Ch}}}{{Dj{Ch}}}}{{{h{Ch}}}{{Dl{Ch}}}}{{}b}{{CdCd{An{Cl}}}Df}{ChCh}{Dhf}{{{h{Af}}Ch}{{Dd{{An{Df}}}}}}{{{h{Df}}Cb}f}{{{h{Df}}}{{Bd{Bl}}}}{{{h{Ch}}}{{j{CdCd}}}}{{{h{Df}}}Cd}{DfCd}{{{h{lCh}}Ch}b}{{{h{lCh}}ChCd}b}{{ChCh}Ch}202{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{hAb}000376:```{h{{h{c}}}{}}00{{{h{l}}}{{h{lc}}}{}}00{cc{}}00{{}c{}}00{{{h{Dn}}Cb}f}{{{h{E`}}Cb}f}{{{h{Eb}}Cb}f}{{{h{Dn}}}Cd}{{{h{E`}}}Cd}{{{h{Eb}}}Cd}<<<;;;:::210543{{{h{Ed}}}d}`{{}f};:0{{{h{Ef}}{h{Eh}}}Cd}{{{h{Ef}}}b};{{}b};{{{h{Ef}}{h{Ej}}}b}44{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{hAb}```````````````````4```````77`````7`7``{{{h{El}}}{{h{c}}}{}}{{{h{El}}}Cd}{{{h{En}}}Cd}{h{{h{c}}}{}}00000{{{h{l}}}{{h{lc}}}{}}00000{{{h{F`}}}{{h{l{Bn{Bl}}}}}}{{{h{El}}}F`}{{{h{En}}}Fb}{{{h{El}}}El}{{{h{En}}}En}{{{h{F`}}}F`}{{{h{Fb}}}Fb}{{{h{{Fd{c}}}}}{{Fd{c}}}{FfFhFjFlFnG`}}{{h{h{lc}}}b{}}0000{{hBl}b}0000{{{h{El}}{h{El}}}Gb}{{{h{En}}{h{En}}}Gb}{{{h{F`}}{h{F`}}}Gb}{{{h{Fb}}{h{Fb}}}Gb}{Gd}{{{h{{Fd{c}}}}}c{FfFhFjFlFn}}1{{{h{El}}{h{El}}}Cd}{{{h{En}}{h{En}}}Cd}{{{h{F`}}{h{F`}}}Cd}{{{h{Fb}}{h{Fb}}}Cd}{{{h{El}}}F`}{{{h{En}}}Fb}{{{h{El}}{h{lDb}}}Ah}{{{h{En}}{h{lDb}}}Ah}{{{h{F`}}{h{lDb}}}Ah}{{{h{Fb}}{h{lDb}}}Ah}{cc{}}0{fEl}{F`El}2{fEn}{FbEn}{ElF`}5{fF`}{EnFb}7{fFb}8{{{h{Fb}}}{{Gf{f}}}}{{}c{}}00000{{}c{}}{{{Fd{c}}}e{FfFhFjFlFn}{}}{GhFb}{Fd}{{{h{El}}}{{h{lc}}}{}}{{{h{F`}}}{{h{lc}}}{}}{{cc}{{Gd{c}}}{FfFhFjFlFn}}{{cc}{{Fd{c}}}{FfFhFjFlFn}}{{{h{l{Gd{c}}}}}{{Dd{e}}}{FfFhFjFlFn}{}}{{{h{El}}}f}{{{h{En}}}f}{{{h{El}}{h{El}}}{{Dd{Gb}}}}{{{h{En}}{h{En}}}{{Dd{Gb}}}}{{{h{F`}}{h{F`}}}{{Dd{Gb}}}}{{{h{Fb}}{h{Fb}}}{{Dd{Gb}}}}{{{h{F`}}}{{h{l{Bn{Gj}}}}}}=<{{{h{{Fd{c}}}}}c{FfFhFjFlFn}}{{{h{lFf}}}b}{{{h{lF`}}}b}{{{h{lFb}}}b}{hc{}}0000{c{{A`{e}}}{}{}}00000{{}{{A`{c}}}{}}00000{hAb}00000`````{Glb}{{{h{lGn}}}{{Dd{F`}}}}{{{h{lH`}}}{{Dd{F`}}}}{h{{h{c}}}{}}00{{{h{l}}}{{h{lc}}}{}}00{H`f}{Hbf}{{{h{lGn}}F`}b}{{{h{lH`}}F`}b}{{{h{Gl}}}{{h{{Bf{H`}}}}}}{{{h{lBb}}}b}54{{{h{Bb}}{h{lDb}}}Ah}{{}{{Dd{Bb}}}}{{}b}{F`b}{cc{}}00{{{h{lH`}}F`F`}b}3{{}c{}}00{{}Gn}{{}H`}{F`Bb}{BbF`}{H`Bd}{HbBd}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{hAb}00{{}Hd}{{}Gf}{Hfd}{{}b}```````````{Hhb}{{{h{Hj}}}b}{{}Hl}{{{h{lHn}}{h{lI`}}Fb}b}{HjBd}{{HlHl}Hl}{{{h{lHl}}Hl}b}10{{{h{Hl}}}Bl}021{h{{h{c}}}{}}0000{{{h{l}}}{{h{lc}}}{}}0000{{{h{Ib}}}Ib}{{{h{Hl}}}Hl}{{h{h{lc}}}b{}}0{{hBl}b}0{HlHl}{{{h{Hl}}Hl}Cd}{{{h{lHn}}{h{I`}}{h{{Bn{Bl}}}}}b}{HnId}{{{h{Hh}}}{{h{{An{{Bf{Hj}}}}}}}}={{}b}00{{}Hl}{{{h{Ib}}{h{Ib}}}Cd}22{{{h{lHl}}c}b{{D`{}{{Cn{Hl}}}}}}{{{h{Ib}}{h{lDb}}}Ah}{{{h{Hl}}{h{lDb}}}Ah}000{cc{}}0000{{{h{Hn}}}Hn}{Bl{{Dd{Hl}}}}{BlHl}00{{{h{{Bn{Bl}}}}}{{j{Hjff}}}}{{{h{Hj}}}Hj}{cHl{{D`{}{{Cn{Hl}}}}}}{{{h{Af}}}{{Dd{Hl}}}}{{{h{lHl}}Hl}b}{{{h{lHj}}EnEnHl}b}{{HlHl}Hl}{{{h{Hl}}Hl}Cd}{{}c{}}0000{Hlc{}}{{{h{Hl}}}Cd}0{{{h{Hl}}}{{Dj{Hl}}}}{{{h{Hl}}}{{Dl{Hl}}}}{{}f}{{{h{lHn}}{h{lI`}}}b}{{{h{lHn}}{h{lI`}}Fb}b}{HnHl}{{{h{lHj}}}b}{HnIb}{{EnEnIbHl}Hn}{{}Hj}0{HlHl}{HjI`}{{{h{lHj}}Hn{Dd{{h{{Bn{Bl}}}}}}}b}6{{}b}{{{h{lHl}}Hl}b}{{{h{lHj}}Fb}b}22{{{h{lHl}}HlCd}b}<333{{HlHl}Hl}30{hc{}}04{{{h{Hj}}}f}{{{h{Hj}}Fb}{{Dd{Gj}}}}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{hAb}00006{{{h{lHn}}{h{lI`}}}b}{{{h{lHn}}{h{lI`}}Fb}b}{HnFd}`````````````{{}If}{{IfIf}If}{{{h{lIf}}If}b}10{{{h{If}}}Bl}0{Gjf}32{h{{h{c}}}{}}0000{{{h{l}}}{{h{lc}}}{}}0000{CbBd}{IhBd}{{{h{Gj}}}Gj}{{h{h{lc}}}b{}}{{hBl}b}{IfIf}{{{h{If}}If}Cd}{Ihf}0=>{{}Gj}{{{h{If}}{h{If}}}Cd}{{{h{Gj}}}Cd}{{{h{lIf}}c}b{{D`{}{{Cn{If}}}}}}{{{h{I`}}Fb}{{Dd{{h{lGj}}}}}}{{{h{lI`}}Fb}{{Dd{{h{lGj}}}}}}{{{h{Gj}}}If}{{{h{If}}{h{lDb}}}Ah}000{I`Bd}{cc{}}0000{Bl{{Dd{If}}}}{BlIf}00{cIf{{D`{}{{Cn{If}}}}}}{{{h{Af}}}{{Dd{If}}}}{fI`}{{{h{lIf}}If}b}{{IfIf}If}{{{h{If}}If}Cd}{{}c{}}0000{Cbc{}}{{}c{}}{Ifc{}}{{{h{If}}}Cd}0{{{h{Gj}}}Cd}{{{h{If}}}{{Dj{If}}}}{{{h{If}}}{{Dl{If}}}}{{{h{Cb}}}f}{{{h{lI`}}FbF`If}b}{{}I`}{{{Bd{{h{l{Bn{Bl}}}}}}}Cb}{{F`If}Gj}{{{h{lIh}}}{{Dd{c}}}{}}{IfIf}{{{h{Gj}}}F`}:{{{h{lIf}}If}b}{I`F`}{{{h{lIf}}IfCd}b}{{IfIf}If}30{hc{}}4{{{h{I`}}}f}{{{h{I`}}Fb}{{Dd{Gj}}}}{{{h{I`}}En}{{Dd{El}}}}{{fBlf}{{Bd{{h{l{Bn{Bl}}}}}}}}{f{{h{lc}}}{}}{{fBl}Ij}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{hAb}0000:{{{h{lI`}}Fb}b}{{{h{Gj}}}Cd}{{}f}{fb}{Cdd}1{{}b}```{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}{{{h{{Bf{c}}}}}{{Il{c}}}{}}{cc{}}{BfIn}{{}c{}}{c{{Bf{c}}}{}}?>=:::::::::::``{{f{Gf{f}}}J`}{fJ`}{{BlCj}J`}{{fBlf}J`}0{BlJ`}{BhJ`}{{}J`}00{{J`Bh}J`}1{{}f}``{Jbb}{{}b}`{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}````{{{h{Jb}}}{{h{{An{Jd}}}}}}{Bhb}{cc{}}{{}c{}}`````6```{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{hAb}`87{{{h{Jf}}}Jf}{{h{h{lc}}}b{}}{{hBl}b}7{fJf}7{Jff}{JfGf}1{hc{}}987{{}Jf}``{Jhb}{{{h{lJj}}{An{Jd}}}b}{{{An{Jd}}}b}{h{{h{c}}}{}}0{{{h{l}}}{{h{lc}}}{}}0{{{h{Jh}}}{{h{{Bf{Jj}}}}}}{{{h{lJj}}}{{Dd{{An{Jd}}}}}}{{}{{Dd{{An{Jd}}}}}}{cc{}}0{{}c{}}0{{}Jj}{JjJl}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{hAb}0````{Jnb}{{{h{lK`}}}Kb}====<<<<{K`f}{{{h{lK`}}f}b}{{{h{Jn}}}{{h{{Bf{K`}}}}}}{{{h{lKb}}}b}{{{h{lKd}}}b}====<<<<{f{{j{ff}}}}{{}K`}{{{h{Kb}}}Kd}{Kdf}{{}Kb}{{{h{Kd}}c}{}Kf}{K`Bd}{{{h{Kd}}}f}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{hAb}000``{Khb}{h{{h{c}}}{}}0{{{h{l}}}{{h{lc}}}{}}0{{{h{Kj}}}{{Dd{{An{Jd}}}}}}{KjDd}{{}{{Dd{{An{Jd}}}}}}{{}{{h{lKl}}}}{{}f}{{{h{Kh}}}{{h{{Bf{Kj}}}}}}{cc{}}0{KjJf}{{{h{lKj}}}Jf}{{}c{}}0{{}Kj}{{}b}{Jfb}:{{{h{lKj}}}{{Dd{{An{Jd}}}}}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{hAb}0{{JfJf}b}``````{{{h{lKn}}}f}{Knf}{h{{h{c}}}{}}00{{{h{l}}}{{h{lc}}}{}}00{KnBd}{{{h{L`}}}L`}{{h{h{lc}}}b{}}{{hBl}b}{{{h{L`}}{h{L`}}}Cd}{{{h{Jd}}{h{{Bn{Bl}}}}}b}{KnBh}6{{{h{L`}}{h{lDb}}}Ah}{{{h{{An{Jd}}}}}{{An{Jd}}}}{cc{}}00{{{h{Jd}}}f}{JdBf}{{{h{Jd}}}{{Il{Kn}}}}{{}c{}}00{{{h{Kn}}}Cd}{JdKd}{KnHj}{{{h{{Bn{Bl}}}}}Jd}{KnDd}{JdKb}{{{h{Kn}}}L`}{KnJf}{KnL`}{hc{}}{{{h{Kn}}}{{h{lKl}}}}{KnF`}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{hAb}00{{{h{Kn}}}f}{{}f}0{{}b}11``0000{{}d}00`{{fffff}Kl}{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}{cc{}}{{}c{}}{Klf}00{{{h{lKl}}f}b}{KlLb}2>=<{KlGf}","D":"DFd","p":[[1,"unit"],[1,"never"],[1,"usize"],[1,"reference",null,null,1],[1,"tuple",null,null,1],[0,"mut"],[5,"Arguments",1003],[6,"Result",1004,null,1],[5,"TypeId",1005],[5,"Stdout",39],[1,"str"],[8,"Result",1003],[5,"BLOCK_DEVICE",52],[10,"BlockDevice",1006],[5,"Arc",1007,null,1],[5,"QUEUE_FRAMES",64],[5,"FrameTracker",413],[5,"Vec",1008],[5,"UPSafeCell",735],[1,"i32"],[5,"VirtIOBlock",64],[1,"u8"],[1,"slice"],[10,"File",98],[5,"UserBuffer",603],[1,"bool"],[5,"ROOT_INODE",112],[5,"OpenFlags",112],[1,"u32"],[5,"Inode",1009],[17,"Item"],[10,"IntoIterator",1010],[5,"Formatter",1003],[6,"Option",1011,null,1],[5,"OSInode",112],[5,"OSInodeInner",112],[5,"Iter",1012],[5,"IterNames",1012],[5,"Stdin",205],[5,"Stdout",205],[5,"Stderr",205],[5,"PanicInfo",1013],[5,"SimpleLogger",242],[5,"Metadata",1014],[5,"Record",1014],[5,"PhysAddr",285],[5,"VirtAddr",285],[5,"PhysPageNum",285],[5,"VirtPageNum",285],[5,"SimpleRange",285],[10,"StepByOne",285],[10,"Copy",1015],[10,"PartialEq",1016],[10,"PartialOrd",1016],[10,"Debug",1003],[10,"Clone",1017],[6,"Ordering",1016],[5,"SimpleRangeIterator",285],[1,"array"],[8,"VPNRange",285],[5,"PageTableEntry",603],[5,"FRAME_ALLOCATOR",413],[10,"FrameAllocator",413],[5,"StackFrameAllocator",413],[8,"FrameAllocatorImpl",413],[5,"LockedHeap",1018],[5,"Layout",1019],[5,"KERNEL_SPACE",466],[5,"MemorySet",466],[5,"MapPermission",466],[5,"MapArea",466],[5,"PageTable",603],[6,"MapType",466],[5,"BTreeMap",1020],[5,"PTEFlags",603],[5,"UserBufferIterator",603],[5,"String",1021],[5,"RefMut",1022],[5,"RefCell",1022],[1,"isize"],[5,"INITPROC",771],[5,"TaskControlBlock",918],[5,"TaskContext",799],[5,"TASK_MANAGER",816],[5,"TaskManager",816],[5,"VecDeque",1023],[5,"PID_ALLOCATOR",840],[5,"PidAllocator",840],[5,"PidHandle",840],[5,"KernelStack",840],[10,"Sized",1015],[5,"PROCESSOR",887],[5,"Processor",887],[5,"TrapContext",987],[5,"TaskControlBlockInner",918],[6,"TaskStatus",918],[5,"Sstatus",1024],[5,"VirtioHal",64]],"r":[[28,24],[31,24],[32,24],[49,52],[50,52],[53,64],[99,112],[100,112],[101,205],[102,205],[103,205],[105,112],[106,112],[258,413],[259,466],[260,466],[261,466],[262,466],[263,603],[264,603],[265,285],[266,285],[267,285],[268,603],[269,285],[270,285],[271,285],[273,413],[275,413],[278,466],[281,466],[282,603],[283,603],[284,603],[733,735],[773,799],[776,816],[780,887],[781,887],[782,887],[790,887],[791,887],[794,887],[978,987]],"b":[[127,"impl-OpenFlags"],[128,"impl-Flags-for-OpenFlags"],[145,"impl-Octal-for-OpenFlags"],[146,"impl-Binary-for-OpenFlags"],[147,"impl-UpperHex-for-OpenFlags"],[148,"impl-LowerHex-for-OpenFlags"],[154,"impl-OpenFlags"],[155,"impl-Flags-for-OpenFlags"],[349,"impl-From%3Cusize%3E-for-PhysAddr"],[350,"impl-From%3CPhysPageNum%3E-for-PhysAddr"],[352,"impl-From%3Cusize%3E-for-VirtAddr"],[353,"impl-From%3CVirtPageNum%3E-for-VirtAddr"],[354,"impl-From%3CPhysAddr%3E-for-PhysPageNum"],[356,"impl-From%3Cusize%3E-for-PhysPageNum"],[357,"impl-From%3CVirtAddr%3E-for-VirtPageNum"],[359,"impl-From%3Cusize%3E-for-VirtPageNum"],[486,"impl-MapPermission"],[487,"impl-Flags-for-MapPermission"],[521,"impl-LowerHex-for-MapPermission"],[522,"impl-UpperHex-for-MapPermission"],[523,"impl-Binary-for-MapPermission"],[524,"impl-Octal-for-MapPermission"],[532,"impl-MapPermission"],[533,"impl-Flags-for-MapPermission"],[621,"impl-Flags-for-PTEFlags"],[622,"impl-PTEFlags"],[654,"impl-LowerHex-for-PTEFlags"],[655,"impl-Octal-for-PTEFlags"],[656,"impl-UpperHex-for-PTEFlags"],[657,"impl-Binary-for-PTEFlags"],[665,"impl-Flags-for-PTEFlags"],[666,"impl-PTEFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAALkBbAAZAAQAIAABACkAAQAuAAIAMgABADYABAA9AAIARQAHAFgACABkAAQAagABAHEAAAB1AAEAeAACAIEAAACEAAcAjgAAAJIAAwCcAAAAoAABAKkAAACxAAAAtwAAAL4ACwDMAAAA0QAFAOMACAD1AAEAAAEQABIBAAAUAQAAFwEAABoBBQAlAQAAJwEAAC0BCwA8ARMAUQEEAFgBAwBeAQEAYQECAGUBAQBoAQAAcQEAAHMBAQB8AQMAgQEBAIcBFgCjAQAApgEFALABAADGAQgA3gEAAOIBAADoAQAA6wEPAP4BAQABAgIABQICAAkCBAAWAgAAJQIAAC0CAAAvAgAANAIAADoCAQA+AgIARAIBAEkCDgBbAgAAbgIAAHMCCQB/AgIAiQIAAI8CAwCaAgAAqQIBAL8CAADHAg4A3gIAAOECAQDoAg0ABgMBAAkDAgANAwMAFwMBABsDAAAdAwIAIQMEACwDAwAzAwAANgMEAEMDBQBNAwAATwMHAFkDAgBsAwsAegMEAIQDAACQAwUAnwMFAKYDAwCtAwAAwQMAAMQDCADTAwAA3gMBAOgDAgA=","P":[[40,"T"],[43,"U"],[44,""],[45,"U,T"],[46,"U"],[47,""],[55,"T"],[57,""],[58,"T"],[59,"U"],[60,"U,T"],[61,"U"],[62,""],[69,"T"],[75,""],[78,"T"],[81,"U"],[84,""],[87,"U,T"],[90,"U"],[93,""],[131,"T"],[139,""],[144,"T"],[145,""],[149,"T"],[153,""],[157,"T"],[158,""],[164,"U"],[168,"IntoIterator::IntoIter"],[169,""],[189,"U,T"],[193,"U"],[197,""],[208,"T"],[217,"U"],[220,""],[226,"U,T"],[229,"U"],[232,""],[244,"T"],[246,""],[249,"T"],[250,""],[251,"U"],[252,""],[255,"U,T"],[256,"U"],[257,""],[297,"T"],[298,""],[300,"T"],[312,""],[319,"T"],[325,""],[335,"T"],[336,""],[347,"T"],[349,""],[351,"T"],[352,""],[355,"T"],[356,""],[358,"T"],[359,""],[360,"T"],[361,""],[362,"U"],[368,"I"],[369,"T,IntoIterator::IntoIter"],[370,""],[372,"T"],[376,"T,Iterator::Item"],[377,""],[386,"T"],[387,""],[390,"T"],[395,"U,T"],[401,"U"],[407,""],[421,"T"],[427,""],[439,"T"],[442,""],[444,"U"],[447,""],[453,"U,T"],[456,"U"],[459,""],[490,"T"],[500,""],[502,"T"],[504,""],[519,"T"],[520,""],[525,"T"],[530,""],[537,"T"],[538,""],[543,"U"],[548,"IntoIterator::IntoIter"],[549,""],[579,"T"],[581,""],[584,"U,T"],[589,"U"],[594,""],[626,"T"],[636,""],[639,"T"],[640,""],[650,"T"],[651,""],[659,"T"],[664,""],[668,"T"],[669,""],[674,"U"],[679,"IntoIterator::IntoIter"],[680,"I"],[681,"IntoIterator::IntoIter"],[682,""],[692,"Iterator::Item"],[693,""],[702,"T"],[703,""],[708,"T"],[709,""],[710,"U,T"],[715,"U"],[720,""],[736,"T"],[740,""],[741,"U"],[742,"T"],[743,"U,T"],[744,"U"],[745,""],[777,"T"],[783,""],[785,"T"],[786,"U"],[792,""],[796,"U,T"],[797,"U"],[798,""],[800,"T"],[802,""],[803,"T"],[804,""],[805,"T"],[806,""],[807,"U"],[808,""],[811,"T"],[812,"U,T"],[813,"U"],[814,""],[821,"T"],[825,""],[828,"T"],[830,"U"],[832,""],[834,"U,T"],[836,"U"],[838,""],[846,"T"],[854,""],[859,"T"],[863,"U"],[867,""],[872,"T"],[873,""],[875,"U,T"],[879,"U"],[883,""],[890,"T"],[894,""],[900,"T"],[902,""],[904,"U"],[906,""],[911,"U,T"],[913,"U"],[915,""],[926,"T"],[932,""],[934,"T"],[935,""],[942,"T"],[945,""],[948,"U"],[951,""],[960,"T"],[961,""],[963,"U,T"],[966,"U"],[969,""],[989,"T"],[992,"U"],[993,""],[999,"U,T"],[1000,"U"],[1001,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[25040]}