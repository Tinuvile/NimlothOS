var searchIndex = new Map(JSON.parse('[["os",{"t":"CHCCQCQCQCCCQQHCCCCCCQCQISSSESSEESSSSSHFNNNNHNNNNEECFEONNNNNNNNCFSFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNKEEEECEEMMCMMTFFFTTFTTONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNHNNOHNNNNONNNNNNNNNNNNNNNNNNNNONFFNNNNNNNNNNNNNNNNNNNNNNHFJNNHNNNHNNHHNNNEEEEEEEEEEEEEECECECHECCEEEESSFFFFKSISFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNOONMNNNNNNNNNNNNNNNNNNNNNNNNNFKIFFOMNNNNNNNOOMNNNOONHHHNNNNHNNNMNNOOONNNNNNNNNJJHHPPFFFGFTTTTONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNONNHHHNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNONONNNNONNHNNHHNNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNOTTTFFFTTFFTTTNNNNNNNONNNNNNNNNNNNOONNNNNOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNHHHNNNNNNNNNNNNNNNNNNHHHHHECFNNNNONNNNNSSSSSSSSSSSCCHHHHHHHHHHHHSFEOHENNCEEENHNNCCCEEHCECNNNFNNNNNNNNOOONNNNNFFONHNNNNNNHNNNNNONNNNNNFFFFONNNNNNNNNONNNNNNNNNNNNHNNOHNONNNNNNNNNNNNNFFONNNNNOHHHNNNONNNNHHHNNNNNNNHPPFFGPNONNNNNNONNNNNOONNNNNNONNNNNOONOONOONNONNNNNNNNNNSSHHHECHHHHHHHFNNNNNOOONOONNNO","n":["board","clear_bss","config","console","debug","drivers","error","fs","info","lang_items","log","mm","print","println","rust_main","sbi","stack_trace","sync","syscall","task","timer","trace","trap","warn","BlockDeviceImpl","CLOCK_FREQ","MEMORY_END","MMIO","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MEMORY_END","MMIO","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT","USER_STACK_SIZE","kernel_stack_position","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","BLOCK_DEVICE","","block","BLOCK_DEVICE","VirtIOBlock","__private_field","borrow","borrow_mut","deref","from","into","try_from","try_into","type_id","virtio_blk","QUEUE_FRAMES","VIRTIO0","VirtIOBlock","VirtioHal","__private_field","borrow","","","borrow_mut","","","deref","dma_alloc","dma_dealloc","from","","","into","","","new","phys_to_virt","read_block","try_from","","","try_into","","","type_id","","","virt_to_phys","write_block","File","OSInode","OpenFlags","Stdin","Stdout","inode","list_apps","open_file","read","readable","stdio","writable","write","CREATE","OSInode","OSInodeInner","OpenFlags","RDONLY","RDWR","ROOT_INODE","TRUNC","WRONLY","__private_field","all","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","borrow_mut","","","","complement","contains","deref","difference","empty","extend","fmt","","","","from","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","inner","inode","insert","intersection","intersects","into","","","","into_iter","is_all","is_empty","iter","iter_names","list_apps","new","not","offset","open_file","read","read_all","read_write","readable","","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","","","","try_into","","","","type_id","","","","union","writable","","write","Stdin","Stdout","borrow","","borrow_mut","","from","","into","","read","","readable","","try_from","","try_into","","type_id","","writable","","write","","panic","SimpleLogger","TICK_COUNT","borrow","borrow_mut","cpu_id","enabled","flush","from","init","into","log","thread_id","timestamp","try_from","try_into","type_id","FrameTracker","KERNEL_SPACE","","MapPermission","MemorySet","PageTable","PageTableEntry","PhysAddr","PhysPageNum","StepByOne","UserBuffer","VPNRange","VirtAddr","VirtPageNum","address","frame_alloc","frame_allocator","frame_dealloc","heap_allocator","init","kernel_token","memory_set","page_table","remap_test","translated_byte_buffer","translated_refmut","translated_str","PA_WIDTH_SV39","PPN_WIDTH_SV39","PhysAddr","PhysPageNum","SimpleRange","SimpleRangeIterator","StepByOne","VA_WIDTH_SV39","VPNRange","VPN_WIDTH_SV39","VirtAddr","VirtPageNum","_ref","aligned","","borrow","","","","","","borrow_mut","","","","","","bytes_array","ceil","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","cmp","","","","current","end","","eq","","","","floor","","fmt","","","","from","","","","","","","","","","","","","","indexes","into","","","","","","into_iter","","l","","mut_ref","","new","","next","page_offset","","partial_cmp","","","","pte_array","r","","start","step","","","to_owned","","","","","try_from","","","","","","try_into","","","","","","type_id","","","","","","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","","borrow","","","borrow_mut","","","current","","dealloc","","deref","drop","end","","fmt","frame_alloc","frame_alloctor_test","frame_dealloc","from","","","init","init_frame_allocator","into","","","new","","","ppn","recycled","","try_from","","","try_into","","","type_id","","","HEAP_ALLOCATOR","HEAP_SPACE","alloc_error_handler","init_heap","Framed","Identical","KERNEL_SPACE","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","__private_field","activate","all","append_to","areas","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","complement","contains","copy_data","data_frames","deref","difference","ebss","edata","ekernel","empty","eq","erodata","etext","extend","fmt","","","","","from","","","","","from_another","from_bits","from_bits_retain","","from_bits_truncate","from_elf","from_existed_user","from_iter","from_name","insert","insert_framed_area","intersection","intersects","into","","","","","into_iter","is_all","is_empty","iter","iter_names","kernel_token","map","map_one","map_perm","map_trampoline","map_type","new","new_bare","new_kernel","not","page_table","push","recycle_data_pages","remap_test","remove","remove_area_with_start_vpn","sbss_with_stack","sdata","set","shrink_to","srodata","stext","strampoline","sub","sub_assign","symmetric_difference","to_owned","","toggle","token","translate","try_from","","","","","try_into","","","","","type_id","","","","","union","unmap","unmap_one","vpn_range","A","D","G","PTEFlags","PageTable","PageTableEntry","R","U","UserBuffer","UserBufferIterator","V","W","X","all","bitand","bitand_assign","bitor","bitor_assign","bits","","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","buffers","","clone","clone_into","clone_to_uninit","complement","contains","current_buffer","current_idx","difference","empty","","eq","executable","extend","find_pte","find_pte_create","flags","fmt","","","","frames","from","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","from_token","insert","intersection","intersects","into","","","","","into_iter","","","is_all","is_empty","is_valid","iter","iter_names","len","map","new","","","next","not","ppn","readable","remove","root_ppn","set","sub","sub_assign","symmetric_difference","to_owned","toggle","token","translate","translate_va","translated_byte_buffer","translated_refmut","translated_str","try_from","","","","","try_into","","","","","type_id","","","","","union","unmap","writable","console_getchar","console_putchar","shutdown","timer","print_stack_trace","UPSafeCell","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_CLOSE","SYSCALL_EXEC","SYSCALL_EXIT","SYSCALL_FORK","SYSCALL_OPEN","SYSCALL_PID","SYSCALL_READ","SYSCALL_TIME","SYSCALL_WAITPID","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","syscall","sys_close","sys_open","sys_read","sys_write","sys_exec","sys_exit","sys_fork","sys_pid","sys_time","sys_waitpid","sys_yield","IDLE_PID","INITPROC","TaskContext","__private_field","add_initproc","add_task","borrow","borrow_mut","context","current_task","current_trap_cx","current_user_token","deref","exit_current_and_run_next","from","into","manager","pid","processor","run_tasks","schedule","suspend_current_and_run_next","switch","take_current_task","task","try_from","try_into","type_id","TaskContext","borrow","borrow_mut","clone","clone_into","clone_to_uninit","from","goto_trap_return","into","ra","s","sp","to_owned","try_from","try_into","type_id","zero_init","TASK_MANAGER","TaskManager","__private_field","add","add_task","borrow","","borrow_mut","","deref","fetch","fetch_task","from","","into","","new","ready_queue","try_from","","try_into","","type_id","","KernelStack","PID_ALLOCATOR","PidAllocator","PidHandle","__private_field","alloc","borrow","","","","borrow_mut","","","","current","dealloc","deref","drop","","from","","","","into","","","","kernel_stack_position","new","","pid","pid_alloc","push_on_top","recycled","top","try_from","","","","try_into","","","","type_id","","","","PROCESSOR","Processor","__private_field","borrow","","borrow_mut","","current","","current_task","current_trap_cx","current_user_token","deref","from","","idle_task_cx","idle_task_cx_ptr","into","","new","run_tasks","schedule","take_current_task","task_current","try_from","","try_into","","type_id","","__switch","Ready","Running","TaskControlBlock","TaskControlBlockInner","TaskStatus","Zombie","alloc_fd","base_size","borrow","","","borrow_mut","","","children","clone","clone_into","clone_to_uninit","eq","exec","exit_code","fd_table","fmt","fork","from","","","getpid","inner","inner_exclusive_access","into","","","is_zombie","kernel_stack","memory_set","new","parent","pid","status","task_cx","task_status","to_owned","trap_cx","trap_cx_ppn","try_from","","","try_into","","","type_id","","","user_token","MSEC_PER_SEC","TICKS_PER_SEC","next_trigger","time","time_ms","TrapContext","context","enable_timer_interrupt","init","set_kernel_trap_entry","set_user_trap_entry","trap_from_kernel","trap_handler","trap_return","TrapContext","app_init_context","borrow","borrow_mut","from","into","kernel_satp","kernel_sp","sepc","sp","sstatus","trap_handler","try_from","try_into","type_id","x"],"q":[[0,"os"],[24,"os::board"],[28,"os::config"],[39,"os::console"],[49,"os::drivers"],[52,"os::drivers::block"],[64,"os::drivers::block::virtio_blk"],[98,"os::fs"],[111,"os::fs::inode"],[204,"os::fs::stdio"],[228,"os::lang_items"],[229,"os::log"],[245,"os::mm"],[272,"os::mm::address"],[400,"os::mm::frame_allocator"],[449,"os::mm::heap_allocator"],[453,"os::mm::memory_set"],[590,"os::mm::page_table"],[715,"os::sbi"],[719,"os::stack_trace"],[720,"os::sync"],[722,"os::sync::up"],[733,"os::syscall"],[747,"os::syscall::fs"],[751,"os::syscall::process"],[758,"os::task"],[786,"os::task::context"],[803,"os::task::manager"],[827,"os::task::pid"],[874,"os::task::processor"],[904,"os::task::switch"],[905,"os::task::task"],[960,"os::timer"],[965,"os::trap"],[974,"os::trap::context"],[990,"core::fmt"],[991,"core::result"],[992,"core::any"],[993,"easy_fs::block_dev"],[994,"alloc::sync"],[995,"alloc::vec"],[996,"easy_fs::vfs"],[997,"core::iter::traits::collect"],[998,"core::option"],[999,"bitflags::iter"],[1000,"core::panic::panic_info"],[1001,"log"],[1002,"core::marker"],[1003,"core::cmp"],[1004,"core::clone"],[1005,"buddy_system_allocator"],[1006,"core::alloc::layout"],[1007,"alloc::collections::btree::map"],[1008,"alloc::string"],[1009,"core::cell"],[1010,"alloc::collections::vec_deque"],[1011,"riscv::register::sstatus"]],"i":"````````````````````````````````````````Ad000`0000`````Aj00000000`````B`BjLb210220010210210110210210201````````C`0`00Ch```00`00Cf111111111DhDf2310233323333333102333333301333102333333`031`003003333331023102310233000``DnE`10101010101010101010```Ed0`000`00``000```````````````````````````````````````Ej0ElGb21EnF`Fb3542102545421054210542105421303542154542135554442221110135421030Gf1634146565323011Fd4376432576432576432576432`````GjGlGn0Bb31031H`3241201```2142`214321120214214214````I`0`````Hj000HfHh2Hl1333333330124301243434343330023```34``3433330124303333113331330124333333`000100113111`31``30```333433110124301243012433000Id00```00``0000000000Gh11HnCbIf432104310333440044343422344442210434444442444210431044434412213043342444434222```210432104321043423````````Bf000000000````````````````````````````J```00````0`00`````````000`Jd000000000000000``JfJh`010110`010100010101````JlJnK`1Kb312032231012031203`200`020120312031203``KfKh10100```10100010```0010101`Kn0```0Kl0Jb1201212222011200120000121010101112110120120121```````````````Kj00000000000000","f":"`{{}b}````````````{{}d}``````````{{}f}0{{}h}`11``11111{f{{j{ff}}}}`{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}{cc{}}{{}c{}}{nb}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{hAb}{{{h{lAd}}{h{Af}}}Ah}`````{Ajb}98{{{h{Aj}}}{{h{{An{Al}}}}}}87543``=``{B`b};;;:::{{{h{B`}}}{{h{{Bf{{Bd{Bb}}}}}}}}{ff}{{ff}Bh}<<<;;;{{}Bj}2{{{h{Bj}}f{h{l{Bn{Bl}}}}}b};;;:::9993{{{h{Bj}}f{h{{Bn{Bl}}}}}b}````````{{{h{C`}}Cb}f}{{{h{C`}}}Cd}`01`````````{Cfb}{{}Ch}{{ChCh}Ch}{{{h{lCh}}Ch}b}10{{{h{Ch}}}Cj}021{h{{h{c}}}{}}000{{{h{l}}}{{h{lc}}}{}}000{ChCh}{{{h{Ch}}Ch}Cd}{{{h{Cf}}}{{h{{An{Cl}}}}}}78{{{h{lCh}}c}b{{D`{}{{Cn{Ch}}}}}}{{{h{Ch}}{h{lDb}}}Ah}000{cc{}}000{Cj{{Dd{Ch}}}}{CjCh}00{cCh{{D`{}{{Cn{Ch}}}}}}{{{h{Af}}}{{Dd{Ch}}}}{DfBf}{DhAn}?{{ChCh}Ch};{{}c{}}000{Chc{}}{{{h{Ch}}}Cd}0{{{h{Ch}}}{{Dj{Ch}}}}{{{h{Ch}}}{{Dl{Ch}}}}{{}b}{{CdCd{An{Cl}}}Df}{ChCh}{Dhf}{{{h{Af}}Ch}{{Dd{{An{Df}}}}}}{{{h{Df}}Cb}f}{{{h{Df}}}{{Bd{Bl}}}}{{{h{Ch}}}{{j{CdCd}}}}{{{h{Df}}}Cd}{DfCd}{{{h{lCh}}Ch}b}{{{h{lCh}}ChCd}b}{{ChCh}Ch}202{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{hAb}000376:``{h{{h{c}}}{}}0{{{h{l}}}{{h{lc}}}{}}0{cc{}}0{{}c{}}0{{{h{Dn}}Cb}f}{{{h{E`}}Cb}f}{{{h{Dn}}}Cd}{{{h{E`}}}Cd}::99881032{{{h{Eb}}}d}`{{}f}980{{{h{Ed}}{h{Ef}}}Cd}{{{h{Ed}}}b}9{{}b}9{{{h{Ed}}{h{Eh}}}b}44{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{hAb}```````````````````4```````77`````7`7``{{{h{Ej}}}{{h{c}}}{}}{{{h{Ej}}}Cd}{{{h{El}}}Cd}{h{{h{c}}}{}}00000{{{h{l}}}{{h{lc}}}{}}00000{{{h{En}}}{{h{l{Bn{Bl}}}}}}{{{h{Ej}}}En}{{{h{El}}}F`}{{{h{Ej}}}Ej}{{{h{El}}}El}{{{h{En}}}En}{{{h{F`}}}F`}{{{h{{Fb{c}}}}}{{Fb{c}}}{FdFfFhFjFlFn}}{{h{h{lc}}}b{}}0000{{hBl}b}0000{{{h{Ej}}{h{Ej}}}G`}{{{h{El}}{h{El}}}G`}{{{h{En}}{h{En}}}G`}{{{h{F`}}{h{F`}}}G`}{Gb}{{{h{{Fb{c}}}}}c{FdFfFhFjFl}}1{{{h{Ej}}{h{Ej}}}Cd}{{{h{El}}{h{El}}}Cd}{{{h{En}}{h{En}}}Cd}{{{h{F`}}{h{F`}}}Cd}{{{h{Ej}}}En}{{{h{El}}}F`}{{{h{Ej}}{h{lDb}}}Ah}{{{h{El}}{h{lDb}}}Ah}{{{h{En}}{h{lDb}}}Ah}{{{h{F`}}{h{lDb}}}Ah}{cc{}}{fEj}{EnEj}2{F`El}{fEl}44{fEn}{EjEn}6{fF`}{ElF`}8{{{h{F`}}}{{Gd{f}}}}{{}c{}}00000{{}c{}}{{{Fb{c}}}e{FdFfFhFjFl}{}}{GfF`}{Fb}{{{h{Ej}}}{{h{lc}}}{}}{{{h{En}}}{{h{lc}}}{}}{{cc}{{Gb{c}}}{FdFfFhFjFl}}{{cc}{{Fb{c}}}{FdFfFhFjFl}}{{{h{l{Gb{c}}}}}{{Dd{e}}}{FdFfFhFjFl}{}}{{{h{Ej}}}f}{{{h{El}}}f}{{{h{Ej}}{h{Ej}}}{{Dd{G`}}}}{{{h{El}}{h{El}}}{{Dd{G`}}}}{{{h{En}}{h{En}}}{{Dd{G`}}}}{{{h{F`}}{h{F`}}}{{Dd{G`}}}}{{{h{En}}}{{h{l{Bn{Gh}}}}}}=<{{{h{{Fb{c}}}}}c{FdFfFhFjFl}}{{{h{lFd}}}b}{{{h{lEn}}}b}{{{h{lF`}}}b}{hc{}}0000{c{{A`{e}}}{}{}}00000{{}{{A`{c}}}{}}00000{hAb}00000`````{Gjb}{{{h{lGl}}}{{Dd{En}}}}{{{h{lGn}}}{{Dd{En}}}}{h{{h{c}}}{}}00{{{h{l}}}{{h{lc}}}{}}00{Gnf}{H`f}{{{h{lGl}}En}b}{{{h{lGn}}En}b}{{{h{Gj}}}{{h{{Bf{Gn}}}}}}{{{h{lBb}}}b}54{{{h{Bb}}{h{lDb}}}Ah}{{}{{Dd{Bb}}}}{{}b}{Enb}{cc{}}00{{{h{lGn}}EnEn}b}3{{}c{}}00{{}Gl}{{}Gn}{EnBb}{BbEn}{GnBd}{H`Bd}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{hAb}00{{}Hb}{{}Gd}{Hdd}{{}b}```````````{Hfb}{{{h{Hh}}}b}{{}Hj}{{{h{lHl}}{h{lHn}}F`}b}{HhBd}{{HjHj}Hj}{{{h{lHj}}Hj}b}10{{{h{Hj}}}Bl}021{h{{h{c}}}{}}0000{{{h{l}}}{{h{lc}}}{}}0000{{{h{I`}}}I`}{{{h{Hj}}}Hj}{{h{h{lc}}}b{}}0{{hBl}b}0{HjHj}{{{h{Hj}}Hj}Cd}{{{h{lHl}}{h{Hn}}{h{{Bn{Bl}}}}}b}{HlIb}{{{h{Hf}}}{{h{{An{{Bf{Hh}}}}}}}}={{}b}00{{}Hj}{{{h{I`}}{h{I`}}}Cd}22{{{h{lHj}}c}b{{D`{}{{Cn{Hj}}}}}}{{{h{I`}}{h{lDb}}}Ah}{{{h{Hj}}{h{lDb}}}Ah}000{cc{}}0000{{{h{Hl}}}Hl}{Bl{{Dd{Hj}}}}{BlHj}00{{{h{{Bn{Bl}}}}}{{j{Hhff}}}}{{{h{Hh}}}Hh}{cHj{{D`{}{{Cn{Hj}}}}}}{{{h{Af}}}{{Dd{Hj}}}}{{{h{lHj}}Hj}b}{{{h{lHh}}ElElHj}b}{{HjHj}Hj}{{{h{Hj}}Hj}Cd}{{}c{}}0000{Hjc{}}{{{h{Hj}}}Cd}0{{{h{Hj}}}{{Dj{Hj}}}}{{{h{Hj}}}{{Dl{Hj}}}}{{}f}{{{h{lHl}}{h{lHn}}}b}{{{h{lHl}}{h{lHn}}F`}b}{HlHj}{{{h{lHh}}}b}{HlI`}{{ElElI`Hj}Hl}{{}Hh}0{HjHj}{HhHn}{{{h{lHh}}Hl{Dd{{h{{Bn{Bl}}}}}}}b}6{{}b}{{{h{lHj}}Hj}b}{{{h{lHh}}F`}b}22{{{h{lHj}}HjCd}b}<333{{HjHj}Hj}30{hc{}}04{{{h{Hh}}}f}{{{h{Hh}}F`}{{Dd{Gh}}}}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{hAb}00006{{{h{lHl}}{h{lHn}}}b}{{{h{lHl}}{h{lHn}}F`}b}{HlFb}`````````````{{}Id}{{IdId}Id}{{{h{lId}}Id}b}10{{{h{Id}}}Bl}0{Ghf}32{h{{h{c}}}{}}0000{{{h{l}}}{{h{lc}}}{}}0000{CbBd}{IfBd}{{{h{Gh}}}Gh}{{h{h{lc}}}b{}}{{hBl}b}{IdId}{{{h{Id}}Id}Cd}{Iff}0=>{{}Gh}{{{h{Id}}{h{Id}}}Cd}{{{h{Gh}}}Cd}{{{h{lId}}c}b{{D`{}{{Cn{Id}}}}}}{{{h{Hn}}F`}{{Dd{{h{lGh}}}}}}{{{h{lHn}}F`}{{Dd{{h{lGh}}}}}}{{{h{Gh}}}Id}{{{h{Id}}{h{lDb}}}Ah}000{HnBd}{cc{}}0000{Bl{{Dd{Id}}}}{BlId}00{cId{{D`{}{{Cn{Id}}}}}}{{{h{Af}}}{{Dd{Id}}}}{fHn}{{{h{lId}}Id}b}{{IdId}Id}{{{h{Id}}Id}Cd}{{}c{}}0000{Cbc{}}{{}c{}}{Idc{}}{{{h{Id}}}Cd}0{{{h{Gh}}}Cd}{{{h{Id}}}{{Dj{Id}}}}{{{h{Id}}}{{Dl{Id}}}}{{{h{Cb}}}f}{{{h{lHn}}F`EnId}b}{{}Hn}{{{Bd{{h{l{Bn{Bl}}}}}}}Cb}{{EnId}Gh}{{{h{lIf}}}{{Dd{c}}}{}}{IdId}{{{h{Gh}}}En}:{{{h{lId}}Id}b}{HnEn}{{{h{lId}}IdCd}b}{{IdId}Id}30{hc{}}4{{{h{Hn}}}f}{{{h{Hn}}F`}{{Dd{Gh}}}}{{{h{Hn}}El}{{Dd{Ej}}}}{{fBlf}{{Bd{{h{l{Bn{Bl}}}}}}}}{f{{h{lc}}}{}}{{fBl}Ih}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{hAb}0000:{{{h{lHn}}F`}b}{{{h{Gh}}}Cd}{{}f}{fb}{Cdd}1{{}b}```{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}{{{h{{Bf{c}}}}}{{Ij{c}}}{}}{cc{}}{BfIl}{{}c{}}{c{{Bf{c}}}{}}?>=:::::::::::``{{f{Gd{f}}}In}{fIn}{{BlCj}In}{{fBlf}In}0{BlIn}{BhIn}{{}In}00{{InBh}In}1{{}f}``{J`b}{{}b}`{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}````{{{h{J`}}}{{h{{An{Jb}}}}}}{Bhb}{cc{}}{{}c{}}`````6```{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{hAb}`87{{{h{Jd}}}Jd}{{h{h{lc}}}b{}}{{hBl}b}7{fJd}7{Jdf}{JdGd}1{hc{}}987{{}Jd}``{Jfb}{{{h{lJh}}{An{Jb}}}b}{{{An{Jb}}}b}{h{{h{c}}}{}}0{{{h{l}}}{{h{lc}}}{}}0{{{h{Jf}}}{{h{{Bf{Jh}}}}}}{{{h{lJh}}}{{Dd{{An{Jb}}}}}}{{}{{Dd{{An{Jb}}}}}}{cc{}}0{{}c{}}0{{}Jh}{JhJj}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{hAb}0````{Jlb}{{{h{lJn}}}K`}====<<<<{Jnf}{{{h{lJn}}f}b}{{{h{Jl}}}{{h{{Bf{Jn}}}}}}{{{h{lK`}}}b}{{{h{lKb}}}b}====<<<<{f{{j{ff}}}}{{}Jn}{{{h{K`}}}Kb}{Kbf}{{}K`}{{{h{Kb}}c}{}Kd}{JnBd}{{{h{Kb}}}f}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{hAb}000``{Kfb}{h{{h{c}}}{}}0{{{h{l}}}{{h{lc}}}{}}0{{{h{Kh}}}{{Dd{{An{Jb}}}}}}{KhDd}{{}{{Dd{{An{Jb}}}}}}{{}{{h{lKj}}}}{{}f}{{{h{Kf}}}{{h{{Bf{Kh}}}}}}{cc{}}0{KhJd}{{{h{lKh}}}Jd}{{}c{}}0{{}Kh}{{}b}{Jdb}:{{{h{lKh}}}{{Dd{{An{Jb}}}}}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{hAb}0{{JdJd}b}``````{{{h{lKl}}}f}{Klf}{h{{h{c}}}{}}00{{{h{l}}}{{h{lc}}}{}}00{KlBd}{{{h{Kn}}}Kn}{{h{h{lc}}}b{}}{{hBl}b}{{{h{Kn}}{h{Kn}}}Cd}{{{h{Jb}}{h{{Bn{Bl}}}}}b}{KlBh}6{{{h{Kn}}{h{lDb}}}Ah}{{{h{{An{Jb}}}}}{{An{Jb}}}}{cc{}}00{{{h{Jb}}}f}{JbBf}{{{h{Jb}}}{{Ij{Kl}}}}{{}c{}}00{{{h{Kl}}}Cd}{JbKb}{KlHh}{{{h{{Bn{Bl}}}}}Jb}{KlDd}{JbK`}{{{h{Kl}}}Kn}{KlJd}{KlKn}{hc{}}{{{h{Kl}}}{{h{lKj}}}}{KlEn}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{hAb}00{{{h{Kl}}}f}{{}f}0{{}b}11``0000{{}d}00`{{fffff}Kj}{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}{cc{}}{{}c{}}{Kjf}00{{{h{lKj}}f}b}{KjL`}2>=<{KjGd}","D":"CMd","p":[[1,"unit"],[1,"never"],[1,"usize"],[1,"reference",null,null,1],[1,"tuple",null,null,1],[0,"mut"],[5,"Arguments",990],[6,"Result",991,null,1],[5,"TypeId",992],[5,"Stdout",39],[1,"str"],[8,"Result",990],[5,"BLOCK_DEVICE",52],[10,"BlockDevice",993],[5,"Arc",994,null,1],[5,"QUEUE_FRAMES",64],[5,"FrameTracker",400],[5,"Vec",995],[5,"UPSafeCell",722],[1,"i32"],[5,"VirtIOBlock",64],[1,"u8"],[1,"slice"],[10,"File",98],[5,"UserBuffer",590],[1,"bool"],[5,"ROOT_INODE",111],[5,"OpenFlags",111],[1,"u32"],[5,"Inode",996],[17,"Item"],[10,"IntoIterator",997],[5,"Formatter",990],[6,"Option",998,null,1],[5,"OSInode",111],[5,"OSInodeInner",111],[5,"Iter",999],[5,"IterNames",999],[5,"Stdin",204],[5,"Stdout",204],[5,"PanicInfo",1000],[5,"SimpleLogger",229],[5,"Metadata",1001],[5,"Record",1001],[5,"PhysAddr",272],[5,"VirtAddr",272],[5,"PhysPageNum",272],[5,"VirtPageNum",272],[5,"SimpleRange",272],[10,"StepByOne",272],[10,"Copy",1002],[10,"PartialEq",1003],[10,"PartialOrd",1003],[10,"Debug",990],[10,"Clone",1004],[6,"Ordering",1003],[5,"SimpleRangeIterator",272],[1,"array"],[8,"VPNRange",272],[5,"PageTableEntry",590],[5,"FRAME_ALLOCATOR",400],[10,"FrameAllocator",400],[5,"StackFrameAllocator",400],[8,"FrameAllocatorImpl",400],[5,"LockedHeap",1005],[5,"Layout",1006],[5,"KERNEL_SPACE",453],[5,"MemorySet",453],[5,"MapPermission",453],[5,"MapArea",453],[5,"PageTable",590],[6,"MapType",453],[5,"BTreeMap",1007],[5,"PTEFlags",590],[5,"UserBufferIterator",590],[5,"String",1008],[5,"RefMut",1009],[5,"RefCell",1009],[1,"isize"],[5,"INITPROC",758],[5,"TaskControlBlock",905],[5,"TaskContext",786],[5,"TASK_MANAGER",803],[5,"TaskManager",803],[5,"VecDeque",1010],[5,"PID_ALLOCATOR",827],[5,"PidAllocator",827],[5,"PidHandle",827],[5,"KernelStack",827],[10,"Sized",1002],[5,"PROCESSOR",874],[5,"Processor",874],[5,"TrapContext",974],[5,"TaskControlBlockInner",905],[6,"TaskStatus",905],[5,"Sstatus",1011],[5,"VirtioHal",64]],"r":[[28,24],[31,24],[32,24],[49,52],[50,52],[53,64],[99,111],[100,111],[101,204],[102,204],[104,111],[105,111],[245,400],[246,453],[247,453],[248,453],[249,453],[250,590],[251,590],[252,272],[253,272],[254,272],[255,590],[256,272],[257,272],[258,272],[260,400],[262,400],[265,453],[268,453],[269,590],[270,590],[271,590],[720,722],[760,786],[763,803],[767,874],[768,874],[769,874],[777,874],[778,874],[781,874],[965,974]],"b":[[126,"impl-Flags-for-OpenFlags"],[127,"impl-OpenFlags"],[144,"impl-UpperHex-for-OpenFlags"],[145,"impl-Binary-for-OpenFlags"],[146,"impl-Octal-for-OpenFlags"],[147,"impl-LowerHex-for-OpenFlags"],[153,"impl-OpenFlags"],[154,"impl-Flags-for-OpenFlags"],[335,"impl-From%3Cusize%3E-for-PhysAddr"],[336,"impl-From%3CPhysPageNum%3E-for-PhysAddr"],[338,"impl-From%3CVirtPageNum%3E-for-VirtAddr"],[339,"impl-From%3Cusize%3E-for-VirtAddr"],[342,"impl-From%3Cusize%3E-for-PhysPageNum"],[343,"impl-From%3CPhysAddr%3E-for-PhysPageNum"],[345,"impl-From%3Cusize%3E-for-VirtPageNum"],[346,"impl-From%3CVirtAddr%3E-for-VirtPageNum"],[473,"impl-MapPermission"],[474,"impl-Flags-for-MapPermission"],[508,"impl-Binary-for-MapPermission"],[509,"impl-Octal-for-MapPermission"],[510,"impl-LowerHex-for-MapPermission"],[511,"impl-UpperHex-for-MapPermission"],[519,"impl-MapPermission"],[520,"impl-Flags-for-MapPermission"],[608,"impl-Flags-for-PTEFlags"],[609,"impl-PTEFlags"],[641,"impl-Octal-for-PTEFlags"],[642,"impl-LowerHex-for-PTEFlags"],[643,"impl-UpperHex-for-PTEFlags"],[644,"impl-Binary-for-PTEFlags"],[652,"impl-Flags-for-PTEFlags"],[653,"impl-PTEFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPQBbwAGAAAACAAAABkABAAgAAEAKQABAC4AAgAyAAgAPQARAFUAJAB/AAAAgwAHAI0AAACRAAMAmwAAAJ8AAQCoAAAArQABALAABgC9AAsAygAIANcADQDoAAEA8wAQAAUBAAAHAQAACgEAAA0BBQAYAQAAGgEAAB0BAAAgAQsALwETAEQBBABLAQMAUAEBAFMBAQBXAQEAWgEBAGQBAABmAQEAbwEDAHQBAQB4AQAAegEWAJYBAACZAQUAowEAALkBCADRAQAA1QEAANsBAADeAQ8A8QEBAPQBAgD4AQIA/AEEAAkCAAAYAgAAHQIAACACAAAiAgAAJwIAAC0CAQAxAgIANwIBADwCDgBOAgAAVwIBAGECAABmAg4AdwIBAHwCAACCAgMAjQIAAJsCAgCjAgAApgIAAKgCAACyAgAAugIOANECAADUAgEA2wINAOwCAwD5AgEA/AICAAADAwAKAwEADgMAABADAgAUAwQAHwMDACYDAAApAwQANgMFAEADAABCAwcATAMCAF8DCwBtAwQAdwMAAIMDBQCQAwAAkgMFAJkDAwCfAwEAtAMAALcDCADGAwAA0QMBANsDAgA=","P":[[40,"T"],[43,"U"],[44,""],[45,"U,T"],[46,"U"],[47,""],[55,"T"],[57,""],[58,"T"],[59,"U"],[60,"U,T"],[61,"U"],[62,""],[69,"T"],[75,""],[78,"T"],[81,"U"],[84,""],[87,"U,T"],[90,"U"],[93,""],[130,"T"],[138,""],[143,"T"],[144,""],[148,"T"],[152,""],[156,"T"],[157,""],[163,"U"],[167,"IntoIterator::IntoIter"],[168,""],[188,"U,T"],[192,"U"],[196,""],[206,"T"],[212,"U"],[214,""],[218,"U,T"],[220,"U"],[222,""],[231,"T"],[233,""],[236,"T"],[237,""],[238,"U"],[239,""],[242,"U,T"],[243,"U"],[244,""],[284,"T"],[285,""],[287,"T"],[299,""],[306,"T"],[312,""],[322,"T"],[323,""],[334,"T"],[335,""],[337,"T"],[338,""],[340,"T"],[342,""],[344,"T"],[345,""],[347,"T"],[348,""],[349,"U"],[355,"I"],[356,"T,IntoIterator::IntoIter"],[357,""],[359,"T"],[363,"T,Iterator::Item"],[364,""],[373,"T"],[374,""],[377,"T"],[382,"U,T"],[388,"U"],[394,""],[408,"T"],[414,""],[426,"T"],[429,""],[431,"U"],[434,""],[440,"U,T"],[443,"U"],[446,""],[477,"T"],[487,""],[489,"T"],[491,""],[506,"T"],[507,""],[512,"T"],[517,""],[524,"T"],[525,""],[530,"U"],[535,"IntoIterator::IntoIter"],[536,""],[566,"T"],[568,""],[571,"U,T"],[576,"U"],[581,""],[613,"T"],[623,""],[626,"T"],[627,""],[637,"T"],[638,""],[646,"T"],[651,""],[655,"T"],[656,""],[661,"U"],[666,"IntoIterator::IntoIter"],[667,"I"],[668,"IntoIterator::IntoIter"],[669,""],[679,"Iterator::Item"],[680,""],[689,"T"],[690,""],[695,"T"],[696,""],[697,"U,T"],[702,"U"],[707,""],[723,"T"],[727,""],[728,"U"],[729,"T"],[730,"U,T"],[731,"U"],[732,""],[764,"T"],[770,""],[772,"T"],[773,"U"],[779,""],[783,"U,T"],[784,"U"],[785,""],[787,"T"],[789,""],[790,"T"],[791,""],[792,"T"],[793,""],[794,"U"],[795,""],[798,"T"],[799,"U,T"],[800,"U"],[801,""],[808,"T"],[812,""],[815,"T"],[817,"U"],[819,""],[821,"U,T"],[823,"U"],[825,""],[833,"T"],[841,""],[846,"T"],[850,"U"],[854,""],[859,"T"],[860,""],[862,"U,T"],[866,"U"],[870,""],[877,"T"],[881,""],[887,"T"],[889,""],[891,"U"],[893,""],[898,"U,T"],[900,"U"],[902,""],[913,"T"],[919,""],[921,"T"],[922,""],[929,"T"],[932,""],[935,"U"],[938,""],[947,"T"],[948,""],[950,"U,T"],[953,"U"],[956,""],[976,"T"],[979,"U"],[980,""],[986,"U,T"],[987,"U"],[988,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[24887]}