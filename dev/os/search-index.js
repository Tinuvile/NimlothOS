var searchIndex = new Map(JSON.parse('[["os",{"t":"CHCCQQQCCCCQQHCCCCCCQCQSSSESSEESSSSSHFNNNNHNNNNHFOHHNNNNNHHNNNFJNNHNNNHNNHHNNNEEEEEEEEEECECCHCCEEEESSFFFFKSISFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNOONMNNNNNNNNNNNNNNNNNNNNNNNNFKIFFOMNNNNNNNOOMNNNOONHHHNNNNHNNNMNNOOONNNNNNNNNJJHHPPFFFGFTTTTONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNONNHHHNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNONNHNNHHNNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNOTTTFFFTTTTTNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNHHHNNNNNNNNNNNNHHHHHECFNNNNONNNNNSSSSSSSSSCCHSSHHHHHHHHHSFEOHENNCEEENHNNCCCEEHCECNNNFNNNNNNNNOOONNNNNFFONHNNNNNNHNNNNNONNNNNNFFFFONNNNNNNNNONNNNNNNNNNNNHNNOHNONNNNNNNNNNNNNFFONNNNNOHHHNNNONNNNHHHNNNNNNNHPPFFGPONNNNNNONNNNNONNNNNNONNNNNOONOONOONNONNNNNNNNNNSSHHHECHHHHHHHFNNNNNOOONOONNNO","n":["board","clear_bss","config","console","debug","error","info","lang_items","loader","log","mm","print","println","rust_main","sbi","stack_trace","sync","syscall","task","timer","trace","trap","warn","CLOCK_FREQ","MEMORY_END","MMIO","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MEMORY_END","MMIO","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT","USER_STACK_SIZE","kernel_stack_position","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","panic","APP_NAMES","__private_field","app_data","app_data_by_name","borrow","borrow_mut","deref","from","into","list_apps","num_app","try_from","try_into","type_id","SimpleLogger","TICK_COUNT","borrow","borrow_mut","cpu_id","enabled","flush","from","init","into","log","thread_id","timestamp","try_from","try_into","type_id","FrameTracker","KERNEL_SPACE","","MapPermission","MemorySet","PageTableEntry","PhysAddr","PhysPageNum","VirtAddr","VirtPageNum","address","frame_alloc","frame_allocator","heap_allocator","init","memory_set","page_table","remap_test","translated_byte_buffer","translated_refmut","translated_str","PA_WIDTH_SV39","PPN_WIDTH_SV39","PhysAddr","PhysPageNum","SimpleRange","SimpleRangeIterator","StepByOne","VA_WIDTH_SV39","VPNRange","VPN_WIDTH_SV39","VirtAddr","VirtPageNum","aligned","","borrow","","","","","","borrow_mut","","","","","","bytes_array","ceil","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","cmp","","","","current","end","","eq","","","","floor","","fmt","","","","from","","","","","","","","","","","","","","indexes","into","","","","","","into_iter","","l","","mut_ref","","new","","next","page_offset","","partial_cmp","","","","pte_array","r","","start","step","","to_owned","","","","","try_from","","","","","","try_into","","","","","","type_id","","","","","","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","","borrow","","","borrow_mut","","","current","","dealloc","","deref","drop","end","","fmt","frame_alloc","frame_alloctor_test","frame_dealloc","from","","","init","init_frame_allocator","into","","","new","","","ppn","recycled","","try_from","","","try_into","","","type_id","","","HEAP_ALLOCATOR","HEAP_SPACE","alloc_error_handler","init_heap","Framed","Identical","KERNEL_SPACE","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","__private_field","activate","all","append_to","areas","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","complement","contains","copy_data","data_frames","deref","difference","ebss","edata","ekernel","empty","eq","erodata","etext","extend","fmt","","","","","from","","","","","from_another","from_bits","from_bits_retain","","from_bits_truncate","from_elf","from_existed_user","from_iter","from_name","insert","insert_framed_area","intersection","intersects","into","","","","","into_iter","is_all","is_empty","iter","iter_names","map","map_one","map_perm","map_trampoline","map_type","new","new_bare","new_kernel","not","page_table","push","recycle_data_pages","remap_test","remove","remove_area_with_start_vpn","sbss_with_stack","sdata","set","shrink_to","srodata","stext","strampoline","sub","sub_assign","symmetric_difference","to_owned","","toggle","token","translate","try_from","","","","","try_into","","","","","type_id","","","","","union","unmap","unmap_one","vpn_range","A","D","G","PTEFlags","PageTable","PageTableEntry","R","U","V","W","X","all","bitand","bitand_assign","bitor","bitor_assign","bits","","","bitxor","bitxor_assign","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","complement","contains","difference","empty","","eq","executable","extend","find_pte","find_pte_create","flags","fmt","","","","frames","from","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","from_token","insert","intersection","intersects","into","","","into_iter","is_all","is_empty","is_valid","iter","iter_names","map","new","","not","ppn","readable","remove","root_ppn","set","sub","sub_assign","symmetric_difference","to_owned","toggle","token","translate","translate_va","translated_byte_buffer","translated_refmut","translated_str","try_from","","","try_into","","","type_id","","","union","unmap","writable","console_getchar","console_putchar","shutdown","timer","print_stack_trace","UPSafeCell","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_EXEC","SYSCALL_EXIT","SYSCALL_FORK","SYSCALL_PID","SYSCALL_READ","SYSCALL_TIME","SYSCALL_WAITPID","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","syscall","FD_STDIN","FD_STDOUT","sys_read","sys_write","sys_exec","sys_exit","sys_fork","sys_pid","sys_time","sys_waitpid","sys_yield","IDLE_PID","INITPROC","TaskContext","__private_field","add_initproc","add_task","borrow","borrow_mut","context","current_task","current_trap_cx","current_user_token","deref","exit_current_and_run_next","from","into","manager","pid","processor","run_tasks","schedule","suspend_current_and_run_next","switch","take_current_task","task","try_from","try_into","type_id","TaskContext","borrow","borrow_mut","clone","clone_into","clone_to_uninit","from","goto_trap_return","into","ra","s","sp","to_owned","try_from","try_into","type_id","zero_init","TASK_MANAGER","TaskManager","__private_field","add","add_task","borrow","","borrow_mut","","deref","fetch","fetch_task","from","","into","","new","ready_queue","try_from","","try_into","","type_id","","KernelStack","PID_ALLOCATOR","PidAllocator","PidHandle","__private_field","alloc","borrow","","","","borrow_mut","","","","current","dealloc","deref","drop","","from","","","","into","","","","kernel_stack_position","new","","pid","pid_alloc","push_on_top","recycled","top","try_from","","","","try_into","","","","type_id","","","","PROCESSOR","Processor","__private_field","borrow","","borrow_mut","","current","","current_task","current_trap_cx","current_user_token","deref","from","","idle_task_cx","idle_task_cx_ptr","into","","new","run_tasks","schedule","take_current_task","task_current","try_from","","try_into","","type_id","","__switch","Ready","Running","TaskControlBlock","TaskControlBlockInner","TaskStatus","Zombie","base_size","borrow","","","borrow_mut","","","children","clone","clone_into","clone_to_uninit","eq","exec","exit_code","fmt","fork","from","","","getpid","inner","inner_exclusive_access","into","","","is_zombie","kernel_stack","memory_set","new","parent","pid","status","task_cx","task_status","to_owned","trap_cx","trap_cx_ppn","try_from","","","try_into","","","type_id","","","user_token","MSEC_PER_SEC","TICKS_PER_SEC","next_trigger","time","time_ms","TrapContext","context","enable_timer_interrupt","init","set_kernel_trap_entry","set_user_trap_entry","trap_from_kernel","trap_handler","trap_return","TrapContext","app_init_context","borrow","borrow_mut","from","into","kernel_satp","kernel_sp","sepc","sp","sstatus","trap_handler","try_from","try_into","type_id","x"],"q":[[0,"os"],[23,"os::board"],[26,"os::config"],[37,"os::console"],[47,"os::lang_items"],[48,"os::loader"],[62,"os::log"],[78,"os::mm"],[99,"os::mm::address"],[225,"os::mm::frame_allocator"],[274,"os::mm::heap_allocator"],[278,"os::mm::memory_set"],[414,"os::mm::page_table"],[514,"os::sbi"],[518,"os::stack_trace"],[519,"os::sync"],[521,"os::sync::up"],[532,"os::syscall"],[544,"os::syscall::fs"],[548,"os::syscall::process"],[555,"os::task"],[583,"os::task::context"],[600,"os::task::manager"],[624,"os::task::pid"],[671,"os::task::processor"],[701,"os::task::switch"],[702,"os::task::task"],[755,"os::timer"],[760,"os::trap"],[769,"os::trap::context"],[785,"core::fmt"],[786,"core::result"],[787,"core::any"],[788,"core::panic::panic_info"],[789,"core::option"],[790,"alloc::vec"],[791,"log"],[792,"core::marker"],[793,"core::cmp"],[794,"core::clone"],[795,"buddy_system_allocator"],[796,"core::alloc::layout"],[797,"alloc::collections::btree::map"],[798,"alloc::sync"],[799,"core::iter::traits::collect"],[800,"bitflags::iter"],[801,"alloc::string"],[802,"core::cell"],[803,"alloc::collections::vec_deque"],[804,"riscv::register::sstatus"]],"i":"``````````````````````````````````````Ad000`0000``Al``00000``000``Bf0`000`00``000`````````````````````````````````BnC`Df21CbCdCf3542102545421054210542105421303542154542135554442221110135421030Dl1634146565323011Ch376432576432576432576432`````E`EbEd0Ej31031Ef3241201```2142`214321120214214214````Fj0`````Fd000F`Fb2Ff1333333330124301243434343330023```34``3433330124303333113331330124333333000100113111`31``30```333433110124301243012433000Gh00```000000000000Dn11Fh210211112222121200122220021222222022202122212200121120222212000```021021021201````````Eh000000000``````````````````````````Hd``00````0`00`````````000`Hh000000000000000``HjHl`010110`010100010101````I`IbId1If312032231012031203`200`020120312031203``IjIl10100```10100010```0010101`Jb0```0J`Hf120121222201200120000121010101112110120120121```````````````In00000000000000","f":"`{{}b}```````````{{}d}`````````{{}f}0{{}h}`11``11111{f{{j{ff}}}}`{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}{cc{}}{{}c{}}{nb}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{hAb}{{{h{lAd}}{h{Af}}}Ah}{{{h{Aj}}}d}`{Alb}{f{{h{{B`{An}}}}}}{{{h{Af}}}{{Bb{{h{{B`{An}}}}}}}}<;{{{h{Al}}}{{h{{Bd{{h{Af}}}}}}}};:{{}b}{{}f}:98`0?>0{{{h{Bf}}{h{Bh}}}Bj}{{{h{Bf}}}b}?3>{{{h{Bf}}{h{Bl}}}b}33=<;``````````````4``````33`````3`3``{{{h{Bn}}}Bj}{{{h{C`}}}Bj}{h{{h{c}}}{}}00000{{{h{l}}}{{h{lc}}}{}}00000{{{h{Cb}}}{{h{l{B`{An}}}}}}{{{h{Bn}}}Cb}{{{h{C`}}}Cd}{{{h{Bn}}}Bn}{{{h{C`}}}C`}{{{h{Cb}}}Cb}{{{h{Cd}}}Cd}{{{h{{Cf{c}}}}}{{Cf{c}}}{ChCjClCnD`Db}}{{h{h{lc}}}b{}}0000{{hAn}b}0000{{{h{Bn}}{h{Bn}}}Dd}{{{h{C`}}{h{C`}}}Dd}{{{h{Cb}}{h{Cb}}}Dd}{{{h{Cd}}{h{Cd}}}Dd}{Df}{{{h{{Cf{c}}}}}c{ChCjClCnD`}}1{{{h{Bn}}{h{Bn}}}Bj}{{{h{C`}}{h{C`}}}Bj}{{{h{Cb}}{h{Cb}}}Bj}{{{h{Cd}}{h{Cd}}}Bj}{{{h{Bn}}}Cb}{{{h{C`}}}Cd}{{{h{Bn}}{h{lDh}}}Ah}{{{h{C`}}{h{lDh}}}Ah}{{{h{Cb}}{h{lDh}}}Ah}{{{h{Cd}}{h{lDh}}}Ah}{cc{}}0{fBn}{CbBn}{CdC`}3{fC`}{BnCb}{fCb}66{fCd}{C`Cd}8{{{h{Cd}}}{{Dj{f}}}}{{}c{}}00000{{}c{}}{{{Cf{c}}}e{ChCjClCnD`}{}}{DlCd}{Cf}{{{h{Bn}}}{{h{lc}}}{}}{{{h{Cb}}}{{h{lc}}}{}}{{cc}{{Df{c}}}{ChCjClCnD`}}{{cc}{{Cf{c}}}{ChCjClCnD`}}{{{h{l{Df{c}}}}}{{Bb{e}}}{ChCjClCnD`}{}}{{{h{Bn}}}f}{{{h{C`}}}f}{{{h{Bn}}{h{Bn}}}{{Bb{Dd}}}}{{{h{C`}}{h{C`}}}{{Bb{Dd}}}}{{{h{Cb}}{h{Cb}}}{{Bb{Dd}}}}{{{h{Cd}}{h{Cd}}}{{Bb{Dd}}}}{{{h{Cb}}}{{h{l{B`{Dn}}}}}}=<{{{h{{Cf{c}}}}}c{ChCjClCnD`}}{{{h{lCh}}}b}{{{h{lCd}}}b}{hc{}}0000{c{{A`{e}}}{}{}}00000{{}{{A`{c}}}{}}00000{hAb}00000`````{E`b}{{{h{lEb}}}{{Bb{Cb}}}}{{{h{lEd}}}{{Bb{Cb}}}}{h{{h{c}}}{}}00{{{h{l}}}{{h{lc}}}{}}00{Edf}{Eff}{{{h{lEb}}Cb}b}{{{h{lEd}}Cb}b}{{{h{E`}}}{{h{{Eh{Ed}}}}}}{{{h{lEj}}}b}54{{{h{Ej}}{h{lDh}}}Ah}{{}{{Bb{Ej}}}}{{}b}{Cbb}{cc{}}00{{{h{lEd}}CbCb}b}3{{}c{}}00{{}Eb}{{}Ed}{CbEj}{EjCb}{EdBd}{EfBd}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{hAb}00{{}El}{{}Dj}{End}{{}b}```````````{F`b}{{{h{Fb}}}b}{{}Fd}{{{h{lFf}}{h{lFh}}Cd}b}{FbBd}{{FdFd}Fd}{{{h{lFd}}Fd}b}10{{{h{Fd}}}An}021{h{{h{c}}}{}}0000{{{h{l}}}{{h{lc}}}{}}0000{{{h{Fj}}}Fj}{{{h{Fd}}}Fd}{{h{h{lc}}}b{}}0{{hAn}b}0{FdFd}{{{h{Fd}}Fd}Bj}{{{h{lFf}}{h{Fh}}{h{{B`{An}}}}}b}{FfFl}{{{h{F`}}}{{h{{Fn{{Eh{Fb}}}}}}}}={{}b}00{{}Fd}{{{h{Fj}}{h{Fj}}}Bj}22{{{h{lFd}}c}b{{Gb{}{{G`{Fd}}}}}}{{{h{Fj}}{h{lDh}}}Ah}{{{h{Fd}}{h{lDh}}}Ah}000{cc{}}0000{{{h{Ff}}}Ff}{An{{Bb{Fd}}}}{AnFd}00{{{h{{B`{An}}}}}{{j{Fbff}}}}{{{h{Fb}}}Fb}{cFd{{Gb{}{{G`{Fd}}}}}}{{{h{Af}}}{{Bb{Fd}}}}{{{h{lFd}}Fd}b}{{{h{lFb}}C`C`Fd}b}{{FdFd}Fd}{{{h{Fd}}Fd}Bj}{{}c{}}0000{Fdc{}}{{{h{Fd}}}Bj}0{{{h{Fd}}}{{Gd{Fd}}}}{{{h{Fd}}}{{Gf{Fd}}}}{{{h{lFf}}{h{lFh}}}b}{{{h{lFf}}{h{lFh}}Cd}b}{FfFd}{{{h{lFb}}}b}{FfFj}{{C`C`FjFd}Ff}{{}Fb}0{FdFd}{FbFh}{{{h{lFb}}Ff{Bb{{h{{B`{An}}}}}}}b}6{{}b}{{{h{lFd}}Fd}b}{{{h{lFb}}Cd}b}22{{{h{lFd}}FdBj}b}<333{{FdFd}Fd}30{hc{}}04{{{h{Fb}}}f}{{{h{Fb}}Cd}{{Bb{Dn}}}}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{hAb}00006{{{h{lFf}}{h{lFh}}}b}{{{h{lFf}}{h{lFh}}Cd}b}{FfCf}```````````{{}Gh}{{GhGh}Gh}{{{h{lGh}}Gh}b}10{{{h{Gh}}}An}0{Dnf}32{h{{h{c}}}{}}00{{{h{l}}}{{h{lc}}}{}}00{{{h{Dn}}}Dn}{{h{h{lc}}}b{}}{{hAn}b}{GhGh}{{{h{Gh}}Gh}Bj}:;{{}Dn}{{{h{Gh}}{h{Gh}}}Bj}{{{h{Dn}}}Bj}{{{h{lGh}}c}b{{Gb{}{{G`{Gh}}}}}}{{{h{Fh}}Cd}{{Bb{{h{lDn}}}}}}{{{h{lFh}}Cd}{{Bb{{h{lDn}}}}}}{{{h{Dn}}}Gh}{{{h{Gh}}{h{lDh}}}Ah}000{FhBd}{cc{}}00{An{{Bb{Gh}}}}{AnGh}00{cGh{{Gb{}{{G`{Gh}}}}}}{{{h{Af}}}{{Bb{Gh}}}}{fFh}{{{h{lGh}}Gh}b}{{GhGh}Gh}{{{h{Gh}}Gh}Bj}{{}c{}}00{Ghc{}}{{{h{Gh}}}Bj}0{{{h{Dn}}}Bj}{{{h{Gh}}}{{Gd{Gh}}}}{{{h{Gh}}}{{Gf{Gh}}}}{{{h{lFh}}CdCbGh}b}{{}Fh}{{CbGh}Dn}{GhGh}{{{h{Dn}}}Cb}7={FhCb}{{{h{lGh}}GhBj}b}>?>{hc{}}{{{h{lGh}}Gh}b}{{{h{Fh}}}f}{{{h{Fh}}Cd}{{Bb{Dn}}}}{{{h{Fh}}C`}{{Bb{Bn}}}}{{fAnf}{{Bd{{h{l{B`{An}}}}}}}}{f{{h{lc}}}{}}{{fAn}Gj}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{hAb}00{{GhGh}Gh}{{{h{lFh}}Cd}b}{{{h{Dn}}}Bj}{{}f}{fb}{Bjd}1{{}b}```{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}{{{h{{Eh{c}}}}}{{Gl{c}}}{}}{cc{}}{EhGn}{{}c{}}{c{{Eh{c}}}{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{hAb}=========``{{f{Dj{f}}}H`}>>{{fAnf}H`}0{AnH`}{HbH`}{{}H`}00{{H`Hb}H`}1{{}f}``{Hdb}{{}b}`{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}````{{{h{Hd}}}{{h{{Fn{Hf}}}}}}{Hbb}{cc{}}{{}c{}}`````6```{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{hAb}`87{{{h{Hh}}}Hh}{{h{h{lc}}}b{}}{{hAn}b}7{fHh}7{Hhf}{HhDj}1{hc{}}987{{}Hh}``{Hjb}{{{h{lHl}}{Fn{Hf}}}b}{{{Fn{Hf}}}b}{h{{h{c}}}{}}0{{{h{l}}}{{h{lc}}}{}}0{{{h{Hj}}}{{h{{Eh{Hl}}}}}}{{{h{lHl}}}{{Bb{{Fn{Hf}}}}}}{{}{{Bb{{Fn{Hf}}}}}}{cc{}}0{{}c{}}0{{}Hl}{HlHn}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{hAb}0````{I`b}{{{h{lIb}}}Id}====<<<<{Ibf}{{{h{lIb}}f}b}{{{h{I`}}}{{h{{Eh{Ib}}}}}}{{{h{lId}}}b}{{{h{lIf}}}b}====<<<<{f{{j{ff}}}}{{}Ib}{{{h{Id}}}If}{Iff}{{}Id}{{{h{If}}c}{}Ih}{IbBd}{{{h{If}}}f}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{hAb}000``{Ijb}{h{{h{c}}}{}}0{{{h{l}}}{{h{lc}}}{}}0{{{h{Il}}}{{Bb{{Fn{Hf}}}}}}{IlBb}{{}{{Bb{{Fn{Hf}}}}}}{{}{{h{lIn}}}}{{}f}{{{h{Ij}}}{{h{{Eh{Il}}}}}}{cc{}}0{IlHh}{{{h{lIl}}}Hh}{{}c{}}0{{}Il}{{}b}{Hhb}:{{{h{lIl}}}{{Bb{{Fn{Hf}}}}}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{hAb}0{{HhHh}b}``````{J`f}{h{{h{c}}}{}}00{{{h{l}}}{{h{lc}}}{}}00{J`Bd}{{{h{Jb}}}Jb}{{h{h{lc}}}b{}}{{hAn}b}{{{h{Jb}}{h{Jb}}}Bj}{{{h{Hf}}{h{{B`{An}}}}}b}{J`Hb}{{{h{Jb}}{h{lDh}}}Ah}{{{h{{Fn{Hf}}}}}{{Fn{Hf}}}}{cc{}}00{{{h{Hf}}}f}{HfEh}{{{h{Hf}}}{{Gl{J`}}}}{{}c{}}00{{{h{J`}}}Bj}{HfIf}{J`Fb}{{{h{{B`{An}}}}}Hf}{J`Bb}{HfId}{{{h{J`}}}Jb}{J`Hh}{J`Jb}{hc{}}{{{h{J`}}}{{h{lIn}}}}{J`Cb}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{hAb}00{{{h{J`}}}f}{{}f}0{{}b}11``0000{{}d}00`{{fffff}In}{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}{cc{}}{{}c{}}{Inf}00{{{h{lIn}}f}b}{InJd}2>=<{InDj}","D":"CHh","p":[[1,"unit"],[1,"never"],[1,"usize"],[1,"reference",null,null,1],[1,"tuple",null,null,1],[0,"mut"],[5,"Arguments",785],[6,"Result",786,null,1],[5,"TypeId",787],[5,"Stdout",37],[1,"str"],[8,"Result",785],[5,"PanicInfo",788],[5,"APP_NAMES",48],[1,"u8"],[1,"slice"],[6,"Option",789,null,1],[5,"Vec",790],[5,"SimpleLogger",62],[5,"Metadata",791],[1,"bool"],[5,"Record",791],[5,"PhysAddr",99],[5,"VirtAddr",99],[5,"PhysPageNum",99],[5,"VirtPageNum",99],[5,"SimpleRange",99],[10,"StepByOne",99],[10,"Copy",792],[10,"PartialEq",793],[10,"PartialOrd",793],[10,"Debug",785],[10,"Clone",794],[6,"Ordering",793],[5,"SimpleRangeIterator",99],[5,"Formatter",785],[1,"array"],[8,"VPNRange",99],[5,"PageTableEntry",414],[5,"FRAME_ALLOCATOR",225],[10,"FrameAllocator",225],[5,"StackFrameAllocator",225],[8,"FrameAllocatorImpl",225],[5,"UPSafeCell",521],[5,"FrameTracker",225],[5,"LockedHeap",795],[5,"Layout",796],[5,"KERNEL_SPACE",278],[5,"MemorySet",278],[5,"MapPermission",278],[5,"MapArea",278],[5,"PageTable",414],[6,"MapType",278],[5,"BTreeMap",797],[5,"Arc",798,null,1],[17,"Item"],[10,"IntoIterator",799],[5,"Iter",800],[5,"IterNames",800],[5,"PTEFlags",414],[5,"String",801],[5,"RefMut",802],[5,"RefCell",802],[1,"isize"],[1,"i32"],[5,"INITPROC",555],[5,"TaskControlBlock",702],[5,"TaskContext",583],[5,"TASK_MANAGER",600],[5,"TaskManager",600],[5,"VecDeque",803],[5,"PID_ALLOCATOR",624],[5,"PidAllocator",624],[5,"PidHandle",624],[5,"KernelStack",624],[10,"Sized",792],[5,"PROCESSOR",671],[5,"Processor",671],[5,"TrapContext",769],[5,"TaskControlBlockInner",702],[6,"TaskStatus",702],[5,"Sstatus",804]],"r":[[26,23],[29,23],[30,23],[78,225],[79,278],[80,278],[81,278],[82,278],[83,414],[84,99],[85,99],[86,99],[87,99],[89,225],[95,278],[96,414],[97,414],[98,414],[519,521],[557,583],[560,600],[564,671],[565,671],[566,671],[574,671],[575,671],[578,671],[760,769]],"b":[[162,"impl-From%3Cusize%3E-for-PhysAddr"],[163,"impl-From%3CPhysPageNum%3E-for-PhysAddr"],[164,"impl-From%3CVirtPageNum%3E-for-VirtAddr"],[166,"impl-From%3Cusize%3E-for-VirtAddr"],[167,"impl-From%3CPhysAddr%3E-for-PhysPageNum"],[168,"impl-From%3Cusize%3E-for-PhysPageNum"],[171,"impl-From%3Cusize%3E-for-VirtPageNum"],[172,"impl-From%3CVirtAddr%3E-for-VirtPageNum"],[298,"impl-MapPermission"],[299,"impl-Flags-for-MapPermission"],[333,"impl-Binary-for-MapPermission"],[334,"impl-Octal-for-MapPermission"],[335,"impl-LowerHex-for-MapPermission"],[336,"impl-UpperHex-for-MapPermission"],[344,"impl-Flags-for-MapPermission"],[345,"impl-MapPermission"],[430,"impl-PTEFlags"],[431,"impl-Flags-for-PTEFlags"],[455,"impl-Binary-for-PTEFlags"],[456,"impl-UpperHex-for-PTEFlags"],[457,"impl-LowerHex-for-PTEFlags"],[458,"impl-Octal-for-PTEFlags"],[464,"impl-PTEFlags"],[465,"impl-Flags-for-PTEFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAE0BVgAYAAMAHgABACcAAQAsAAIAMgAAADUAAgA8AAIAQQABAEwADABaAAAAYAAFAGsAAABtAAAAcgALAIEAEwCWAAQAnQADAKMAAgCnAAIArAABALYAAAC4AAEAwQADAMYAAQDLABYA5wAAAOoABQD0AAAACgEIACIBAAAmAQAALAEAAC8BDwBCAQEARQECAEkBAgBNAQQAWQEAAGkBAABwAQAAcgEAAHcBAAB9AQEAgQECAIcBAQCMAQ4AngEAALABAAC0AQgAwgEAAMgBAwDSAQAA3QEAAO8BAAD3AQgACAIAAAsCAQASAgIAGQIAACICAAAuAgEAMQICADUCAwA/AgEAQwIAAEUCAgBJAgQAVAIDAFsCAABeAgQAawIFAHUCAAB3AgcAgQICAJQCCwCiAgQArAIAALgCBQDGAgUAzQIDANMCAADnAgAA6gIIAPkCAAAEAwEADgMCAA==","P":[[38,"T"],[41,"U"],[42,""],[43,"U,T"],[44,"U"],[45,""],[52,"T"],[54,""],[55,"T"],[56,"U"],[57,""],[59,"U,T"],[60,"U"],[61,""],[64,"T"],[66,""],[69,"T"],[70,""],[71,"U"],[72,""],[75,"U,T"],[76,"U"],[77,""],[113,"T"],[125,""],[132,"T"],[138,""],[148,"T"],[149,""],[160,"T"],[162,""],[165,"T"],[166,""],[169,"T"],[171,""],[173,"T"],[174,""],[175,"U"],[181,"I"],[182,"T,IntoIterator::IntoIter"],[183,""],[185,"T"],[189,"T,Iterator::Item"],[190,""],[199,"T"],[200,""],[202,"T"],[207,"U,T"],[213,"U"],[219,""],[233,"T"],[239,""],[251,"T"],[254,""],[256,"U"],[259,""],[265,"U,T"],[268,"U"],[271,""],[302,"T"],[312,""],[314,"T"],[316,""],[331,"T"],[332,""],[337,"T"],[342,""],[349,"T"],[350,""],[355,"U"],[360,"IntoIterator::IntoIter"],[361,""],[390,"T"],[392,""],[395,"U,T"],[400,"U"],[405,""],[435,"T"],[441,""],[442,"T"],[443,""],[451,"T"],[452,""],[460,"T"],[463,""],[467,"T"],[468,""],[473,"U"],[476,"IntoIterator::IntoIter"],[477,""],[494,"T"],[495,""],[500,"T"],[501,""],[502,"U,T"],[505,"U"],[508,""],[522,"T"],[526,""],[527,"U"],[528,"T"],[529,"U,T"],[530,"U"],[531,""],[561,"T"],[567,""],[569,"T"],[570,"U"],[576,""],[580,"U,T"],[581,"U"],[582,""],[584,"T"],[586,""],[587,"T"],[588,""],[589,"T"],[590,""],[591,"U"],[592,""],[595,"T"],[596,"U,T"],[597,"U"],[598,""],[605,"T"],[609,""],[612,"T"],[614,"U"],[616,""],[618,"U,T"],[620,"U"],[622,""],[630,"T"],[638,""],[643,"T"],[647,"U"],[651,""],[656,"T"],[657,""],[659,"U,T"],[663,"U"],[667,""],[674,"T"],[678,""],[684,"T"],[686,""],[688,"U"],[690,""],[695,"U,T"],[697,"U"],[699,""],[709,"T"],[715,""],[717,"T"],[718,""],[724,"T"],[727,""],[730,"U"],[733,""],[742,"T"],[743,""],[745,"U,T"],[748,"U"],[751,""],[771,"T"],[774,"U"],[775,""],[781,"U,T"],[782,"U"],[783,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[20319]}