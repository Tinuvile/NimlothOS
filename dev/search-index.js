var searchIndex = new Map(JSON.parse('[["os",{"t":"CHCCQQQCCCCQQHCCCCCCQCQSSSESSEESSSSSHFNNNNHNNNNHHHFJNNNNNHHHHNNNNNEEEEEEEEEEEECECECHCCEESSFFFFKSISFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNOOMNNNNNNNNNNNNNNNNNNNNNNNNFKIFFOMNNNNNNNOOMNNNOONHHHNNNNHNNNMNNOOONNNNNNNNNJJHHPPFFFGFTTTTONNNNONNNNNNNNNNNNNNNNNNNNNNNNONNHHHNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNONHNHHNNNHHHNNNNNNNNNNNNNNNNNNNNNNNNNOTTTFFFTTTTTNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNHNNNNNNNNNNNNPPSSSSSSSSSSSFPPGGPNNNNNNNNNHONNNNNNNHHHNNNNNNNNNNOHECFNNNNONNNNNSSSSSCCHSHHHHHFEFFONNNNNNNHCOHHNHNNNNNNONNNHNHNOHNHNHCCONNNNNNNNNFNNNNNNNNOOONNNNNHPPPFGPONNNNNNNNNNNNNONNONOOONONNNNNNSSHHHECHHHHHHHFNNNNNOOONOONNNO","n":["board","clear_bss","config","console","debug","error","info","lang_items","loader","log","mm","print","println","rust_main","sbi","stack_trace","sync","syscall","task","timer","trace","trap","warn","CLOCK_FREQ","MEMORY_END","MMIO","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MEMORY_END","MMIO","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT","USER_STACK_SIZE","kernel_stack_position","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","panic","get_app_data","get_num_app","SimpleLogger","TICK_COUNT","borrow","borrow_mut","enabled","flush","from","get_cpu_id","get_thread_id","get_timestamp","init","into","log","try_from","try_into","type_id","FrameTracker","KERNEL_SPACE","","MapPermission","MemorySet","PTEFlags","PageTable","PageTableEntry","PhysAddr","PhysPageNum","VirtAddr","VirtPageNum","address","frame_alloc","frame_allocator","frame_dealloc","heap_allocator","init","memory_set","page_table","remap_test","translated_byte_buffer","PA_WIDTH_SV39","PPN_WIDTH_SV39","PhysAddr","PhysPageNum","SimpleRange","SimpleRangeIterator","StepByOne","VA_WIDTH_SV39","VPNRange","VPN_WIDTH_SV39","VirtAddr","VirtPageNum","aligned","","borrow","","","","","","borrow_mut","","","","","","ceil","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","cmp","","","","current","end","eq","","","","floor","","fmt","","","","from","","","","","","","","","","","","","","get_bytes_array","get_end","get_mut","get_pte_array","get_start","indexes","into","","","","","","into_iter","","l","","new","","next","page_offset","","partial_cmp","","","","r","","step","","to_owned","","","","","try_from","","","","","","try_into","","","","","","type_id","","","","","","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","","borrow","","","borrow_mut","","","current","","dealloc","","deref","drop","end","","fmt","frame_alloc","frame_alloctor_test","frame_dealloc","from","","","init","init_frame_allocator","into","","","new","","","ppn","recycled","","try_from","","","try_into","","","type_id","","","HEAP_ALLOCATOR","HEAP_SPACE","alloc_error_handler","init_heap","Framed","Identical","KERNEL_SPACE","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","__private_field","activate","all","append_to","","areas","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","clone","clone_into","clone_to_uninit","complement","contains","copy_data","data_frames","deref","difference","ebss","edata","ekernel","empty","eq","erodata","etext","extend","fmt","","","","","from","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_elf","from_iter","from_name","insert","insert_framed_area","intersection","intersects","into","","","","","into_iter","is_all","is_empty","iter","iter_names","map","map_one","map_perm","map_trampoline","map_type","new","new_bare","new_kernel","not","page_table","push","remap_test","remove","sbss_with_stack","sdata","set","shrink_to","","srodata","stext","strampoline","sub","sub_assign","symmetric_difference","to_owned","toggle","token","translate","try_from","","","","","try_into","","","","","type_id","","","","","union","unmap","unmap_one","vpn_range","A","D","G","PTEFlags","PageTable","PageTableEntry","R","U","V","W","X","all","bitand","bitand_assign","bitor","bitor_assign","bits","","","bitxor","bitxor_assign","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","complement","contains","difference","empty","","eq","executable","extend","find_pte","find_pte_create","flags","fmt","","","","frames","from","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","from_token","insert","intersection","intersects","into","","","into_iter","is_all","is_empty","is_valid","iter","iter_names","map","new","","not","ppn","readable","remove","root_ppn","set","sub","sub_assign","symmetric_difference","to_owned","toggle","token","translate","translated_byte_buffer","try_from","","","try_into","","","type_id","","","union","unmap","writable","ColdReboot","NoReason","SBI_CLEAR_IPI","SBI_CONSOLE_GETCHAR","SBI_CONSOLE_PUTCHAR","SBI_REMOTE_FENCE_I","SBI_REMOTE_SFENCE_VMA","SBI_REMOTE_SFENCE_VMA_ASID","SBI_SEND_IPI","SBI_SET_TIMER","SBI_SHUTDOWN","SBI_SYSTEM_RESET","SRST_EXTENSION","SbiRet","Shutdown","SystemFailure","SystemResetReason","SystemResetType","WarmReboot","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","console_putchar","error","fmt","from","","","into","","","sbi_call","set_timer","shutdown","to_owned","try_from","","","try_into","","","type_id","","","value","print_stack_trace","UPSafeCell","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_EXIT","SYSCALL_GET_TIME","SYSCALL_SBRK","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","syscall","FD_STDOUT","sys_write","sys_exit","sys_get_time","sys_sbrk","sys_yield","TASK_MANAGER","TaskContext","TaskManager","TaskManagerInner","__private_field","borrow","","","borrow_mut","","","change_current_program_brk","change_program_brk","context","current_task","current_trap_cx","current_user_token","deref","exit_current_and_run_next","find_next_task","from","","","get_current_token","get_current_trap_cx","inner","into","","","mark_current_exited","","mark_current_suspended","","num_app","run_first_task","","run_next_task","","suspend_current_and_run_next","switch","task","tasks","try_from","","","try_into","","","type_id","","","TaskContext","borrow","borrow_mut","clone","clone_into","clone_to_uninit","from","goto_trap_return","into","ra","s","sp","to_owned","try_from","try_into","type_id","zero_init","__switch","Exited","Ready","Running","TaskControlBlock","TaskStatus","Uninit","base_size","borrow","","borrow_mut","","change_program_brk","clone","clone_into","clone_to_uninit","eq","from","","get_trap_cx","get_user_token","heap_bottom","into","","memory_set","new","program_brk","task_cx","task_status","to_owned","trap_cx_ppn","try_from","","try_into","","type_id","","MSEC_PER_SEC","TICKS_PER_SEC","get_time","get_time_ms","set_next_trigger","TrapContext","context","enable_timer_interrupt","init","set_kernel_trap_entry","set_user_trap_entry","trap_from_kernel","trap_handler","trap_return","TrapContext","app_init_context","borrow","borrow_mut","from","into","kernel_satp","kernel_sp","sepc","set_sp","sstatus","trap_handler","try_from","try_into","type_id","x"],"q":[[0,"os"],[23,"os::board"],[26,"os::config"],[37,"os::console"],[47,"os::lang_items"],[48,"os::loader"],[50,"os::log"],[66,"os::mm"],[88,"os::mm::address"],[213,"os::mm::frame_allocator"],[262,"os::mm::heap_allocator"],[266,"os::mm::memory_set"],[396,"os::mm::page_table"],[493,"os::sbi"],[544,"os::stack_trace"],[545,"os::sync"],[547,"os::sync::up"],[558,"os::syscall"],[566,"os::syscall::fs"],[568,"os::syscall::process"],[572,"os::task"],[623,"os::task::context"],[640,"os::task::switch"],[641,"os::task::task"],[677,"os::timer"],[682,"os::trap"],[691,"os::trap::context"],[707,"core::fmt"],[708,"core::result"],[709,"core::any"],[710,"core::panic::panic_info"],[711,"log"],[712,"core::marker"],[713,"core::cmp"],[714,"core::clone"],[715,"core::option"],[716,"alloc::vec"],[717,"buddy_system_allocator"],[718,"core::alloc::layout"],[719,"alloc::collections::btree::map"],[720,"alloc::sync"],[721,"core::iter::traits::collect"],[722,"bitflags::iter"],[723,"core::cell"],[724,"riscv::register::sstatus"]],"i":"``````````````````````````````````````Ad000`0000`````B`0000````00000``````````````````````````````````BhBjD`21BlBnC`3542105454210542105421054213354215454213555444222111020220135421030Dh141465653201Cb376432576432576432576432`````DlDnE`0Ef31031Eb3241201```2142`214321120214214214````Fh0`````Fb000EnF`2Fd11333333330124301243444330023```34``3433330124333331333133012433333300010011311`3``301```33343110124301243012433000Gf00```000000000000Dd11Ff21021111222212120012222002122222202220212221220012112022221200`021021021201IbId````````````10``110Gh210000`00210210```02102102100````Ed000000000``````````````````HbHdHf21021``0``2`1102111102`1`11`1`1```0102102102`Hj000000000000000`Hn00``0Hl01010111101000010000010010101```````````````Hh00000000000000","f":"`{{}b}```````````{{}d}`````````{{}f}0{{}h}`11``11111{f{{j{ff}}}}`{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}{cc{}}{{}c{}}{nb}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{hAb}{{{h{lAd}}{h{Af}}}Ah}{{{h{Aj}}}d}{f{{h{{An{Al}}}}}}=`=:9{{{h{B`}}{h{Bb}}}Bd}{{{h{B`}}}b}:???{{}b}:{{{h{B`}}{h{Bf}}}b}987`````````````````1````{{}f}0`````0`0``{{{h{Bh}}}Bd}{{{h{Bj}}}Bd}{h{{h{c}}}{}}00000{{{h{l}}}{{h{lc}}}{}}00000{{{h{Bh}}}Bl}{{{h{Bj}}}Bn}{{{h{Bh}}}Bh}{{{h{Bj}}}Bj}{{{h{Bl}}}Bl}{{{h{Bn}}}Bn}{{{h{{C`{c}}}}}{{C`{c}}}{CbCdCfChCjCl}}{{h{h{lc}}}b{}}0000{{hAl}b}0000{{{h{Bh}}{h{Bh}}}Cn}{{{h{Bj}}{h{Bj}}}Cn}{{{h{Bl}}{h{Bl}}}Cn}{{{h{Bn}}{h{Bn}}}Cn}{D`}0{{{h{Bh}}{h{Bh}}}Bd}{{{h{Bj}}{h{Bj}}}Bd}{{{h{Bl}}{h{Bl}}}Bd}{{{h{Bn}}{h{Bn}}}Bd}{{{h{Bh}}}Bl}{{{h{Bj}}}Bn}{{{h{Bh}}{h{lDb}}}Ah}{{{h{Bj}}{h{lDb}}}Ah}{{{h{Bl}}{h{lDb}}}Ah}{{{h{Bn}}{h{lDb}}}Ah}{cc{}}0{fBh}{BlBh}{fBj}{BnBj}4{fBl}5{BhBl}6{BjBn}{fBn}8{{{h{Bl}}}{{h{l{An{Al}}}}}}{{{h{{C`{c}}}}}c{CbCdCfChCj}}{{{h{Bl}}}{{h{lc}}}{}}{{{h{Bl}}}{{h{l{An{Dd}}}}}}2{{{h{Bn}}}{{Df{f}}}}{{}c{}}00000{{}c{}}{{{C`{c}}}e{CbCdCfChCj}{}}{DhBn}{C`}{{cc}{{D`{c}}}{CbCdCfChCj}}{{cc}{{C`{c}}}{CbCdCfChCj}}{{{h{l{D`{c}}}}}{{Dj{e}}}{CbCdCfChCj}{}}{{{h{Bh}}}f}{{{h{Bj}}}f}{{{h{Bh}}{h{Bh}}}{{Dj{Cn}}}}{{{h{Bj}}{h{Bj}}}{{Dj{Cn}}}}{{{h{Bl}}{h{Bl}}}{{Dj{Cn}}}}{{{h{Bn}}{h{Bn}}}{{Dj{Cn}}}}:9{{{h{lCb}}}b}{{{h{lBn}}}b}{hc{}}0000{c{{A`{e}}}{}{}}00000{{}{{A`{c}}}{}}00000{hAb}00000`````{Dlb}{{{h{lDn}}}{{Dj{Bl}}}}{{{h{lE`}}}{{Dj{Bl}}}}{h{{h{c}}}{}}00{{{h{l}}}{{h{lc}}}{}}00{E`f}{Ebf}{{{h{lDn}}Bl}b}{{{h{lE`}}Bl}b}{{{h{Dl}}}{{h{{Ed{E`}}}}}}{{{h{lEf}}}b}54{{{h{Ef}}{h{lDb}}}Ah}{{}{{Dj{Ef}}}}{{}b}{Blb}{cc{}}00{{{h{lE`}}BlBl}b}3{{}c{}}00{{}Dn}{{}E`}{BlEf}{EfBl}{E`Eh}{EbEh}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{hAb}00{{}Ej}{{}Df}{Eld}{{}b}```````````{Enb}{{{h{F`}}}b}{{}Fb}{{{h{lFd}}{h{lFf}}Bn}b}{{{h{lF`}}BjBj}Bd}{F`Eh}{{FbFb}Fb}{{{h{lFb}}Fb}b}10{{{h{Fb}}}Al}021{h{{h{c}}}{}}0000{{{h{l}}}{{h{lc}}}{}}0000{{{h{Fh}}}Fh}{{h{h{lc}}}b{}}{{hAl}b}{FbFb}{{{h{Fb}}Fb}Bd}{{{h{lFd}}{h{Ff}}{h{{An{Al}}}}}b}{FdFj}{{{h{En}}}{{h{{Fl{{Ed{F`}}}}}}}}<{{}b}00{{}Fb}{{{h{Fh}}{h{Fh}}}Bd}22{{{h{lFb}}c}b{{G`{}{{Fn{Fb}}}}}}{{{h{Fh}}{h{lDb}}}Ah}{{{h{Fb}}{h{lDb}}}Ah}000{cc{}}0000{Al{{Dj{Fb}}}}{AlFb}00{{{h{{An{Al}}}}}{{j{F`ff}}}}{cFb{{G`{}{{Fn{Fb}}}}}}{{{h{Af}}}{{Dj{Fb}}}}{{{h{lFb}}Fb}b}{{{h{lF`}}BjBjFb}b}{{FbFb}Fb}{{{h{Fb}}Fb}Bd}{{}c{}}0000{Fbc{}}{{{h{Fb}}}Bd}0{{{h{Fb}}}{{Gb{Fb}}}}{{{h{Fb}}}{{Gd{Fb}}}}{{{h{lFd}}{h{lFf}}}b}{{{h{lFd}}{h{lFf}}Bn}b}{FdFb}{{{h{lF`}}}b}{FdFh}{{BjBjFhFb}Fd}{{}F`}0{FbFb}{F`Ff}{{{h{lF`}}Fd{Dj{{h{{An{Al}}}}}}}b}{{}b}{{{h{lFb}}Fb}b}11{{{h{lFb}}FbBd}b};{{{h{lF`}}BjBj}Bd}333{{FbFb}Fb}30{hc{}}4{{{h{F`}}}f}{{{h{F`}}Bn}{{Dj{Dd}}}}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{hAb}00006{{{h{lFd}}{h{lFf}}}b}{{{h{lFd}}{h{lFf}}Bn}b}{FdC`}```````````{{}Gf}{{GfGf}Gf}{{{h{lGf}}Gf}b}10{{{h{Gf}}}Al}0{Ddf}32{h{{h{c}}}{}}00{{{h{l}}}{{h{lc}}}{}}00{{{h{Dd}}}Dd}{{h{h{lc}}}b{}}{{hAl}b}{GfGf}{{{h{Gf}}Gf}Bd}:;{{}Dd}{{{h{Gf}}{h{Gf}}}Bd}{{{h{Dd}}}Bd}{{{h{lGf}}c}b{{G`{}{{Fn{Gf}}}}}}{{{h{Ff}}Bn}{{Dj{{h{lDd}}}}}}{{{h{lFf}}Bn}{{Dj{{h{lDd}}}}}}{{{h{Dd}}}Gf}{{{h{Gf}}{h{lDb}}}Ah}000{FfEh}{cc{}}00{Al{{Dj{Gf}}}}{AlGf}00{cGf{{G`{}{{Fn{Gf}}}}}}{{{h{Af}}}{{Dj{Gf}}}}{fFf}{{{h{lGf}}Gf}b}{{GfGf}Gf}{{{h{Gf}}Gf}Bd}{{}c{}}00{Gfc{}}{{{h{Gf}}}Bd}0{{{h{Dd}}}Bd}{{{h{Gf}}}{{Gb{Gf}}}}{{{h{Gf}}}{{Gd{Gf}}}}{{{h{lFf}}BnBlGf}b}{{}Ff}{{BlGf}Dd}{GfGf}{{{h{Dd}}}Bl}7={FfBl}{{{h{lGf}}GfBd}b}>?>{hc{}}{{{h{lGf}}Gf}b}{{{h{Ff}}}f}{{{h{Ff}}Bn}{{Dj{Dd}}}}{{fAlf}{{Eh{{h{l{An{Al}}}}}}}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{hAb}00{{GfGf}Gf}{{{h{lFf}}Bn}b}{{{h{Dd}}}Bd}``{{}f}0000000000``````{h{{h{c}}}{}}00{{{h{l}}}{{h{lc}}}{}}00{{{h{Gh}}}Gh}{{h{h{lc}}}b{}}{{hAl}b}{fb}{Ghf}{{{h{Gh}}{h{lDb}}}Ah}{cc{}}00{{}c{}}00{{fffff}Gh}5{Bdd}{hc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{hAb}009{{}b}```{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}{{{h{{Ed{c}}}}}{{Gj{c}}}{}};{EdGl};{c{{Ed{c}}}{}}876{{}f}0000``{{f{Df{f}}}Gn}1{{fAlf}Gn}{H`Gn}{{}Gn}10````{Hbb}:::999{{{h{Hd}}H`}{{Dj{f}}}}{H`{{Dj{f}}}}`{Hff}{{}{{h{lHh}}}}9{{{h{Hb}}}{{h{Hd}}}}{{}b}{{{h{Hd}}}{{Dj{f}}}}{cc{}}00{{{h{Hd}}}f}{{{h{Hd}}}{{h{lHh}}}}{HdEd}{{}c{}}006{{{h{Hd}}}b}70{Hdf}8{{{h{Hd}}}d}929``{HfEh}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{hAb}00`{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}{{{h{Hj}}}Hj}{{h{h{lc}}}b{}}{{hAl}b}{cc{}}{fHj}>{Hjf}{HjDf}1{hc{}}<;:{{}Hj}{{HjHj}b}``````{Hlf}<<;;{{{h{lHl}}H`}{{Dj{f}}}}{{{h{Hn}}}Hn};:{{{h{Hn}}{h{Hn}}}Bd}::{{{h{Hl}}}{{h{lHh}}}}{{{h{Hl}}}f}5{{}c{}}0{HlF`}{{{h{{An{Al}}}}f}Hl}8{HlHj}{HlHn}={HlBl}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{hAb}0{{}f}000{{}b}``0000{{}d}00`{{fffff}Hh}{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}{cc{}}?{Hhf}00{{{h{lHh}}f}b}{HhI`}2<;:{HhDf}","D":"CDb","p":[[1,"unit"],[1,"never"],[1,"usize"],[1,"reference",null,null,1],[1,"tuple",null,null,1],[0,"mut"],[5,"Arguments",707],[6,"Result",708,null,1],[5,"TypeId",709],[5,"Stdout",37],[1,"str"],[8,"Result",707],[5,"PanicInfo",710],[1,"u8"],[1,"slice"],[5,"SimpleLogger",50],[5,"Metadata",711],[1,"bool"],[5,"Record",711],[5,"PhysAddr",88],[5,"VirtAddr",88],[5,"PhysPageNum",88],[5,"VirtPageNum",88],[5,"SimpleRange",88],[10,"StepByOne",88],[10,"Copy",712],[10,"PartialEq",713],[10,"PartialOrd",713],[10,"Debug",707],[10,"Clone",714],[6,"Ordering",713],[5,"SimpleRangeIterator",88],[5,"Formatter",707],[5,"PageTableEntry",396],[1,"array"],[8,"VPNRange",88],[6,"Option",715,null,1],[5,"FRAME_ALLOCATOR",213],[10,"FrameAllocator",213],[5,"StackFrameAllocator",213],[8,"FrameAllocatorImpl",213],[5,"UPSafeCell",547],[5,"FrameTracker",213],[5,"Vec",716],[5,"LockedHeap",717],[5,"Layout",718],[5,"KERNEL_SPACE",266],[5,"MemorySet",266],[5,"MapPermission",266],[5,"MapArea",266],[5,"PageTable",396],[6,"MapType",266],[5,"BTreeMap",719],[5,"Arc",720,null,1],[17,"Item"],[10,"IntoIterator",721],[5,"Iter",722],[5,"IterNames",722],[5,"PTEFlags",396],[5,"SbiRet",493],[5,"RefMut",723],[5,"RefCell",723],[1,"isize"],[1,"i32"],[5,"TASK_MANAGER",572],[5,"TaskManager",572],[5,"TaskManagerInner",572],[5,"TrapContext",691],[5,"TaskContext",623],[5,"TaskControlBlock",641],[6,"TaskStatus",641],[5,"Sstatus",724],[6,"SystemResetType",493],[6,"SystemResetReason",493]],"r":[[26,23],[29,23],[30,23],[66,213],[67,266],[68,266],[69,266],[70,266],[71,396],[72,396],[73,396],[74,88],[75,88],[76,88],[77,88],[79,213],[81,213],[86,266],[87,396],[545,547],[573,623],[682,691]],"b":[[149,"impl-From%3Cusize%3E-for-PhysAddr"],[150,"impl-From%3CPhysPageNum%3E-for-PhysAddr"],[151,"impl-From%3Cusize%3E-for-VirtAddr"],[152,"impl-From%3CVirtPageNum%3E-for-VirtAddr"],[154,"impl-From%3Cusize%3E-for-PhysPageNum"],[156,"impl-From%3CPhysAddr%3E-for-PhysPageNum"],[158,"impl-From%3CVirtAddr%3E-for-VirtPageNum"],[159,"impl-From%3Cusize%3E-for-VirtPageNum"],[287,"impl-Flags-for-MapPermission"],[288,"impl-MapPermission"],[319,"impl-UpperHex-for-MapPermission"],[320,"impl-Binary-for-MapPermission"],[321,"impl-Octal-for-MapPermission"],[322,"impl-LowerHex-for-MapPermission"],[329,"impl-MapPermission"],[330,"impl-Flags-for-MapPermission"],[412,"impl-PTEFlags"],[413,"impl-Flags-for-PTEFlags"],[437,"impl-Octal-for-PTEFlags"],[438,"impl-UpperHex-for-PTEFlags"],[439,"impl-LowerHex-for-PTEFlags"],[440,"impl-Binary-for-PTEFlags"],[446,"impl-Flags-for-PTEFlags"],[447,"impl-PTEFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACIBRwAYAAMAHgABACcAAQAsAAIANQABAEAADgBQAAAAUgAAAFcAAwBgAAAAYgAAAGcACwB1ABgAkAADAJYAAwCbAAAAnQAAAJ8AAQCuAAAAsAABALcABQC/ABYA2wAAAN4ABQDoAAAA/gAIABYBAAAbAQAAIAEAACQBDAA0AQEANwECADsBAgA/AQQASwEAAFkBAABgAQAAYgEAAGcBAABrAQEAcAECAHYBAAB6AQ4AjAEAAJ4BAACiAQgAsAEAALYBAwC/AQAAywEAAN0BAADiAQgAAQIIAAwCAAAWAgkAIgIAACUCAQAsAgIAPgIAAEECBgBOAgAAZwIIAHECBAB8AgMAiQIDAI4CAwCeAgAAoAIFAKsCAAC2AgEAwAICAA==","P":[[38,"T"],[41,"U"],[42,""],[43,"U,T"],[44,"U"],[45,""],[52,"T"],[54,""],[56,"T"],[57,""],[61,"U"],[62,""],[63,"U,T"],[64,"U"],[65,""],[102,"T"],[114,""],[120,"T"],[126,""],[147,"T"],[149,""],[153,"T"],[154,""],[155,"T"],[156,""],[157,"T"],[158,""],[160,"T"],[161,""],[162,"T"],[164,""],[165,"T"],[166,""],[167,"U"],[173,"I"],[174,"T,IntoIterator::IntoIter"],[175,""],[177,"T"],[179,"T,Iterator::Item"],[180,""],[190,"T"],[195,"U,T"],[201,"U"],[207,""],[221,"T"],[227,""],[239,"T"],[242,""],[244,"U"],[247,""],[253,"U,T"],[256,"U"],[259,""],[291,"T"],[301,""],[302,"T"],[303,""],[317,"T"],[318,""],[323,"T"],[328,""],[333,"T"],[334,""],[339,"U"],[344,"IntoIterator::IntoIter"],[345,""],[373,"T"],[374,""],[377,"U,T"],[382,"U"],[387,""],[417,"T"],[423,""],[424,"T"],[425,""],[433,"T"],[434,""],[442,"T"],[445,""],[449,"T"],[450,""],[455,"U"],[458,"IntoIterator::IntoIter"],[459,""],[476,"T"],[477,""],[481,"U,T"],[484,"U"],[487,""],[512,"T"],[518,""],[519,"T"],[520,""],[524,"T"],[527,"U"],[530,""],[533,"T"],[534,"U,T"],[537,"U"],[540,""],[548,"T"],[552,""],[553,"U"],[554,"T"],[555,"U,T"],[556,"U"],[557,""],[577,"T"],[583,""],[592,"T"],[595,""],[598,"U"],[601,""],[614,"U,T"],[617,"U"],[620,""],[624,"T"],[626,""],[627,"T"],[628,""],[629,"T"],[630,""],[631,"U"],[632,""],[635,"T"],[636,"U,T"],[637,"U"],[638,""],[648,"T"],[652,""],[654,"T"],[655,""],[657,"T"],[659,""],[662,"U"],[664,""],[669,"T"],[670,""],[671,"U,T"],[673,"U"],[675,""],[693,"T"],[696,"U"],[697,""],[703,"U,T"],[704,"U"],[705,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[18082]}