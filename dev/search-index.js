var searchIndex = new Map(JSON.parse('[["easy_fs",{"t":"SKSIFPFGFPFNNNNHONNNNNNNNNNNNNOOONNNONNNNNNNHNNNNOONNOOONNNNNNNNNNNNNMNONONNNNNNNNNNNNNNNNM","n":["BLOCK_SZ","BlockDevice","DIRENT_SZ","DataBlock","DirEntry","Directory","DiskInode","DiskInodeType","EasyFileSystem","File","SuperBlock","alloc_data","alloc_inode","as_bytes","as_bytes_mut","block_cache_sync_all","block_device","blocks_num_needed","borrow","","","","","borrow_mut","","","","","clear_size","create","data_area_blocks","data_bitmap","data_bitmap_blocks","data_blocks","dealloc_data","dealloc_inode","direct","empty","eq","from","","","","","get_block_cache","get_block_id","get_data_block_id","get_disk_inode_pos","increase_size","indirect1","indirect2","initialize","","inode_area_blocks","inode_bitmap","inode_bitmap_blocks","inode_number","into","","","","","is_dir","is_file","is_valid","name","new","open","read_at","read_block","root_inode","size","total_blocks","","try_from","","","","","try_into","","","","","type_id","","","","","write_at","write_block"],"q":[[0,"easy_fs"],[91,"easy_fs::efs"],[92,"easy_fs::layout"],[93,"alloc::sync"],[94,"easy_fs::block_dev"],[95,"alloc::vec"],[96,"spin::mutex"],[97,"core::result"],[98,"core::any"],[99,"easy_fs::block_cache"]],"i":"`````Bb```0`f0l0`1Af2An124301241303013312430124`133111010302301241102231Ah422141235412354123520","f":"{{}b}`0````````{{{h{df}}}j}0{{{h{l}}}{{h{{A`{n}}}}}}{{{h{dl}}}{{h{d{A`{n}}}}}}{{}Ab}{fAd}{{{h{Af}}j}j}{h{{h{c}}}{}}0000{{{h{d}}}{{h{dc}}}{}}0000{{{h{dAf}}{h{{Ad{Ah}}}}}{{Aj{j}}}}{{{Ad{Ah}}jj}{{Ad{{Al{f}}}}}}{Anj}`0{{{h{Af}}}j}{{{h{df}}j}Ab}0{AfB`}{{}l}{{{h{Bb}}{h{Bb}}}Bd}{cc{}}0000{{b{Ad{Ah}}}{{Ad{{Al{`}}}}}}{{{h{Af}}j{h{{Ad{Ah}}}}}j}{{{h{f}}j}j}{{{h{f}}j}{{Bf{jb}}}}{{{h{dAf}}j{Aj{j}}{h{{Ad{Ah}}}}}Ab}{Afj}0{{{h{dAn}}jjjjj}Ab}{{{h{dAf}}Bb}Ab}>`>{{{h{l}}}j}{{}c{}}0000{{{h{Af}}}Bd}0{{{h{An}}}Bd}{{{h{l}}}{{h{Bh}}}}{{{h{Bh}}j}l}{{{Ad{Ah}}}{{Ad{{Al{f}}}}}}{{{h{Af}}b{h{d{A`{n}}}}{h{{Ad{Ah}}}}}b}{{{h{Ah}}b{h{d{A`{n}}}}}Ab}`;{jj}{Anj}{c{{Bj{e}}}{}{}}0000{{}{{Bj{c}}}{}}0000{hBl}0000{{{h{dAf}}b{h{{A`{n}}}}{h{{Ad{Ah}}}}}b}{{{h{Ah}}b{h{{A`{n}}}}}Ab}","D":"Fl","p":[[1,"usize"],[0,"mut"],[5,"EasyFileSystem",0,91],[1,"reference",null,null,1],[1,"u32"],[5,"DirEntry",0,92],[1,"u8"],[1,"slice"],[1,"unit"],[5,"Arc",93,null,1],[5,"DiskInode",0,92],[10,"BlockDevice",0,94],[5,"Vec",95],[5,"Mutex",96],[5,"SuperBlock",0,92],[1,"array"],[6,"DiskInodeType",0,92],[1,"bool"],[1,"tuple",null,null,1],[1,"str"],[6,"Result",97,null,1],[5,"TypeId",98]],"r":[[1,94],[2,92],[3,92],[4,92],[5,92],[6,92],[7,92],[8,91],[9,92],[10,92],[11,91],[12,91],[13,92],[14,92],[15,99],[16,91],[17,92],[18,91],[19,92],[20,92],[21,92],[22,92],[23,91],[24,92],[25,92],[26,92],[27,92],[28,92],[29,91],[30,92],[31,91],[32,92],[33,92],[34,91],[35,91],[36,92],[37,92],[38,92],[39,91],[40,92],[41,92],[42,92],[43,92],[44,99],[45,92],[46,91],[47,91],[48,92],[49,92],[50,92],[51,92],[52,92],[53,92],[54,91],[55,92],[56,92],[57,91],[58,92],[59,92],[60,92],[61,92],[62,92],[63,92],[64,92],[65,92],[66,92],[67,91],[68,92],[69,94],[70,91],[71,92],[72,92],[73,92],[74,91],[75,92],[76,92],[77,92],[78,92],[79,91],[80,92],[81,92],[82,92],[83,92],[84,91],[85,92],[86,92],[87,92],[88,92],[89,92],[90,94]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACUACQARAAAAEwAJAB8AAgAlAAAAJwAAADIAAQA2AAIASAAAAEoADwA=","P":[[18,"T"],[28,""],[39,"T"],[44,""],[57,"U"],[62,""],[74,"U,T"],[79,"U"],[84,""]]}],["os",{"t":"CHCCQQQCCCCQQHCCCCCCQCQSSSESSEESSSSSHFNNNNHNNNNHFONNNNHHHNHNNNFJNNNNNHHHHNNNNNEEEEEEEEEEEECECECHCCEEEESSFFFFKSISFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNOOMNNNNNNNNNNNNNNNNNNNNNNNNFKIFFOMNNNNNNNOOMNNNOONHHHNNNNHNNNMNNOOONNNNNNNNNJJHHPPFFFGFTTTTONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNONNHHHNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNONNHNNHHNNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNOTTTFFFTTTTTNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNHHHNNNNNNNNNNNNHHHHHECFNNNNONNNNNSSSSSSSSSCCHSSHHHHHHHHHSFEEEEEOHENNCEEENHNNCCECEEHCECNNNFNNNNNNNNOOONNNNNFFONHNNNNNNHNNNNNONNNNNNFFFFONNNNNNNNNONNNNNNNNNNNNNHNNOHNONNNNNNNNNNNNFFONNNNNOHHHNNNNONNNHHHNNNNNNNHPPFFGPONNNNNNONNNNNONNNNNNNNNONNNNNOONOOOONONNNNNNNNNSSHHHECHHHHHHHFNNNNNOOONOONNNO","n":["board","clear_bss","config","console","debug","error","info","lang_items","loader","log","mm","print","println","rust_main","sbi","stack_trace","sync","syscall","task","timer","trace","trap","warn","CLOCK_FREQ","MEMORY_END","MMIO","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MEMORY_END","MMIO","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT","USER_STACK_SIZE","kernel_stack_position","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","panic","APP_NAMES","__private_field","borrow","borrow_mut","deref","from","get_app_data","get_app_data_by_name","get_num_app","into","list_apps","try_from","try_into","type_id","SimpleLogger","TICK_COUNT","borrow","borrow_mut","enabled","flush","from","get_cpu_id","get_thread_id","get_timestamp","init","into","log","try_from","try_into","type_id","FrameTracker","KERNEL_SPACE","","MapPermission","MemorySet","PTEFlags","PageTable","PageTableEntry","PhysAddr","PhysPageNum","VirtAddr","VirtPageNum","address","frame_alloc","frame_allocator","frame_dealloc","heap_allocator","init","memory_set","page_table","remap_test","translated_byte_buffer","translated_refmut","translated_str","PA_WIDTH_SV39","PPN_WIDTH_SV39","PhysAddr","PhysPageNum","SimpleRange","SimpleRangeIterator","StepByOne","VA_WIDTH_SV39","VPNRange","VPN_WIDTH_SV39","VirtAddr","VirtPageNum","aligned","","borrow","","","","","","borrow_mut","","","","","","ceil","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","cmp","","","","current","end","eq","","","","floor","","fmt","","","","from","","","","","","","","","","","","","","get_bytes_array","get_end","get_mut","","get_pte_array","get_start","indexes","into","","","","","","into_iter","","l","","new","","next","page_offset","","partial_cmp","","","","r","","step","","to_owned","","","","","try_from","","","","","","try_into","","","","","","type_id","","","","","","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","","borrow","","","borrow_mut","","","current","","dealloc","","deref","drop","end","","fmt","frame_alloc","frame_alloctor_test","frame_dealloc","from","","","init","init_frame_allocator","into","","","new","","","ppn","recycled","","try_from","","","try_into","","","type_id","","","HEAP_ALLOCATOR","HEAP_SPACE","alloc_error_handler","init_heap","Framed","Identical","KERNEL_SPACE","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","__private_field","activate","all","append_to","areas","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","complement","contains","copy_data","data_frames","deref","difference","ebss","edata","ekernel","empty","eq","erodata","etext","extend","fmt","","","","","from","","","","","from_another","from_bits","from_bits_retain","","from_bits_truncate","from_elf","from_existed_user","from_iter","from_name","insert","insert_framed_area","intersection","intersects","into","","","","","into_iter","is_all","is_empty","iter","iter_names","map","map_one","map_perm","map_trampoline","map_type","new","new_bare","new_kernel","not","page_table","push","recycle_data_pages","remap_test","remove","remove_area_with_start_vpn","sbss_with_stack","sdata","set","shrink_to","srodata","stext","strampoline","sub","sub_assign","symmetric_difference","to_owned","","toggle","token","translate","try_from","","","","","try_into","","","","","type_id","","","","","union","unmap","unmap_one","vpn_range","A","D","G","PTEFlags","PageTable","PageTableEntry","R","U","V","W","X","all","bitand","bitand_assign","bitor","bitor_assign","bits","","","bitxor","bitxor_assign","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","complement","contains","difference","empty","","eq","executable","extend","find_pte","find_pte_create","flags","fmt","","","","frames","from","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","from_token","insert","intersection","intersects","into","","","into_iter","is_all","is_empty","is_valid","iter","iter_names","map","new","","not","ppn","readable","remove","root_ppn","set","sub","sub_assign","symmetric_difference","to_owned","toggle","token","translate","translate_va","translated_byte_buffer","translated_refmut","translated_str","try_from","","","try_into","","","type_id","","","union","unmap","writable","console_getchar","console_putchar","set_timer","shutdown","print_stack_trace","UPSafeCell","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_EXEC","SYSCALL_EXIT","SYSCALL_FORK","SYSCALL_GETPID","SYSCALL_GET_TIME","SYSCALL_READ","SYSCALL_WAITPID","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","syscall","FD_STDIN","FD_STDOUT","sys_read","sys_write","sys_exec","sys_exit","sys_fork","sys_get_time","sys_getpid","sys_waitpid","sys_yield","IDLE_PID","INITPROC","KernelStack","PidAllocator","PidHandle","Processor","TaskContext","__private_field","add_initproc","add_task","borrow","borrow_mut","context","current_task","current_trap_cx","current_user_token","deref","exit_current_and_run_next","from","into","manager","pid","pid_alloc","processor","run_tasks","schedule","suspend_current_and_run_next","switch","take_current_task","task","try_from","try_into","type_id","TaskContext","borrow","borrow_mut","clone","clone_into","clone_to_uninit","from","goto_trap_return","into","ra","s","sp","to_owned","try_from","try_into","type_id","zero_init","TASK_MANAGER","TaskManager","__private_field","add","add_task","borrow","","borrow_mut","","deref","fetch","fetch_task","from","","into","","new","ready_queue","try_from","","try_into","","type_id","","KernelStack","PID_ALLOCATOR","PidAllocator","PidHandle","__private_field","alloc","borrow","","","","borrow_mut","","","","current","dealloc","deref","drop","","from","","","","get_top","into","","","","kernel_stack_position","new","","pid","pid_alloc","push_on_top","recycled","try_from","","","","try_into","","","","type_id","","","","PROCESSOR","Processor","__private_field","borrow","","borrow_mut","","current","","current_task","current_trap_cx","current_user_token","deref","from","","get_idle_task_cx_ptr","idle_task_cx","into","","new","run_tasks","schedule","take_current_task","task_current","try_from","","try_into","","type_id","","__switch","Ready","Running","TaskControlBlock","TaskControlBlockInner","TaskStatus","Zombie","base_size","borrow","","","borrow_mut","","","children","clone","clone_into","clone_to_uninit","eq","exec","exit_code","fmt","fork","from","","","get_status","get_trap_cx","get_user_token","getpid","inner","inner_exclusive_access","into","","","is_zombie","kernel_stack","memory_set","new","parent","pid","task_cx","task_status","to_owned","trap_cx_ppn","try_from","","","try_into","","","type_id","","","MSEC_PER_SEC","TICKS_PER_SEC","get_time","get_time_ms","set_next_trigger","TrapContext","context","enable_timer_interrupt","init","set_kernel_trap_entry","set_user_trap_entry","trap_from_kernel","trap_handler","trap_return","TrapContext","app_init_context","borrow","borrow_mut","from","into","kernel_satp","kernel_sp","sepc","set_sp","sstatus","trap_handler","try_from","try_into","type_id","x"],"q":[[0,"os"],[23,"os::board"],[26,"os::config"],[37,"os::console"],[47,"os::lang_items"],[48,"os::loader"],[62,"os::log"],[78,"os::mm"],[102,"os::mm::address"],[228,"os::mm::frame_allocator"],[277,"os::mm::heap_allocator"],[281,"os::mm::memory_set"],[417,"os::mm::page_table"],[517,"os::sbi"],[521,"os::stack_trace"],[522,"os::sync"],[524,"os::sync::up"],[535,"os::syscall"],[547,"os::syscall::fs"],[551,"os::syscall::process"],[558,"os::task"],[591,"os::task::context"],[608,"os::task::manager"],[632,"os::task::pid"],[679,"os::task::processor"],[709,"os::task::switch"],[710,"os::task::task"],[763,"os::timer"],[768,"os::trap"],[777,"os::trap::context"],[793,"core::fmt"],[794,"core::result"],[795,"core::any"],[796,"core::panic::panic_info"],[797,"alloc::vec"],[798,"core::option"],[799,"log"],[800,"core::marker"],[801,"core::cmp"],[802,"core::clone"],[803,"buddy_system_allocator"],[804,"core::alloc::layout"],[805,"alloc::collections::btree::map"],[806,"alloc::sync"],[807,"core::iter::traits::collect"],[808,"bitflags::iter"],[809,"alloc::string"],[810,"core::cell"],[811,"alloc::collections::vec_deque"],[812,"riscv::register::sstatus"]],"i":"``````````````````````````````````````Ad000`0000``Al0000```0`000``Bf0000````00000````````````````````````````````````BnC`Df21CbCdCf35421054542105421054210542133542154542135554442221110205220135421030Dn141465653201Ch376432576432576432576432`````E`EbEd0Ej31031Ef3241201```2142`214321120214214214````Fj0`````Fd000F`Fb2Ff1333333330124301243434343330023```34``3433330124303333113331330124333333000100113111`31``30```333433110124301243012433000Gh00```000000000000Dj11Fh210211112222121200122220021222222022202122212200121120222212000```021021021201````````Eh000000000``````````````````````````````Hd``00````0`00``````````000`Hh000000000000000``HjHl`010110`010100010101````I`IbId1If3120322310120301203`200`02120312031203``IjIl10100```10100010```0010101`Jb0```0J`Hf120121222201200121110000121010101121012012012```````````````In00000000000000","f":"`{{}b}```````````{{}d}`````````{{}f}0{{}h}`11``11111{f{{j{ff}}}}`{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}{cc{}}{{}c{}}{nb}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{hAb}{{{h{lAd}}{h{Af}}}Ah}{{{h{Aj}}}d}`{Alb}:9{{{h{Al}}}{{h{{An{{h{Af}}}}}}}}9{f{{h{{Bb{B`}}}}}}{{{h{Af}}}{{Bd{{h{{Bb{B`}}}}}}}}{{}f};{{}b}:98`1?>{{{h{Bf}}{h{Bh}}}Bj}{{{h{Bf}}}b}?3332>{{{h{Bf}}{h{Bl}}}b}=<;`````````````````3``````44`````4`4``{{{h{Bn}}}Bj}{{{h{C`}}}Bj}{h{{h{c}}}{}}00000{{{h{l}}}{{h{lc}}}{}}00000{{{h{Bn}}}Cb}{{{h{C`}}}Cd}{{{h{Bn}}}Bn}{{{h{C`}}}C`}{{{h{Cb}}}Cb}{{{h{Cd}}}Cd}{{{h{{Cf{c}}}}}{{Cf{c}}}{ChCjClCnD`Db}}{{h{h{lc}}}b{}}0000{{hB`}b}0000{{{h{Bn}}{h{Bn}}}Dd}{{{h{C`}}{h{C`}}}Dd}{{{h{Cb}}{h{Cb}}}Dd}{{{h{Cd}}{h{Cd}}}Dd}{Df}0{{{h{Bn}}{h{Bn}}}Bj}{{{h{C`}}{h{C`}}}Bj}{{{h{Cb}}{h{Cb}}}Bj}{{{h{Cd}}{h{Cd}}}Bj}{{{h{Bn}}}Cb}{{{h{C`}}}Cd}{{{h{Bn}}{h{lDh}}}Ah}{{{h{C`}}{h{lDh}}}Ah}{{{h{Cb}}{h{lDh}}}Ah}{{{h{Cd}}{h{lDh}}}Ah}{cc{}}0{fBn}{CbBn}{CdC`}{fC`}4{BnCb}{fCb}6{fCd}7{C`Cd}8{{{h{Cb}}}{{h{l{Bb{B`}}}}}}{{{h{{Cf{c}}}}}c{ChCjClCnD`}}{{{h{Bn}}}{{h{lc}}}{}}{{{h{Cb}}}{{h{lc}}}{}}{{{h{Cb}}}{{h{l{Bb{Dj}}}}}}3{{{h{Cd}}}{{Dl{f}}}}{{}c{}}00000{{}c{}}{{{Cf{c}}}e{ChCjClCnD`}{}}{DnCd}{Cf}{{cc}{{Df{c}}}{ChCjClCnD`}}{{cc}{{Cf{c}}}{ChCjClCnD`}}{{{h{l{Df{c}}}}}{{Bd{e}}}{ChCjClCnD`}{}}{{{h{Bn}}}f}{{{h{C`}}}f}{{{h{Bn}}{h{Bn}}}{{Bd{Dd}}}}{{{h{C`}}{h{C`}}}{{Bd{Dd}}}}{{{h{Cb}}{h{Cb}}}{{Bd{Dd}}}}{{{h{Cd}}{h{Cd}}}{{Bd{Dd}}}}:9{{{h{lCh}}}b}{{{h{lCd}}}b}{hc{}}0000{c{{A`{e}}}{}{}}00000{{}{{A`{c}}}{}}00000{hAb}00000`````{E`b}{{{h{lEb}}}{{Bd{Cb}}}}{{{h{lEd}}}{{Bd{Cb}}}}{h{{h{c}}}{}}00{{{h{l}}}{{h{lc}}}{}}00{Edf}{Eff}{{{h{lEb}}Cb}b}{{{h{lEd}}Cb}b}{{{h{E`}}}{{h{{Eh{Ed}}}}}}{{{h{lEj}}}b}54{{{h{Ej}}{h{lDh}}}Ah}{{}{{Bd{Ej}}}}{{}b}{Cbb}{cc{}}00{{{h{lEd}}CbCb}b}3{{}c{}}00{{}Eb}{{}Ed}{CbEj}{EjCb}{EdAn}{EfAn}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{hAb}00{{}El}{{}Dl}{End}{{}b}```````````{F`b}{{{h{Fb}}}b}{{}Fd}{{{h{lFf}}{h{lFh}}Cd}b}{FbAn}{{FdFd}Fd}{{{h{lFd}}Fd}b}10{{{h{Fd}}}B`}021{h{{h{c}}}{}}0000{{{h{l}}}{{h{lc}}}{}}0000{{{h{Fj}}}Fj}{{{h{Fd}}}Fd}{{h{h{lc}}}b{}}0{{hB`}b}0{FdFd}{{{h{Fd}}Fd}Bj}{{{h{lFf}}{h{Fh}}{h{{Bb{B`}}}}}b}{FfFl}{{{h{F`}}}{{h{{Fn{{Eh{Fb}}}}}}}}={{}b}00{{}Fd}{{{h{Fj}}{h{Fj}}}Bj}22{{{h{lFd}}c}b{{Gb{}{{G`{Fd}}}}}}{{{h{Fj}}{h{lDh}}}Ah}{{{h{Fd}}{h{lDh}}}Ah}000{cc{}}0000{{{h{Ff}}}Ff}{B`{{Bd{Fd}}}}{B`Fd}00{{{h{{Bb{B`}}}}}{{j{Fbff}}}}{{{h{Fb}}}Fb}{cFd{{Gb{}{{G`{Fd}}}}}}{{{h{Af}}}{{Bd{Fd}}}}{{{h{lFd}}Fd}b}{{{h{lFb}}C`C`Fd}b}{{FdFd}Fd}{{{h{Fd}}Fd}Bj}{{}c{}}0000{Fdc{}}{{{h{Fd}}}Bj}0{{{h{Fd}}}{{Gd{Fd}}}}{{{h{Fd}}}{{Gf{Fd}}}}{{{h{lFf}}{h{lFh}}}b}{{{h{lFf}}{h{lFh}}Cd}b}{FfFd}{{{h{lFb}}}b}{FfFj}{{C`C`FjFd}Ff}{{}Fb}0{FdFd}{FbFh}{{{h{lFb}}Ff{Bd{{h{{Bb{B`}}}}}}}b}6{{}b}{{{h{lFd}}Fd}b}{{{h{lFb}}Cd}b}22{{{h{lFd}}FdBj}b}<333{{FdFd}Fd}30{hc{}}04{{{h{Fb}}}f}{{{h{Fb}}Cd}{{Bd{Dj}}}}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{hAb}00006{{{h{lFf}}{h{lFh}}}b}{{{h{lFf}}{h{lFh}}Cd}b}{FfCf}```````````{{}Gh}{{GhGh}Gh}{{{h{lGh}}Gh}b}10{{{h{Gh}}}B`}0{Djf}32{h{{h{c}}}{}}00{{{h{l}}}{{h{lc}}}{}}00{{{h{Dj}}}Dj}{{h{h{lc}}}b{}}{{hB`}b}{GhGh}{{{h{Gh}}Gh}Bj}:;{{}Dj}{{{h{Gh}}{h{Gh}}}Bj}{{{h{Dj}}}Bj}{{{h{lGh}}c}b{{Gb{}{{G`{Gh}}}}}}{{{h{Fh}}Cd}{{Bd{{h{lDj}}}}}}{{{h{lFh}}Cd}{{Bd{{h{lDj}}}}}}{{{h{Dj}}}Gh}{{{h{Gh}}{h{lDh}}}Ah}000{FhAn}{cc{}}00{B`{{Bd{Gh}}}}{B`Gh}00{cGh{{Gb{}{{G`{Gh}}}}}}{{{h{Af}}}{{Bd{Gh}}}}{fFh}{{{h{lGh}}Gh}b}{{GhGh}Gh}{{{h{Gh}}Gh}Bj}{{}c{}}00{Ghc{}}{{{h{Gh}}}Bj}0{{{h{Dj}}}Bj}{{{h{Gh}}}{{Gd{Gh}}}}{{{h{Gh}}}{{Gf{Gh}}}}{{{h{lFh}}CdCbGh}b}{{}Fh}{{CbGh}Dj}{GhGh}{{{h{Dj}}}Cb}7={FhCb}{{{h{lGh}}GhBj}b}>?>{hc{}}{{{h{lGh}}Gh}b}{{{h{Fh}}}f}{{{h{Fh}}Cd}{{Bd{Dj}}}}{{{h{Fh}}C`}{{Bd{Bn}}}}{{fB`f}{{An{{h{l{Bb{B`}}}}}}}}{f{{h{lc}}}{}}{{fB`}Gj}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{hAb}00{{GhGh}Gh}{{{h{lFh}}Cd}b}{{{h{Dj}}}Bj}{{}f}{fb}0{Bjd}{{}b}```{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}{{{h{{Eh{c}}}}}{{Gl{c}}}{}}{cc{}}{EhGn}{{}c{}}{c{{Eh{c}}}{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{hAb}=========``{{f{Dl{f}}}H`}>>{{fB`f}H`}0{B`H`}{HbH`}{{}H`}00{{H`Hb}H`}1{{}f}``````{Hdb}{{}b}`{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}````{{{h{Hd}}}{{h{{Fn{Hf}}}}}}{Hbb}{cc{}}{{}c{}}``````6```{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{hAb}`87{{{h{Hh}}}Hh}{{h{h{lc}}}b{}}{{hB`}b}7{fHh}7{Hhf}{HhDl}1{hc{}}987{{}Hh}``{Hjb}{{{h{lHl}}{Fn{Hf}}}b}{{{Fn{Hf}}}b}{h{{h{c}}}{}}0{{{h{l}}}{{h{lc}}}{}}0{{{h{Hj}}}{{h{{Eh{Hl}}}}}}{{{h{lHl}}}{{Bd{{Fn{Hf}}}}}}{{}{{Bd{{Fn{Hf}}}}}}{cc{}}0{{}c{}}0{{}Hl}{HlHn}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{hAb}0````{I`b}{{{h{lIb}}}Id}====<<<<{Ibf}{{{h{lIb}}f}b}{{{h{I`}}}{{h{{Eh{Ib}}}}}}{{{h{lId}}}b}{{{h{lIf}}}b}===={{{h{If}}}f}===={f{{j{ff}}}}{{}Ib}{{{h{Id}}}If}{Iff}{{}Id}{{{h{If}}c}{}Ih}{IbAn}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{hAb}000``{Ijb}{h{{h{c}}}{}}0{{{h{l}}}{{h{lc}}}{}}0{{{h{Il}}}{{Bd{{Fn{Hf}}}}}}{IlBd}{{}{{Bd{{Fn{Hf}}}}}}{{}{{h{lIn}}}}{{}f}{{{h{Ij}}}{{h{{Eh{Il}}}}}}{cc{}}0{{{h{lIl}}}Hh}{IlHh}{{}c{}}0{{}Il}{{}b}{Hhb}:{{{h{lIl}}}{{Bd{{Fn{Hf}}}}}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{hAb}0{{HhHh}b}``````{J`f}{h{{h{c}}}{}}00{{{h{l}}}{{h{lc}}}{}}00{J`An}{{{h{Jb}}}Jb}{{h{h{lc}}}b{}}{{hB`}b}{{{h{Jb}}{h{Jb}}}Bj}{{{h{Hf}}{h{{Bb{B`}}}}}b}{J`Hb}{{{h{Jb}}{h{lDh}}}Ah}{{{h{{Fn{Hf}}}}}{{Fn{Hf}}}}{cc{}}00{{{h{J`}}}Jb}{{{h{J`}}}{{h{lIn}}}}{{{h{J`}}}f}{{{h{Hf}}}f}{HfEh}{{{h{Hf}}}{{Gl{J`}}}}{{}c{}}00{{{h{J`}}}Bj}{HfIf}{J`Fb}{{{h{{Bb{B`}}}}}Hf}{J`Bd}{HfId}{J`Hh}{J`Jb}{hc{}}{J`Cb}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{hAb}00{{}f}000{{}b}``0000{{}d}00`{{fffff}In}{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}{cc{}}{{}c{}}{Inf}00{{{h{lIn}}f}b}{InJd}2=<;{InDl}","D":"CH`","p":[[1,"unit"],[1,"never"],[1,"usize"],[1,"reference",null,null,1],[1,"tuple",null,null,1],[0,"mut"],[5,"Arguments",793],[6,"Result",794,null,1],[5,"TypeId",795],[5,"Stdout",37],[1,"str"],[8,"Result",793],[5,"PanicInfo",796],[5,"APP_NAMES",48],[5,"Vec",797],[1,"u8"],[1,"slice"],[6,"Option",798,null,1],[5,"SimpleLogger",62],[5,"Metadata",799],[1,"bool"],[5,"Record",799],[5,"PhysAddr",102],[5,"VirtAddr",102],[5,"PhysPageNum",102],[5,"VirtPageNum",102],[5,"SimpleRange",102],[10,"StepByOne",102],[10,"Copy",800],[10,"PartialEq",801],[10,"PartialOrd",801],[10,"Debug",793],[10,"Clone",802],[6,"Ordering",801],[5,"SimpleRangeIterator",102],[5,"Formatter",793],[5,"PageTableEntry",417],[1,"array"],[8,"VPNRange",102],[5,"FRAME_ALLOCATOR",228],[10,"FrameAllocator",228],[5,"StackFrameAllocator",228],[8,"FrameAllocatorImpl",228],[5,"UPSafeCell",524],[5,"FrameTracker",228],[5,"LockedHeap",803],[5,"Layout",804],[5,"KERNEL_SPACE",281],[5,"MemorySet",281],[5,"MapPermission",281],[5,"MapArea",281],[5,"PageTable",417],[6,"MapType",281],[5,"BTreeMap",805],[5,"Arc",806,null,1],[17,"Item"],[10,"IntoIterator",807],[5,"Iter",808],[5,"IterNames",808],[5,"PTEFlags",417],[5,"String",809],[5,"RefMut",810],[5,"RefCell",810],[1,"isize"],[1,"i32"],[5,"INITPROC",558],[5,"TaskControlBlock",710],[5,"TaskContext",591],[5,"TASK_MANAGER",608],[5,"TaskManager",608],[5,"VecDeque",811],[5,"PID_ALLOCATOR",632],[5,"PidAllocator",632],[5,"PidHandle",632],[5,"KernelStack",632],[10,"Sized",800],[5,"PROCESSOR",679],[5,"Processor",679],[5,"TrapContext",777],[5,"TaskControlBlockInner",710],[6,"TaskStatus",710],[5,"Sstatus",812]],"r":[[26,23],[29,23],[30,23],[78,228],[79,281],[80,281],[81,281],[82,281],[83,417],[84,417],[85,417],[86,102],[87,102],[88,102],[89,102],[91,228],[93,228],[98,281],[99,417],[100,417],[101,417],[522,524],[560,632],[561,632],[562,632],[563,679],[564,591],[567,608],[571,679],[572,679],[573,679],[580,632],[582,679],[583,679],[586,679],[768,777]],"b":[[163,"impl-From%3Cusize%3E-for-PhysAddr"],[164,"impl-From%3CPhysPageNum%3E-for-PhysAddr"],[165,"impl-From%3CVirtPageNum%3E-for-VirtAddr"],[166,"impl-From%3Cusize%3E-for-VirtAddr"],[168,"impl-From%3CPhysAddr%3E-for-PhysPageNum"],[169,"impl-From%3Cusize%3E-for-PhysPageNum"],[171,"impl-From%3Cusize%3E-for-VirtPageNum"],[173,"impl-From%3CVirtAddr%3E-for-VirtPageNum"],[301,"impl-Flags-for-MapPermission"],[302,"impl-MapPermission"],[336,"impl-UpperHex-for-MapPermission"],[337,"impl-LowerHex-for-MapPermission"],[338,"impl-Binary-for-MapPermission"],[339,"impl-Octal-for-MapPermission"],[347,"impl-Flags-for-MapPermission"],[348,"impl-MapPermission"],[433,"impl-Flags-for-PTEFlags"],[434,"impl-PTEFlags"],[458,"impl-UpperHex-for-PTEFlags"],[459,"impl-Binary-for-PTEFlags"],[460,"impl-Octal-for-PTEFlags"],[461,"impl-LowerHex-for-PTEFlags"],[467,"impl-PTEFlags"],[468,"impl-Flags-for-PTEFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFkBVwAYAAMAHgABACcAAQAsAAIAMgADADwAAgBBAAEATAAOAFwAAABeAAAAYwAFAG4AAABwAAAAdQALAIMAGACeAAMApAADAKkAAQCsAAAArgAAAL0AAAC/AAEAxgAFAM4AFgDqAAAA7QAFAPcAAAANAQgAJQEAACkBAAAuAQAAMgEPAEUBAQBIAQIATAECAFABBABcAQAAbAEAAHMBAAB1AQAAegEAAIABAQCEAQIAigEBAI8BDgChAQAAsgEAALcBCADFAQAAywEDANUBAADgAQAA8gEAAPoBCAALAgAADgIBABUCAwAaAgEAHQIBACUCAAAxAgUAOAICADwCAwBFAgAARwIBAEsCAABNAgIAUQIEAFwCAwBjAgAAZgIEAHMCBQB9AgAAfwIHAIkCAgCcAgsAqgIEALQCAADAAgUAzgIFANUCAwDbAgAA8QIAAPMCCAABAwAADAMBABYDAgA=","P":[[38,"T"],[41,"U"],[42,""],[43,"U,T"],[44,"U"],[45,""],[50,"T"],[52,""],[53,"T"],[54,""],[57,"U"],[58,""],[59,"U,T"],[60,"U"],[61,""],[64,"T"],[66,""],[68,"T"],[69,""],[73,"U"],[74,""],[75,"U,T"],[76,"U"],[77,""],[116,"T"],[128,""],[134,"T"],[140,""],[161,"T"],[163,""],[167,"T"],[168,""],[170,"T"],[171,""],[172,"T"],[173,""],[174,"T"],[175,""],[176,"T"],[179,""],[180,"T"],[181,""],[182,"U"],[188,"I"],[189,"T,IntoIterator::IntoIter"],[190,""],[192,"T"],[194,"T,Iterator::Item"],[195,""],[205,"T"],[210,"U,T"],[216,"U"],[222,""],[236,"T"],[242,""],[254,"T"],[257,""],[259,"U"],[262,""],[268,"U,T"],[271,"U"],[274,""],[305,"T"],[315,""],[317,"T"],[319,""],[334,"T"],[335,""],[340,"T"],[345,""],[352,"T"],[353,""],[358,"U"],[363,"IntoIterator::IntoIter"],[364,""],[393,"T"],[395,""],[398,"U,T"],[403,"U"],[408,""],[438,"T"],[444,""],[445,"T"],[446,""],[454,"T"],[455,""],[463,"T"],[466,""],[470,"T"],[471,""],[476,"U"],[479,"IntoIterator::IntoIter"],[480,""],[497,"T"],[498,""],[503,"T"],[504,""],[505,"U,T"],[508,"U"],[511,""],[525,"T"],[529,""],[530,"U"],[531,"T"],[532,"U,T"],[533,"U"],[534,""],[568,"T"],[574,""],[576,"T"],[577,"U"],[584,""],[588,"U,T"],[589,"U"],[590,""],[592,"T"],[594,""],[595,"T"],[596,""],[597,"T"],[598,""],[599,"U"],[600,""],[603,"T"],[604,"U,T"],[605,"U"],[606,""],[613,"T"],[617,""],[620,"T"],[622,"U"],[624,""],[626,"U,T"],[628,"U"],[630,""],[638,"T"],[646,""],[651,"T"],[655,""],[656,"U"],[660,""],[665,"T"],[666,""],[667,"U,T"],[671,"U"],[675,""],[682,"T"],[686,""],[692,"T"],[694,""],[696,"U"],[698,""],[703,"U,T"],[705,"U"],[707,""],[717,"T"],[723,""],[725,"T"],[726,""],[732,"T"],[735,""],[741,"U"],[744,""],[752,"T"],[753,""],[754,"U,T"],[757,"U"],[760,""],[779,"T"],[782,"U"],[783,""],[789,"U,T"],[790,"U"],[791,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[3351,20649]}