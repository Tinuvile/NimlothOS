searchState.loadedDescShard("easy_fs", 0, "Easy File System (Easy-FS)\n文件系统块大小（字节）\n块设备抽象接口\n目录项大小（字节）\n数据块类型，存储文件数据\n目录项结构\n目录文件\n磁盘 inode 结构\n磁盘 inode 类型\nEasy File System 主体结构\n普通文件\n文件系统超级块\n分配一个新的数据块\n分配一个新的 inode\n获取目录项的字节表示\n获取目录项的可变字节表示\n同步所有缓存到磁盘\n计算扩展文件需要的新块数\n清空文件内容并回收所有数据块\n创建新的文件系统\n计算文件占用的数据块数量\n释放指定的数据块\n释放指定的 inode\n创建空的目录项\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n获取指定块的缓存\n获取指定逻辑块号对应的物理块 ID\n获取数据块在磁盘上的实际块号\n获取指定 inode 在磁盘上的位置\n扩展文件大小并分配新块\n初始化超级块\n初始化磁盘 inode\n获取 inode 号\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n检查是否为目录\n检查是否为普通文件\n验证超级块有效性\n获取文件名\n创建新的目录项\n打开现有文件系统\n从指定偏移量读取文件数据\n从指定块读取数据\n获取文件系统的根目录 inode\n计算文件占用的总块数（包括索引块）\n向指定偏移量写入文件数据\n向指定块写入数据")