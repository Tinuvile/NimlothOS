var searchIndex = new Map(JSON.parse('[["os",{"t":"CHCCQCQCQCCCQQCHCCCCCQCQISSSESSESSESSSSSHFNNNNHNNNNEECFEONNNNNNNNCFSFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNKEEEEECEEECMMCMMTFFFTTFTTONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNHNNOHNNNNONNNNNNNNNNNNNNNNNNNNONPPPFFSGNONNNNNNNNONNNNNNNONNNHNNNNNONOONNNNNNNNNNNONNONFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHFJNNHNNNHNNHHNNNEEEEEEEEEEEEEECECECHECCEEEEESSFFFFKSISFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNOONMNNNNNNNNNNNNNNNNNNNNNNNNNFKIFFOMNNNNNNNOOMNNNOONHHHNNNNHNNNMNNOOONNNNNNNNNJJHHPPFFFGFTTTTONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNONNHHHNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNONONNNNONNHNNHHNNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNOTTTFFFTTFFTTTNNNNNNNONNNNNNNNNNNNOONNNNNOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNHHHHNNNNNNNNNNNNNNNNNNSFEEEEEOHEEENNHHHHCHEEENHNEHNCCECCEEECHCENNNFNNNNNNNNOOONNNNNFFFOONNHHHNNNNNNNNNHNNNHNNNNNHOOHONNNNNNNNNFFFFONNNNNNNNNONNNNNNNNNNNNHNNOHNONNNNNNNNNNNNNFFGPPPNONNNNNNONNNNNOONNNNNONOONNNNNOOONOOOOOOOONOONONONNNNNNNNNNFFONNNNNOHHHNNNONNNNNHHHNNNNNNSTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNONNNNNNONNNNNNNNNNNNNNHHHHHHECFNNNNONNNNNSSSSSSSSSSSSSSSSSCCHHHHHHHHHHHHHHHHHHHSSHHHECHHHHHHHFNNNNNNNNNOOONONONNNO","n":["board","clear_bss","config","console","debug","drivers","error","fs","info","lang_items","log","mm","print","println","process","rust_main","sbi","stack_trace","sync","syscall","timer","trace","trap","warn","BlockDeviceImpl","CLOCK_FREQ","MEMORY_END","MMIO","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MEMORY_END","MLFQ_BASE_TIME_SLICE","MLFQ_QUEUE_COUNT","MMIO","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT","USER_STACK_SIZE","kernel_stack_position","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","BLOCK_DEVICE","","block","BLOCK_DEVICE","VirtIOBlock","__private_field","borrow","borrow_mut","deref","from","into","try_from","try_into","type_id","virtio_blk","QUEUE_FRAMES","VIRTIO0","VirtIOBlock","VirtioHal","__private_field","borrow","","","borrow_mut","","","deref","dma_alloc","dma_dealloc","from","","","into","","","new","phys_to_virt","read_block","try_from","","","try_into","","","type_id","","","virt_to_phys","write_block","File","OSInode","OpenFlags","Stderr","Stdin","Stdout","inode","list_apps","make_pipe","open_file","pipe","read","readable","stdio","writable","write","CREATE","OSInode","OSInodeInner","OpenFlags","RDONLY","RDWR","ROOT_INODE","TRUNC","WRONLY","__private_field","all","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","borrow_mut","","","","complement","contains","deref","difference","empty","extend","fmt","","","","from","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","inner","inode","insert","intersection","intersects","into","","","","into_iter","is_all","is_empty","iter","iter_names","list_apps","new","not","offset","open_file","read","read_all","read_write","readable","","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","","","","try_into","","","","type_id","","","","union","writable","","write","Empty","Full","Normal","Pipe","PipeRingBuffer","RING_BUFFER_SIZE","RingBufferStatus","all_write_ends_closed","arr","available_read","available_write","borrow","","","borrow_mut","","","buffer","clone","clone_into","clone_to_uninit","eq","from","","","head","into","","","make_pipe","new","read","read_byte","read_end_with_buffer","readable","","set_write_end","status","tail","to_owned","try_from","","","try_into","","","type_id","","","writable","","write","write_byte","write_end","write_end_with_buffer","Stderr","Stdin","Stdout","borrow","","","borrow_mut","","","from","","","into","","","read","","","readable","","","try_from","","","try_into","","","type_id","","","writable","","","write","","","panic","SimpleLogger","TICK_COUNT","borrow","borrow_mut","cpu_id","enabled","flush","from","init","into","log","thread_id","timestamp","try_from","try_into","type_id","FrameTracker","KERNEL_SPACE","","MapPermission","MemorySet","PageTable","PageTableEntry","PhysAddr","PhysPageNum","StepByOne","UserBuffer","VPNRange","VirtAddr","VirtPageNum","address","frame_alloc","frame_allocator","frame_dealloc","heap_allocator","init","kernel_token","memory_set","page_table","remap_test","translated_byte_buffer","translated_ref","translated_refmut","translated_str","PA_WIDTH_SV39","PPN_WIDTH_SV39","PhysAddr","PhysPageNum","SimpleRange","SimpleRangeIterator","StepByOne","VA_WIDTH_SV39","VPNRange","VPN_WIDTH_SV39","VirtAddr","VirtPageNum","_ref","aligned","","borrow","","","","","","borrow_mut","","","","","","bytes_array","ceil","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","cmp","","","","current","end","","eq","","","","floor","","fmt","","","","from","","","","","","","","","","","","","","indexes","into","","","","","","into_iter","","l","","mut_ref","","new","","next","page_offset","","partial_cmp","","","","pte_array","r","","start","step","","","to_owned","","","","","try_from","","","","","","try_into","","","","","","type_id","","","","","","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","","borrow","","","borrow_mut","","","current","","dealloc","","deref","drop","end","","fmt","frame_alloc","frame_alloctor_test","frame_dealloc","from","","","init","init_frame_allocator","into","","","new","","","ppn","recycled","","try_from","","","try_into","","","type_id","","","HEAP_ALLOCATOR","HEAP_SPACE","alloc_error_handler","init_heap","Framed","Identical","KERNEL_SPACE","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","__private_field","activate","all","append_to","areas","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","complement","contains","copy_data","data_frames","deref","difference","ebss","edata","ekernel","empty","eq","erodata","etext","extend","fmt","","","","","from","","","","","from_another","from_bits","from_bits_retain","","from_bits_truncate","from_elf","from_existed_user","from_iter","from_name","insert","insert_framed_area","intersection","intersects","into","","","","","into_iter","is_all","is_empty","iter","iter_names","kernel_token","map","map_one","map_perm","map_trampoline","map_type","new","new_bare","new_kernel","not","page_table","push","recycle_data_pages","remap_test","remove","remove_area_with_start_vpn","sbss_with_stack","sdata","set","shrink_to","srodata","stext","strampoline","sub","sub_assign","symmetric_difference","to_owned","","toggle","token","translate","try_from","","","","","try_into","","","","","type_id","","","","","union","unmap","unmap_one","vpn_range","A","D","G","PTEFlags","PageTable","PageTableEntry","R","U","UserBuffer","UserBufferIterator","V","W","X","all","bitand","bitand_assign","bitor","bitor_assign","bits","","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","buffers","","clone","clone_into","clone_to_uninit","complement","contains","current_buffer","current_idx","difference","empty","","eq","executable","extend","find_pte","find_pte_create","flags","fmt","","","","frames","from","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","from_token","insert","intersection","intersects","into","","","","","into_iter","","","is_all","is_empty","is_valid","iter","iter_names","len","map","new","","","next","not","ppn","readable","remove","root_ppn","set","sub","sub_assign","symmetric_difference","to_owned","toggle","token","translate","translate_va","translated_byte_buffer","translated_ref","translated_refmut","translated_str","try_from","","","","","try_into","","","","","type_id","","","","","union","unmap","writable","IDLE_PID","INITPROC","MAX_SIG","ProcessContext","SignalAction","SignalActions","SignalFlags","__private_field","add_initproc","add_process","add_process_with_priority","boost_process_priority","borrow","borrow_mut","call_kernel_signal_handler","call_user_signal_handler","check_pending_signals","check_signals_error_of_current","context","current_add_signal","current_process","current_trap_cx","current_user_token","deref","exit_current_and_run_next","from","get_time_slice","handle_signals","into","manager","pid","pid2process","process","processor","remove_from_pid2process","run_process","schedule","signal","suspend_current_and_run_next","switch","take_current_process","try_from","try_into","type_id","ProcessContext","borrow","borrow_mut","clone","clone_into","clone_to_uninit","from","goto_trap_return","into","ra","s","sp","to_owned","try_from","try_into","type_id","zero_init","PID2TCB","PROCESS_MANAGER","ProcessManager","__private_field","","add","add_new","add_process","add_process_with_priority","boost_process_priority","borrow","","","borrow_mut","","","deref","","fetch","fetch_process","from","","","get_time_slice","","into","","","new","pid2process","queue_count","ready_queues","remove_from_pid2process","time_slices","try_from","","","try_into","","","type_id","","","KernelStack","PID_ALLOCATOR","PidAllocator","PidHandle","__private_field","alloc","borrow","","","","borrow_mut","","","","current","dealloc","deref","drop","","from","","","","into","","","","kernel_stack_position","new","","pid","pid_alloc","push_on_top","recycled","top","try_from","","","","try_into","","","","type_id","","","","ProcessControlBlock","ProcessControlBlockInner","ProcessStatus","Ready","Running","Zombie","alloc_fd","base_size","borrow","","","borrow_mut","","","children","clone","clone_into","clone_to_uninit","eq","exec","exit_code","fd_table","fmt","fork","from","","","frozen","getpid","handling_sig","inner","inner_exclusive_access","into","","","is_zombie","kernel_stack","killed","memory_set","new","parent","pid","priority","process_cx","process_status","signal_actions","signal_mask","signals","status","time_slice_limit","time_slice_used","to_owned","trap_ctx_backup","trap_cx","trap_cx_ppn","try_from","","","try_into","","","type_id","","","user_token","PROCESSOR","Processor","__private_field","borrow","","borrow_mut","","current","","current_process","current_trap_cx","current_user_token","deref","from","","idle_process_cx","idle_process_cx_ptr","into","","new","process_current","run_process","schedule","take_current_process","try_from","","try_into","","type_id","","MAX_SIG","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGDEF","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGKILL","SIGPIPE","SIGPROF","SIGPWR","SIGQUIT","SIGSEGV","SIGSTKFLT","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SignalAction","SignalActions","SignalFlags","all","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","borrow_mut","","","check_error","clone","","","clone_into","","","clone_to_uninit","","","complement","contains","default","","difference","empty","eq","","extend","fmt","","","","","","from","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","handler","insert","intersection","intersects","into","","","into_iter","is_all","is_empty","iter","iter_names","mask","not","remove","set","sub","sub_assign","symmetric_difference","table","to_owned","","","toggle","try_from","","","try_into","","","type_id","","","union","__switch","console_getchar","console_putchar","shutdown","timer","print_stack_trace","UPSafeCell","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_CLOSE","SYSCALL_DUP","SYSCALL_EXEC","SYSCALL_EXIT","SYSCALL_FORK","SYSCALL_KILL","SYSCALL_OPEN","SYSCALL_PID","SYSCALL_PIPE","SYSCALL_READ","SYSCALL_SIGACTION","SYSCALL_SIGPROCMASK","SYSCALL_SIGRETURN","SYSCALL_TIME","SYSCALL_WAITPID","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","syscall","sys_close","sys_dup","sys_open","sys_pipe","sys_read","sys_write","check_sigaction_error","sys_exec","sys_exit","sys_fork","sys_kill","sys_pid","sys_sigaction","sys_sigprocmask","sys_sigreturn","sys_time","sys_waitpid","sys_yield","MSEC_PER_SEC","TICKS_PER_SEC","next_trigger","time","time_ms","TrapContext","context","enable_timer_interrupt","init","set_kernel_trap_entry","set_user_trap_entry","trap_from_kernel","trap_handler","trap_return","TrapContext","app_init_context","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fmt","from","into","kernel_satp","kernel_sp","sepc","sp","sstatus","to_owned","trap_handler","try_from","try_into","type_id","x"],"q":[[0,"os"],[24,"os::board"],[28,"os::config"],[41,"os::console"],[51,"os::drivers"],[54,"os::drivers::block"],[66,"os::drivers::block::virtio_blk"],[100,"os::fs"],[116,"os::fs::inode"],[209,"os::fs::pipe"],[264,"os::fs::stdio"],[300,"os::lang_items"],[301,"os::log"],[317,"os::mm"],[345,"os::mm::address"],[473,"os::mm::frame_allocator"],[522,"os::mm::heap_allocator"],[526,"os::mm::memory_set"],[663,"os::mm::page_table"],[789,"os::process"],[833,"os::process::context"],[850,"os::process::manager"],[893,"os::process::pid"],[940,"os::process::process"],[1005,"os::process::processor"],[1035,"os::process::signal"],[1154,"os::process::switch"],[1155,"os::sbi"],[1159,"os::stack_trace"],[1160,"os::sync"],[1162,"os::sync::up"],[1173,"os::syscall"],[1193,"os::syscall::fs"],[1199,"os::syscall::process"],[1211,"os::timer"],[1216,"os::trap"],[1225,"os::trap::context"],[1246,"core::fmt"],[1247,"core::result"],[1248,"core::any"],[1249,"components::micro_fs::block_dev"],[1250,"alloc::sync"],[1251,"alloc::vec"],[1252,"components::micro_fs::vfs"],[1253,"core::iter::traits::collect"],[1254,"core::option"],[1255,"bitflags::iter"],[1256,"core::panic::panic_info"],[1257,"log"],[1258,"core::marker"],[1259,"core::cmp"],[1260,"core::clone"],[1261,"buddy_system_allocator"],[1262,"core::alloc::layout"],[1263,"alloc::collections::btree::map"],[1264,"alloc::string"],[1265,"core::cell"],[1266,"riscv::register::sstatus"]],"i":"``````````````````````````````````````````Ad000`0000`````Aj00000000`````B`BjM`210220010210210110210210201```````````C`0`00Ch```00`00Cf111111111DhDf2310233323333333102333333301333102333333`031`003003333331023102310233000Ed00````Dn000Eb12012022220121012`1010001112012012012000110```EfEhEj210210210210210210210210210210```En0`000`00``000````````````````````````````````````````Fd0FfGl21FhFjFl3542102545421054210542105421303542154542135554442221110135421030Gn1634146565323011Fn4376432576432576432576432`````HbHdHf0Bb31031Hh3241201```2142`214321120214214214````Ih0`````Ib000HnI`2Id1333333330124301243434343330023```34``3433330124303333113331330124333333`000100113111`31``30```333433110124301243012433000Il00```00``0000000000H`11IfCbIn432104310333440044343422344442210434444442444210431044434412213043342444434222````210432104321043423```````Jb````00`````````0`0``0````````````000`Jh000000000000000```JjJlJn0```021021210`021`00210`00`0021021021````K`KbKd1Kf312032231012031203`200`020120312031203```Kl00Kj0Jf12012122220112001210100012101101011111111121110120120121``LfLh10100```101000100```010101`Jd0000000000000000000000000000000```0000000000LjLb21022102102102210222122222212102222221222210222221222222021022102102102`````````Bf000000000`````````````````````````````````````````````````````Ld0000000000000000000","f":"`{{}b}`````````````{{}d}`````````{{}f}0{{}h}`11`11`11111{f{{j{ff}}}}`{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}{cc{}}{{}c{}}{nb}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{hAb}{{{h{lAd}}{h{Af}}}Ah}`````{Ajb}98{{{h{Aj}}}{{h{{An{Al}}}}}}87543``=``{B`b};;;:::{{{h{B`}}}{{h{{Bf{{Bd{Bb}}}}}}}}{ff}{{ff}Bh}<<<;;;{{}Bj}2{{{h{Bj}}f{h{l{Bn{Bl}}}}}b};;;:::9993{{{h{Bj}}f{h{{Bn{Bl}}}}}b}```````````{{{h{C`}}Cb}f}{{{h{C`}}}Cd}`01`````````{Cfb}{{}Ch}{{ChCh}Ch}{{{h{lCh}}Ch}b}10{{{h{Ch}}}Cj}021{h{{h{c}}}{}}000{{{h{l}}}{{h{lc}}}{}}000{ChCh}{{{h{Ch}}Ch}Cd}{{{h{Cf}}}{{h{{An{Cl}}}}}}78{{{h{lCh}}c}b{{D`{}{{Cn{Ch}}}}}}{{{h{Ch}}{h{lDb}}}Ah}000{cc{}}000{Cj{{Dd{Ch}}}}{CjCh}00{cCh{{D`{}{{Cn{Ch}}}}}}{{{h{Af}}}{{Dd{Ch}}}}{DfBf}{DhAn}?{{ChCh}Ch};{{}c{}}000{Chc{}}{{{h{Ch}}}Cd}0{{{h{Ch}}}{{Dj{Ch}}}}{{{h{Ch}}}{{Dl{Ch}}}}{{}b}{{CdCd{An{Cl}}}Df}{ChCh}{Dhf}{{{h{Af}}Ch}{{Dd{{An{Df}}}}}}{{{h{Df}}Cb}f}{{{h{Df}}}{{Bd{Bl}}}}{{{h{Ch}}}{{j{CdCd}}}}{{{h{Df}}}Cd}{DfCd}{{{h{lCh}}Ch}b}{{{h{lCh}}ChCd}b}{{ChCh}Ch}202{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{hAb}000376:`````{{}f}`{{{h{Dn}}}Cd}{DnE`}{{{h{Dn}}}f}0{h{{h{c}}}{}}00{{{h{l}}}{{h{lc}}}{}}00{EbAn}{{{h{Ed}}}Ed}{{h{h{lc}}}b{}}{{hBl}b}{{{h{Ed}}{h{Ed}}}Cd}{cc{}}00{Dnf}{{}c{}}00{{}{{j{{An{Eb}}{An{Eb}}}}}}{{}Dn}{{{h{Eb}}Cb}f}{{{h{lDn}}}Bl}{{{An{{Bf{Dn}}}}}Eb}{{{h{Eb}}}Cd}{EbCd}{{{h{lDn}}{h{{An{Eb}}}}}b}{DnEd}:{hc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{hAb}0076:{{{h{lDn}}Bl}b}{DnDd}:```{h{{h{c}}}{}}00{{{h{l}}}{{h{lc}}}{}}00{cc{}}00{{}c{}}00{{{h{Ef}}Cb}f}{{{h{Eh}}Cb}f}{{{h{Ej}}Cb}f}{{{h{Ef}}}Cd}{{{h{Eh}}}Cd}{{{h{Ej}}}Cd}>>>===<<<210543{{{h{El}}}d}`{{}f};:0{{{h{En}}{h{F`}}}Cd}{{{h{En}}}b};{{}b};{{{h{En}}{h{Fb}}}b}44{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{hAb}```````````````````4````````77`````7`7``{{{h{Fd}}}{{h{c}}}{}}{{{h{Fd}}}Cd}{{{h{Ff}}}Cd}{h{{h{c}}}{}}00000{{{h{l}}}{{h{lc}}}{}}00000{{{h{Fh}}}{{h{l{Bn{Bl}}}}}}{{{h{Fd}}}Fh}{{{h{Ff}}}Fj}{{{h{Fd}}}Fd}{{{h{Ff}}}Ff}{{{h{Fh}}}Fh}{{{h{Fj}}}Fj}{{{h{{Fl{c}}}}}{{Fl{c}}}{FnG`GbGdGfGh}}{{h{h{lc}}}b{}}0000{{hBl}b}0000{{{h{Fd}}{h{Fd}}}Gj}{{{h{Ff}}{h{Ff}}}Gj}{{{h{Fh}}{h{Fh}}}Gj}{{{h{Fj}}{h{Fj}}}Gj}{Gl}{{{h{{Fl{c}}}}}c{FnG`GbGdGf}}1{{{h{Fd}}{h{Fd}}}Cd}{{{h{Ff}}{h{Ff}}}Cd}{{{h{Fh}}{h{Fh}}}Cd}{{{h{Fj}}{h{Fj}}}Cd}{{{h{Fd}}}Fh}{{{h{Ff}}}Fj}{{{h{Fd}}{h{lDb}}}Ah}{{{h{Ff}}{h{lDb}}}Ah}{{{h{Fh}}{h{lDb}}}Ah}{{{h{Fj}}{h{lDb}}}Ah}{cc{}}{fFd}{FhFd}2{FjFf}3{fFf}4{FdFh}{fFh}{fFj}7{FfFj}8{{{h{Fj}}}{{E`{f}}}}{{}c{}}00000{{}c{}}{{{Fl{c}}}e{FnG`GbGdGf}{}}{GnFj}{Fl}{{{h{Fd}}}{{h{lc}}}{}}{{{h{Fh}}}{{h{lc}}}{}}{{cc}{{Gl{c}}}{FnG`GbGdGf}}{{cc}{{Fl{c}}}{FnG`GbGdGf}}{{{h{l{Gl{c}}}}}{{Dd{e}}}{FnG`GbGdGf}{}}{{{h{Fd}}}f}{{{h{Ff}}}f}{{{h{Fd}}{h{Fd}}}{{Dd{Gj}}}}{{{h{Ff}}{h{Ff}}}{{Dd{Gj}}}}{{{h{Fh}}{h{Fh}}}{{Dd{Gj}}}}{{{h{Fj}}{h{Fj}}}{{Dd{Gj}}}}{{{h{Fh}}}{{h{l{Bn{H`}}}}}}=<{{{h{{Fl{c}}}}}c{FnG`GbGdGf}}{{{h{lFn}}}b}{{{h{lFh}}}b}{{{h{lFj}}}b}{hc{}}0000{c{{A`{e}}}{}{}}00000{{}{{A`{c}}}{}}00000{hAb}00000`````{Hbb}{{{h{lHd}}}{{Dd{Fh}}}}{{{h{lHf}}}{{Dd{Fh}}}}{h{{h{c}}}{}}00{{{h{l}}}{{h{lc}}}{}}00{Hff}{Hhf}{{{h{lHd}}Fh}b}{{{h{lHf}}Fh}b}{{{h{Hb}}}{{h{{Bf{Hf}}}}}}{{{h{lBb}}}b}54{{{h{Bb}}{h{lDb}}}Ah}{{}{{Dd{Bb}}}}{{}b}{Fhb}{cc{}}00{{{h{lHf}}FhFh}b}3{{}c{}}00{{}Hd}{{}Hf}{FhBb}{BbFh}{HfBd}{HhBd}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{hAb}00{{}Hj}{{}E`}{Hld}{{}b}```````````{Hnb}{{{h{I`}}}b}{{}Ib}{{{h{lId}}{h{lIf}}Fj}b}{I`Bd}{{IbIb}Ib}{{{h{lIb}}Ib}b}10{{{h{Ib}}}Bl}021{h{{h{c}}}{}}0000{{{h{l}}}{{h{lc}}}{}}0000{{{h{Ih}}}Ih}{{{h{Ib}}}Ib}{{h{h{lc}}}b{}}0{{hBl}b}0{IbIb}{{{h{Ib}}Ib}Cd}{{{h{lId}}{h{If}}{h{{Bn{Bl}}}}}b}{IdIj}{{{h{Hn}}}{{h{{An{{Bf{I`}}}}}}}}={{}b}00{{}Ib}{{{h{Ih}}{h{Ih}}}Cd}22{{{h{lIb}}c}b{{D`{}{{Cn{Ib}}}}}}{{{h{Ih}}{h{lDb}}}Ah}{{{h{Ib}}{h{lDb}}}Ah}000{cc{}}0000{{{h{Id}}}Id}{Bl{{Dd{Ib}}}}{BlIb}00{{{h{{Bn{Bl}}}}}{{j{I`ff}}}}{{{h{I`}}}I`}{cIb{{D`{}{{Cn{Ib}}}}}}{{{h{Af}}}{{Dd{Ib}}}}{{{h{lIb}}Ib}b}{{{h{lI`}}FfFfIb}b}{{IbIb}Ib}{{{h{Ib}}Ib}Cd}{{}c{}}0000{Ibc{}}{{{h{Ib}}}Cd}0{{{h{Ib}}}{{Dj{Ib}}}}{{{h{Ib}}}{{Dl{Ib}}}}{{}f}{{{h{lId}}{h{lIf}}}b}{{{h{lId}}{h{lIf}}Fj}b}{IdIb}{{{h{lI`}}}b}{IdIh}{{FfFfIhIb}Id}{{}I`}0{IbIb}{I`If}{{{h{lI`}}Id{Dd{{h{{Bn{Bl}}}}}}}b}6{{}b}{{{h{lIb}}Ib}b}{{{h{lI`}}Fj}b}22{{{h{lIb}}IbCd}b}<333{{IbIb}Ib}30{hc{}}04{{{h{I`}}}f}{{{h{I`}}Fj}{{Dd{H`}}}}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{hAb}00006{{{h{lId}}{h{lIf}}}b}{{{h{lId}}{h{lIf}}Fj}b}{IdFl}`````````````{{}Il}{{IlIl}Il}{{{h{lIl}}Il}b}10{{{h{Il}}}Bl}0{H`f}32{h{{h{c}}}{}}0000{{{h{l}}}{{h{lc}}}{}}0000{CbBd}{InBd}{{{h{H`}}}H`}{{h{h{lc}}}b{}}{{hBl}b}{IlIl}{{{h{Il}}Il}Cd}{Inf}0=>{{}H`}{{{h{Il}}{h{Il}}}Cd}{{{h{H`}}}Cd}{{{h{lIl}}c}b{{D`{}{{Cn{Il}}}}}}{{{h{If}}Fj}{{Dd{{h{lH`}}}}}}{{{h{lIf}}Fj}{{Dd{{h{lH`}}}}}}{{{h{H`}}}Il}{{{h{Il}}{h{lDb}}}Ah}000{IfBd}{cc{}}0000{Bl{{Dd{Il}}}}{BlIl}00{cIl{{D`{}{{Cn{Il}}}}}}{{{h{Af}}}{{Dd{Il}}}}{fIf}{{{h{lIl}}Il}b}{{IlIl}Il}{{{h{Il}}Il}Cd}{{}c{}}0000{Cbc{}}{{}c{}}{Ilc{}}{{{h{Il}}}Cd}0{{{h{H`}}}Cd}{{{h{Il}}}{{Dj{Il}}}}{{{h{Il}}}{{Dl{Il}}}}{{{h{Cb}}}f}{{{h{lIf}}FjFhIl}b}{{}If}{{{Bd{{h{l{Bn{Bl}}}}}}}Cb}{{FhIl}H`}{{{h{lIn}}}{{Dd{c}}}{}}{IlIl}{{{h{H`}}}Fh}:{{{h{lIl}}Il}b}{IfFh}{{{h{lIl}}IlCd}b}{{IlIl}Il}30{hc{}}4{{{h{If}}}f}{{{h{If}}Fj}{{Dd{H`}}}}{{{h{If}}Ff}{{Dd{Fd}}}}{{fBlf}{{Bd{{h{l{Bn{Bl}}}}}}}}{f{{h{c}}}{}}{f{{h{lc}}}{}}{{fBl}J`}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{hAb}0000;{{{h{lIf}}Fj}b}{{{h{H`}}}Cd}{{}f}``````{Jbb}{{}b}```{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}{Jdb}{{fJd}b}4{{}{{Dd{{j{Bh{h{Af}}}}}}}}`2```{{{h{Jb}}}{{h{{An{Jf}}}}}}{Bhb}{cc{}}`8{{}c{}}`````````9``{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{hAb}`;:{{{h{Jh}}}Jh}{{h{h{lc}}}b{}}{{hBl}b}7{fJh}7{Jhf}{JhE`}1{hc{}}987{{}Jh}```{Jjb}{Jlb}{{{h{lJn}}{An{Jf}}f}b}{{{h{lJn}}{An{Jf}}}b}{{{An{Jf}}}b}{{{An{Jf}}f}b}1{h{{h{c}}}{}}00{{{h{l}}}{{h{lc}}}{}}00{{{h{Jj}}}{{h{{Bf{Jn}}}}}}{{{h{Jl}}}{{h{{Bf{{Ij{f{An{Jf}}}}}}}}}}{{{h{lJn}}}{{Dd{{An{Jf}}}}}}{{}{{Dd{{An{Jf}}}}}}{cc{}}00{ff}{{{h{Jn}}f}f}{{}c{}}00{{}Jn}{f{{Dd{{An{Jf}}}}}}{Jnf}{JnBd}{fb}1{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{hAb}00````{K`b}{{{h{lKb}}}Kd}{h{{h{c}}}{}}000{{{h{l}}}{{h{lc}}}{}}000{Kbf}{{{h{lKb}}f}b}{{{h{K`}}}{{h{{Bf{Kb}}}}}}{{{h{lKd}}}b}{{{h{lKf}}}b}{cc{}}000{{}c{}}000{f{{j{ff}}}}{{}Kb}{{{h{Kd}}}Kf}{Kff}{{}Kd}{{{h{Kf}}c}{}Kh}{KbBd}{{{h{Kf}}}f}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{hAb}000``````{{{h{lKj}}}f}{Kjf}{h{{h{c}}}{}}00{{{h{l}}}{{h{lc}}}{}}00{KjBd}{{{h{Kl}}}Kl}{{h{h{lc}}}b{}}{{hBl}b}{{{h{Kl}}{h{Kl}}}Cd}{{{h{Jf}}{h{{Bn{Bl}}}}{Bd{J`}}}b}{KjBh}6{{{h{Kl}}{h{lDb}}}Ah}{{{h{{An{Jf}}}}}{{An{Jf}}}}{cc{}}00{KjCd}{{{h{Jf}}}f}{KjKn}{JfBf}{{{h{Jf}}}{{L`{Kj}}}}{{}c{}}00{{{h{Kj}}}Cd}{JfKf}7{KjI`}{{{h{{Bn{Bl}}}}}Jf}{KjDd}{JfKd}{Kjf}{KjJh}{KjKl}{KjLb}{KjJd}0{{{h{Kj}}}Kl}55{hc{}}8{{{h{Kj}}}{{h{lLd}}}}{KjFh}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{hAb}00{{{h{Kj}}}f}``{Lfb}{h{{h{c}}}{}}0{{{h{l}}}{{h{lc}}}{}}0{{{h{Lh}}}{{Dd{{An{Jf}}}}}}{LhDd}{{}{{Dd{{An{Jf}}}}}}{{}{{h{lLd}}}}{{}f}{{{h{Lf}}}{{h{{Bf{Lh}}}}}}{cc{}}0{LhJh}{{{h{lLh}}}Jh}{{}c{}}0{{}Lh}{{{h{lLh}}}{{Dd{{An{Jf}}}}}}{{}b}{Jhb};{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{hAb}0<```````````````````````````````````{{}Jd}{{JdJd}Jd}{{{h{lJd}}Jd}b}10{{{h{Jd}}}Cj}021{h{{h{c}}}{}}00{{{h{l}}}{{h{lc}}}{}}00{{{h{Jd}}}{{Dd{{j{Bh{h{Af}}}}}}}}{{{h{Jd}}}Jd}{{{h{Lj}}}Lj}{{{h{Lb}}}Lb}{{h{h{lc}}}b{}}00{{hBl}b}00{JdJd}{{{h{Jd}}Jd}Cd}{{}Lj}{{}Lb}>?{{{h{Jd}}{h{Jd}}}Cd}{{{h{Lj}}{h{Lj}}}Cd}{{{h{lJd}}c}b{{D`{}{{Cn{Jd}}}}}}{{{h{Jd}}{h{lDb}}}Ah}0000{{{h{Lj}}{h{lDb}}}Ah}{cc{}}00{Cj{{Dd{Jd}}}}{CjJd}00{cJd{{D`{}{{Cn{Jd}}}}}}{{{h{Af}}}{{Dd{Jd}}}}{Ljf}{{{h{lJd}}Jd}b}{{JdJd}Jd}?{{}c{}}00{Jdc{}}{{{h{Jd}}}Cd}0{{{h{Jd}}}{{Dj{Jd}}}}{{{h{Jd}}}{{Dl{Jd}}}}{LjJd}{JdJd}8{{{h{lJd}}JdCd}b}898{LbE`}{hc{}}00;{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{hAb}00={{JhJh}b}{{}f}{fb}{Cdd}1{{}b}```{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}{{{h{{Bf{c}}}}}{{L`{c}}}{}}{cc{}}{BfLl}{{}c{}}{c{{Bf{c}}}{}}>=<:::::::::::::::::``{{f{E`{f}}}Kn}{fKn}0{{BlCj}Kn}1{{fBlf}Kn}0{{Jdff}Cd}{{Blf}Kn}{BhKn}{{}Kn}{{fBh}Kn}1{{BhLjLj}Kn}{CjKn}33{{KnBh}Kn}4{{}f}0{{}b}11``0000{{}d}00`{{fffff}Ld}{h{{h{c}}}{}}{{{h{l}}}{{h{lc}}}{}}{{{h{Ld}}}Ld}{{h{h{lc}}}b{}}{{hBl}b}{{{h{Ld}}{h{lDb}}}Ah}{cc{}}{{}c{}}{Ldf}00{{{h{lLd}}f}b}{LdLn}{hc{}}3{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{hAb}{LdE`}","D":"EBf","p":[[1,"unit"],[1,"never"],[1,"usize"],[1,"reference",null,null,1],[1,"tuple",null,null,1],[0,"mut"],[5,"Arguments",1246],[6,"Result",1247,null,1],[5,"TypeId",1248],[5,"Stdout",41],[1,"str"],[8,"Result",1246],[5,"BLOCK_DEVICE",54],[10,"BlockDevice",1249],[5,"Arc",1250,null,1],[5,"QUEUE_FRAMES",66],[5,"FrameTracker",473],[5,"Vec",1251],[5,"UPSafeCell",1162],[1,"i32"],[5,"VirtIOBlock",66],[1,"u8"],[1,"slice"],[10,"File",100],[5,"UserBuffer",663],[1,"bool"],[5,"ROOT_INODE",116],[5,"OpenFlags",116],[1,"u32"],[5,"Inode",1252],[17,"Item"],[10,"IntoIterator",1253],[5,"Formatter",1246],[6,"Option",1254,null,1],[5,"OSInode",116],[5,"OSInodeInner",116],[5,"Iter",1255],[5,"IterNames",1255],[5,"PipeRingBuffer",209],[1,"array"],[5,"Pipe",209],[6,"RingBufferStatus",209],[5,"Stdin",264],[5,"Stdout",264],[5,"Stderr",264],[5,"PanicInfo",1256],[5,"SimpleLogger",301],[5,"Metadata",1257],[5,"Record",1257],[5,"PhysAddr",345],[5,"VirtAddr",345],[5,"PhysPageNum",345],[5,"VirtPageNum",345],[5,"SimpleRange",345],[10,"StepByOne",345],[10,"Copy",1258],[10,"PartialEq",1259],[10,"PartialOrd",1259],[10,"Debug",1246],[10,"Clone",1260],[6,"Ordering",1259],[5,"SimpleRangeIterator",345],[8,"VPNRange",345],[5,"PageTableEntry",663],[5,"FRAME_ALLOCATOR",473],[10,"FrameAllocator",473],[5,"StackFrameAllocator",473],[8,"FrameAllocatorImpl",473],[5,"LockedHeap",1261],[5,"Layout",1262],[5,"KERNEL_SPACE",526],[5,"MemorySet",526],[5,"MapPermission",526],[5,"MapArea",526],[5,"PageTable",663],[6,"MapType",526],[5,"BTreeMap",1263],[5,"PTEFlags",663],[5,"UserBufferIterator",663],[5,"String",1264],[5,"INITPROC",789],[5,"SignalFlags",1035],[5,"ProcessControlBlock",940],[5,"ProcessContext",833],[5,"PROCESS_MANAGER",850],[5,"PID2TCB",850],[5,"ProcessManager",850],[5,"PID_ALLOCATOR",893],[5,"PidAllocator",893],[5,"PidHandle",893],[5,"KernelStack",893],[10,"Sized",1258],[5,"ProcessControlBlockInner",940],[6,"ProcessStatus",940],[1,"isize"],[5,"RefMut",1265],[5,"SignalActions",1035],[5,"TrapContext",1225],[5,"PROCESSOR",1005],[5,"Processor",1005],[5,"SignalAction",1035],[5,"RefCell",1265],[5,"Sstatus",1266],[5,"VirtioHal",66]],"r":[[28,24],[31,24],[34,24],[51,54],[52,54],[55,66],[101,116],[102,116],[103,264],[104,264],[105,264],[107,116],[108,209],[109,116],[317,473],[318,526],[319,526],[320,526],[321,526],[322,663],[323,663],[324,345],[325,345],[326,345],[327,663],[328,345],[329,345],[330,345],[332,473],[334,473],[337,526],[340,526],[341,663],[342,663],[343,663],[344,663],[791,1035],[792,833],[793,1035],[794,1035],[795,1035],[798,850],[799,850],[800,850],[809,1005],[810,1005],[811,1005],[815,850],[820,850],[823,850],[824,1005],[825,1005],[829,1005],[1160,1162],[1216,1225]],"b":[[131,"impl-Flags-for-OpenFlags"],[132,"impl-OpenFlags"],[149,"impl-UpperHex-for-OpenFlags"],[150,"impl-LowerHex-for-OpenFlags"],[151,"impl-Octal-for-OpenFlags"],[152,"impl-Binary-for-OpenFlags"],[158,"impl-OpenFlags"],[159,"impl-Flags-for-OpenFlags"],[408,"impl-From%3Cusize%3E-for-PhysAddr"],[409,"impl-From%3CPhysPageNum%3E-for-PhysAddr"],[411,"impl-From%3CVirtPageNum%3E-for-VirtAddr"],[413,"impl-From%3Cusize%3E-for-VirtAddr"],[415,"impl-From%3CPhysAddr%3E-for-PhysPageNum"],[416,"impl-From%3Cusize%3E-for-PhysPageNum"],[417,"impl-From%3Cusize%3E-for-VirtPageNum"],[419,"impl-From%3CVirtAddr%3E-for-VirtPageNum"],[546,"impl-Flags-for-MapPermission"],[547,"impl-MapPermission"],[581,"impl-LowerHex-for-MapPermission"],[582,"impl-Binary-for-MapPermission"],[583,"impl-Octal-for-MapPermission"],[584,"impl-UpperHex-for-MapPermission"],[592,"impl-MapPermission"],[593,"impl-Flags-for-MapPermission"],[681,"impl-Flags-for-PTEFlags"],[682,"impl-PTEFlags"],[714,"impl-LowerHex-for-PTEFlags"],[715,"impl-UpperHex-for-PTEFlags"],[716,"impl-Octal-for-PTEFlags"],[717,"impl-Binary-for-PTEFlags"],[725,"impl-Flags-for-PTEFlags"],[726,"impl-PTEFlags"],[1076,"impl-Flags-for-SignalFlags"],[1077,"impl-SignalFlags"],[1105,"impl-Debug-for-SignalFlags"],[1106,"impl-Binary-for-SignalFlags"],[1107,"impl-Octal-for-SignalFlags"],[1108,"impl-LowerHex-for-SignalFlags"],[1109,"impl-UpperHex-for-SignalFlags"],[1115,"impl-SignalFlags"],[1116,"impl-Flags-for-SignalFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEsCjQAZAAQAIAAAACMAAAArAAEAMAACADQAAQA4AAQAPwACAEcABwBaAAgAZgAEAGwAAgB1AAAAeQABAHwAAgCEAAAAiAAHAJIAAACWAAMAoAAAAKQAAQCtAAAAtQAAALsAAADCAAsA0AAAANIAAgDXAAEA2gAAAN0ACgDrAAAA9QAAAPcACwAEAQAABwEAAAwBBQAeAQgAMAEBADsBEABNAQAATwEAAFIBAABVAQYAYQEAAGMBAABpAQsAeAETAI0BBACUAQMAmQEBAJwBAACeAQAAoAECAKQBAACtAQAArwEBALgBAwC9AQEAwwEWAN8BAADiAQUA7AEAAAICCAAaAgAAHgIAACMCAAAnAg8AOgIBAD0CAgBBAgIARQIEAFICAABhAgAAaQIAAGsCAABwAgAAdgIBAHoCAgCAAgEAhQIOAJcCAACqAgAArwIJALsCAgDFAgAAywIDANYCAADlAgEA+wIAAAEDAAAEAw4AGAMFAB8DBAAqAwMAMAMAADUDAAA4AwIAPgMDAEMDBABOAwMAUwMAAFYDAQBdAwcAdQMIAIIDAACEAwcAjgMCAKEDCwC1AwUAvAMDAMMDAADIAwAAygMAANIDAADaAwIA4AMBAOQDCADwAwQA+gMAAAYEBQANBB8ANQQAADkEBQBABAgATwQBAFIEBQBdBAAAYQQAAGgEAABtBAAAdAQDAHkECACJBAAAjAQBAJMEEwCwBAAAwQQAAMcEAADMBAUA2QQAANsEAgA=","P":[[42,"T"],[45,"U"],[46,""],[47,"U,T"],[48,"U"],[49,""],[57,"T"],[59,""],[60,"T"],[61,"U"],[62,"U,T"],[63,"U"],[64,""],[71,"T"],[77,""],[80,"T"],[83,"U"],[86,""],[89,"U,T"],[92,"U"],[95,""],[135,"T"],[143,""],[148,"T"],[149,""],[153,"T"],[157,""],[161,"T"],[162,""],[168,"U"],[172,"IntoIterator::IntoIter"],[173,""],[193,"U,T"],[197,"U"],[201,""],[220,"T"],[226,""],[228,"T"],[229,""],[231,"T"],[234,""],[235,"U"],[238,""],[248,"T"],[249,"U,T"],[252,"U"],[255,""],[267,"T"],[276,"U"],[279,""],[285,"U,T"],[288,"U"],[291,""],[303,"T"],[305,""],[308,"T"],[309,""],[310,"U"],[311,""],[314,"U,T"],[315,"U"],[316,""],[357,"T"],[358,""],[360,"T"],[372,""],[379,"T"],[385,""],[395,"T"],[396,""],[407,"T"],[408,""],[410,"T"],[411,""],[412,"T"],[413,""],[414,"T"],[415,""],[418,"T"],[419,""],[420,"T"],[421,""],[422,"U"],[428,"I"],[429,"T,IntoIterator::IntoIter"],[430,""],[432,"T"],[436,"T,Iterator::Item"],[437,""],[446,"T"],[447,""],[450,"T"],[455,"U,T"],[461,"U"],[467,""],[481,"T"],[487,""],[499,"T"],[502,""],[504,"U"],[507,""],[513,"U,T"],[516,"U"],[519,""],[550,"T"],[560,""],[562,"T"],[564,""],[579,"T"],[580,""],[585,"T"],[590,""],[597,"T"],[598,""],[603,"U"],[608,"IntoIterator::IntoIter"],[609,""],[639,"T"],[641,""],[644,"U,T"],[649,"U"],[654,""],[686,"T"],[696,""],[699,"T"],[700,""],[710,"T"],[711,""],[719,"T"],[724,""],[728,"T"],[729,""],[734,"U"],[739,"IntoIterator::IntoIter"],[740,"I"],[741,"IntoIterator::IntoIter"],[742,""],[752,"Iterator::Item"],[753,""],[762,"T"],[763,""],[768,"T"],[770,""],[771,"U,T"],[776,"U"],[781,""],[801,"T"],[803,""],[814,"T"],[816,""],[817,"U"],[827,""],[830,"U,T"],[831,"U"],[832,""],[834,"T"],[836,""],[837,"T"],[838,""],[839,"T"],[840,""],[841,"U"],[842,""],[845,"T"],[846,"U,T"],[847,"U"],[848,""],[860,"T"],[866,""],[870,"T"],[873,""],[875,"U"],[878,""],[884,"U,T"],[887,"U"],[890,""],[899,"T"],[907,""],[912,"T"],[916,"U"],[920,""],[925,"T"],[926,""],[928,"U,T"],[932,"U"],[936,""],[948,"T"],[954,""],[956,"T"],[957,""],[964,"T"],[967,""],[972,"U"],[975,""],[991,"T"],[992,""],[995,"U,T"],[998,"U"],[1001,""],[1008,"T"],[1012,""],[1018,"T"],[1020,""],[1022,"U"],[1024,""],[1029,"U,T"],[1031,"U"],[1033,""],[1080,"T"],[1086,""],[1090,"T"],[1093,""],[1104,"T"],[1105,""],[1111,"T"],[1114,""],[1118,"T"],[1119,""],[1124,"U"],[1127,"IntoIterator::IntoIter"],[1128,""],[1140,"T"],[1143,""],[1144,"U,T"],[1147,"U"],[1150,""],[1163,"T"],[1167,""],[1168,"U"],[1169,"T"],[1170,"U,T"],[1171,"U"],[1172,""],[1227,"T"],[1229,""],[1230,"T"],[1231,""],[1233,"T"],[1234,"U"],[1235,""],[1240,"T"],[1241,""],[1242,"U,T"],[1243,"U"],[1244,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[30897]}