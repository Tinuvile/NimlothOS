var searchIndex = new Map(JSON.parse('[["components",{"t":"EEEEQQQCCQQSPPPPFGGFIKSSPPPFIIPPPNNNNNNNNNNNNNNNNNNNNNONQNNNQNNNNNNNNNNNHNQHNNNNNONHOONNNNNOMNMNNONNNNNQNNNNNNNNNNMNNNNNNNQSKSIFPFGPFFFNNNNHHONNNNNNNNNNNNNNNNNNOOONNNNNONNNNNNNNNNNNOOONNOOONNNNNNNNNNNNNNMNONONNNNNNNNNNNNNNNNNNNNNM","n":["LogClient","LogError","LogLevel","LogResult","debug","error","info","log","micro_fs","trace","warn","DEFAULT_LOG_FD","Debug","Err","Error","Info","LogClient","LogError","LogLevel","LogMessage","LogResult","LogTransport","MAX_MESSAGE_LEN","MAX_MODULE_LEN","MessageTooLong","NotInitialized","Ok","PipeTransport","SyscallReadFn","SyscallWriteFn","Trace","TransportError","Warn","as_str","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","cmp","color_code","connect","connect_with_syscalls","cpu_id","debug","","deserialize","eq","error","","fmt","","","","","format","from","","","","","get_log_client","info","","init_log_client","into","","","","","level","log","log_message","message","module","new","","new_client","new_server","partial_cmp","pid","receive","","send","","serialize","timestamp","to_owned","","to_string","","trace","","try_from","","","","","try_into","","","","","try_receive","","type_id","","","","","warn","","BLOCK_SZ","BlockDevice","DIRENT_SZ","DataBlock","DirEntry","Directory","DiskInode","DiskInodeType","File","Inode","MicroFileSystem","SuperBlock","alloc_data","alloc_inode","as_bytes","as_bytes_mut","block_cache","block_cache_sync_all","block_device","block_id","blocks_num_needed","borrow","","","","","","borrow_mut","","","","","","clear","clear_size","create","","data_area_blocks","data_bitmap","data_bitmap_blocks","data_block_id","data_blocks","dealloc_data","dealloc_inode","dir","direct","disk_inode_pos","empty","eq","file","find","from","","","","","","increase_size","indirect1","indirect2","indirect3","initialize","","inode_area_blocks","inode_bitmap","inode_bitmap_blocks","inode_number","into","","","","","","ls","name","new","","open","read_at","","read_block","root_inode","size","total_blocks","","try_from","","","","","","try_into","","","","","","type_id","","","","","","valid","write_at","","write_block"],"q":[[0,"components"],[11,"components::log"],[123,"components::micro_fs"],[230,"components::log::message"],[231,"core::cmp"],[232,"components::log::client"],[233,"components::log::transport"],[234,"core::option"],[235,"core::fmt"],[236,"alloc::string"],[237,"alloc::boxed"],[238,"core::result"],[239,"alloc::vec"],[240,"core::any"],[241,"components::micro_fs::efs"],[242,"components::micro_fs::layout"],[243,"components::micro_fs::block_dev"],[244,"alloc::sync"],[245,"spin::mutex"],[246,"components::micro_fs::vfs"],[247,"components::micro_fs::block_cache"]],"i":"````````````dAf11````````B`01```2022AdBn24l21350505050552202`052`35500021350`2``2135002`00201150Bh2021161613`324613246102324613``````Dl``0```Ch0Cj0``1Db02Df12Dd541230502401414244224352041230522221214134123050330420Cl53325234165234165234162310","f":"```````````{{}b}``````````00`````````{{{f{d}}}{{f{h}}}}{f{{f{c}}}{}}0000{{{f{j}}}{{f{jc}}}{}}0000{{{f{d}}}d}{{{f{l}}}l}{{f{f{jc}}}n{}}0{{fA`}n}0{{{f{d}}{f{d}}}Ab}{{{f{d}}}A`}{{}{{Af{Ad}}}}{{bAh}{{Af{Ad}}}}{lA`}{{{f{Ad}}{f{h}}{f{h}}}{{Af{n}}}}`{{{f{{Aj{A`}}}}}{{Al{l}}}}{{{f{d}}{f{d}}}An}2`{{{f{B`}}{f{jBb}}}Bd}{{{f{d}}{f{jBb}}}Bd}0{{{f{l}}{f{jBb}}}Bd}0{{{f{l}}}Bf}{cc{}}0000{{}{{Af{{f{Ad}}}}}}8`{{}{{Af{n}}}}{{}c{}}0000{ld}{{{f{Ad}}d{f{h}}{f{h}}}{{Af{n}}}}{{d{f{h}}{f{h}}}n}{lBf}0{{{Bj{Bh}}}Ad}{{dBlA`Bl{f{h}}{f{h}}}{{Al{l}}}}{{bAh}Bn}{{bC`}Bn}{{{f{d}}{f{d}}}{{Al{Ab}}}}{lBl}{{{f{Bh}}}{{Cb{l`}}}}{{{f{Bn}}}{{Cb{l`}}}}{{{f{Bh}}{f{l}}}{{Cb{n`}}}}{{{f{Bn}}{f{l}}}{{Cb{n`}}}}{{{f{l}}}{{Cd{A`}}}}5{fc{}}0{fBf}0{{{f{Ad}}{f{h}}{f{h}}}{{Af{n}}}}`{c{{Cb{e}}}{}{}}0000{{}{{Cb{c}}}{}}0000{{{f{Bh}}}{{Cb{{Al{l}}`}}}}{{{f{Bn}}}{{Cb{{Al{l}}`}}}}{fCf}00005`{{}b}`0`````````{{{f{jCh}}}Bl}0{{{f{Cj}}}{{f{{Aj{A`}}}}}}{{{f{jCj}}}{{f{j{Aj{A`}}}}}}{{b{Cn{Cl}}}{{Cn{{D`{`}}}}}}{{}n}{ChCn}{{{f{Db}}Bl{f{{Cn{Cl}}}}}Bl}{{{f{Db}}Bl}Bl}{f{{f{c}}}{}}00000{{{f{j}}}{{f{jc}}}{}}00000{{{f{Dd}}}n}{{{f{jDb}}{f{{Cn{Cl}}}}}{{Cd{Bl}}}}{{{Cn{Cl}}BlBl}{{Cn{{D`{Ch}}}}}}{{{f{Dd}}{f{h}}}{{Al{{Cn{Dd}}}}}}{DfBl}`0{{{f{Ch}}Bl}Bl}{{{f{Db}}}Bl}{{{f{jCh}}Bl}n}0{{{f{Db}}}An}{DbDh}{{{f{Ch}}Bl}{{Dj{Blb}}}}{{}Cj}{{{f{Dl}}{f{Dl}}}An}49{cc{}}00000{{{f{jDb}}Bl{Cd{Bl}}{f{{Cn{Cl}}}}}n}{DbBl}00{{{f{jDf}}BlBlBlBlBl}n}{{{f{jDb}}Dl}n}=`={{{f{Cj}}}Bl}{{}c{}}00000{{{f{Dd}}}{{Cd{Bf}}}}{{{f{Cj}}}{{f{h}}}}{{{f{h}}Bl}Cj}{{Blb{Cn{{D`{Ch}}}}{Cn{Cl}}}Dd}{{{Cn{Cl}}}{{Cn{{D`{Ch}}}}}}{{{f{Db}}b{f{j{Aj{A`}}}}{f{{Cn{Cl}}}}}b}{{{f{Dd}}b{f{j{Aj{A`}}}}}b}{{{f{Cl}}b{f{j{Aj{A`}}}}}n}{{{f{{Cn{{D`{Ch}}}}}}}Dd}={BlBl}{DfBl}{c{{Cb{e}}}{}{}}00000{{}{{Cb{c}}}{}}00000{fCf}00000{{{f{Df}}}An}{{{f{jDb}}b{f{{Aj{A`}}}}{f{{Cn{Cl}}}}}b}{{{f{Dd}}b{f{{Aj{A`}}}}}b}{{{f{Cl}}b{f{{Aj{A`}}}}}n}","D":"A@f","p":[[1,"usize"],[6,"LogLevel",11,230],[1,"reference",null,null,1],[1,"str"],[0,"mut"],[5,"LogMessage",11,230],[1,"unit"],[1,"u8"],[6,"Ordering",231],[5,"LogClient",11,232],[8,"LogResult",11,232],[8,"SyscallWriteFn",11,233],[1,"slice"],[6,"Option",234,null,1],[1,"bool"],[6,"LogError",11,232],[5,"Formatter",235],[8,"Result",235],[5,"String",236],[10,"LogTransport",11,233],[5,"Box",237,null,1],[1,"u32"],[5,"PipeTransport",11,233],[8,"SyscallReadFn",11,233],[6,"Result",238,null,1],[5,"Vec",239],[5,"TypeId",240],[5,"MicroFileSystem",123,241],[5,"DirEntry",123,242],[10,"BlockDevice",123,243],[5,"Arc",244,null,1],[5,"Mutex",245],[5,"DiskInode",123,242],[5,"Inode",123,246],[5,"SuperBlock",123,242],[1,"array"],[1,"tuple",null,null,1],[6,"DiskInodeType",123,242]],"r":[[0,232],[1,232],[2,230],[3,232],[12,230],[13,232],[14,230],[15,230],[16,232],[17,232],[18,230],[19,230],[20,232],[21,233],[24,232],[25,232],[26,232],[27,233],[28,233],[29,233],[30,230],[31,232],[32,230],[33,230],[34,232],[35,233],[36,232],[37,230],[38,230],[39,232],[40,233],[41,232],[42,230],[43,230],[44,230],[45,230],[46,230],[47,230],[48,230],[49,230],[50,230],[51,230],[52,232],[53,232],[54,230],[55,232],[56,0],[57,230],[58,230],[59,232],[60,0],[61,232],[62,230],[63,230],[64,230],[65,230],[66,230],[67,232],[68,233],[69,232],[70,230],[71,230],[72,232],[73,232],[74,0],[75,232],[76,232],[77,233],[78,232],[79,230],[80,230],[81,230],[82,232],[83,232],[84,230],[85,230],[86,232],[87,230],[88,233],[89,233],[90,230],[91,230],[92,233],[93,233],[94,233],[95,233],[96,230],[97,230],[98,230],[99,230],[100,230],[101,230],[102,232],[103,0],[104,232],[105,233],[106,232],[107,230],[108,230],[109,232],[110,233],[111,232],[112,230],[113,230],[114,233],[115,233],[116,232],[117,233],[118,232],[119,230],[120,230],[121,232],[122,0],[124,243],[125,242],[126,242],[127,242],[128,242],[129,242],[130,242],[131,242],[132,246],[133,241],[134,242],[135,241],[136,241],[137,242],[138,242],[139,247],[140,247],[141,241],[142,242],[143,242],[144,241],[145,242],[146,242],[147,242],[148,246],[149,242],[150,241],[151,242],[152,242],[153,242],[154,246],[155,242],[156,246],[157,242],[158,241],[159,246],[160,242],[161,241],[162,242],[163,241],[164,242],[165,241],[166,241],[167,242],[168,242],[169,241],[170,242],[171,242],[172,242],[173,246],[174,241],[175,242],[176,242],[177,242],[178,246],[179,242],[180,242],[181,242],[182,242],[183,242],[184,242],[185,242],[186,242],[187,241],[188,242],[189,242],[190,241],[191,242],[192,242],[193,242],[194,246],[195,242],[196,246],[197,242],[198,242],[199,246],[200,241],[201,242],[202,246],[203,243],[204,241],[205,242],[206,242],[207,242],[208,241],[209,242],[210,242],[211,242],[212,246],[213,242],[214,241],[215,242],[216,242],[217,242],[218,246],[219,242],[220,241],[221,242],[222,242],[223,242],[224,246],[225,242],[226,242],[227,242],[228,246],[229,243]],"b":[[62,"impl-Debug-for-LogLevel"],[63,"impl-Display-for-LogLevel"],[64,"impl-Debug-for-LogMessage"],[65,"impl-Display-for-LogMessage"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAGMAGAABAAMADQAAAA8AAQAdAAAAHwAAACEAAAAjABAAOwAAAD4ABABbAAAAXgAAAGAAAABjAAMAaQAJAHQABQCOAAAAkQALAKEAAgCpAAAArAAAALYAAgC7AAIAzgAAANAAEgA=","P":[[34,"T"],[44,""],[46,"T"],[48,""],[67,"T"],[72,""],[76,"U"],[81,""],[98,"T"],[100,""],[104,"U,T"],[109,"U"],[114,""],[144,"T"],[156,""],[174,"T"],[180,""],[190,"U"],[196,""],[208,"U,T"],[214,"U"],[220,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[8177]}