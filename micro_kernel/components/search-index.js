var searchIndex = new Map(JSON.parse('[["components",{"t":"EEEEQQQCCQQSPPPPFGGFIKSSPPPFIIPPPNNNNNNNNNNNNNNNNNNNNNONQNNNQNNNNNNNNNNNHNQHNNNNNONHOONNNNNOMNMNNONNNNNQNNNNNNNNNNMNNNNNNNQSKSIFPFGPFFFNNNNHHONNNNNNNNNNNNNNNNNNOOONNNNNONNNNNNNNNNNNOONNOOONNNNNNNNNNNNNNMNONONNNNNNNNNNNNNNNNNNNNNM","n":["LogClient","LogError","LogLevel","LogResult","debug","error","info","log","micro_fs","trace","warn","DEFAULT_LOG_FD","Debug","Err","Error","Info","LogClient","LogError","LogLevel","LogMessage","LogResult","LogTransport","MAX_MESSAGE_LEN","MAX_MODULE_LEN","MessageTooLong","NotInitialized","Ok","PipeTransport","SyscallReadFn","SyscallWriteFn","Trace","TransportError","Warn","as_str","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","cmp","color_code","connect","connect_with_syscalls","cpu_id","debug","","deserialize","eq","error","","fmt","","","","","format","from","","","","","get_log_client","info","","init_log_client","into","","","","","level","log","log_message","message","module","new","","new_client","new_server","partial_cmp","pid","receive","","send","","serialize","timestamp","to_owned","","to_string","","trace","","try_from","","","","","try_into","","","","","try_receive","","type_id","","","","","warn","","BLOCK_SZ","BlockDevice","DIRENT_SZ","DataBlock","DirEntry","Directory","DiskInode","DiskInodeType","File","Inode","MicroFileSystem","SuperBlock","alloc_data","alloc_inode","as_bytes","as_bytes_mut","block_cache","block_cache_sync_all","block_device","block_id","blocks_num_needed","borrow","","","","","","borrow_mut","","","","","","clear","clear_size","create","","data_area_blocks","data_bitmap","data_bitmap_blocks","data_block_id","data_blocks","dealloc_data","dealloc_inode","dir","direct","disk_inode_pos","empty","eq","file","find","from","","","","","","increase_size","indirect1","indirect2","initialize","","inode_area_blocks","inode_bitmap","inode_bitmap_blocks","inode_number","into","","","","","","ls","name","new","","open","read_at","","read_block","root_inode","size","total_blocks","","try_from","","","","","","try_into","","","","","","type_id","","","","","","valid","write_at","","write_block"],"q":[[0,"components"],[11,"components::log"],[123,"components::micro_fs"],[229,"components::log::message"],[230,"core::cmp"],[231,"components::log::client"],[232,"components::log::transport"],[233,"core::option"],[234,"core::fmt"],[235,"alloc::string"],[236,"alloc::boxed"],[237,"core::result"],[238,"alloc::vec"],[239,"core::any"],[240,"components::micro_fs::efs"],[241,"components::micro_fs::layout"],[242,"components::micro_fs::block_dev"],[243,"alloc::sync"],[244,"spin::mutex"],[245,"components::micro_fs::vfs"],[246,"components::micro_fs::block_cache"]],"i":"````````````dAf11````````B`01```2022AdBn24l21350505050552202`052`35500021350`2``2135002`00201150Bh2021161613`324613246102324613``````Dl``0```Ch0Cj0``1Db02Df12Dd54123050240141424422435204123052221214134123050330420Cl53325234165234165234162310","f":"```````````{{}b}``````````00`````````{{{f{d}}}{{f{h}}}}{f{{f{c}}}{}}0000{{{f{j}}}{{f{jc}}}{}}0000{{{f{d}}}d}{{{f{l}}}l}{{f{f{jc}}}n{}}0{{fA`}n}0{{{f{d}}{f{d}}}Ab}{{{f{d}}}A`}{{}{{Af{Ad}}}}{{bAh}{{Af{Ad}}}}{lA`}{{{f{Ad}}{f{h}}{f{h}}}{{Af{n}}}}`{{{f{{Aj{A`}}}}}{{Al{l}}}}{{{f{d}}{f{d}}}An}2`{{{f{B`}}{f{jBb}}}Bd}{{{f{d}}{f{jBb}}}Bd}0{{{f{l}}{f{jBb}}}Bd}0{{{f{l}}}Bf}{cc{}}0000{{}{{Af{{f{Ad}}}}}}8`{{}{{Af{n}}}}{{}c{}}0000{ld}{{{f{Ad}}d{f{h}}{f{h}}}{{Af{n}}}}{{d{f{h}}{f{h}}}n}{lBf}0{{{Bj{Bh}}}Ad}{{dBlA`Bl{f{h}}{f{h}}}{{Al{l}}}}{{bAh}Bn}{{bC`}Bn}{{{f{d}}{f{d}}}{{Al{Ab}}}}{lBl}{{{f{Bh}}}{{Cb{l`}}}}{{{f{Bn}}}{{Cb{l`}}}}{{{f{Bh}}{f{l}}}{{Cb{n`}}}}{{{f{Bn}}{f{l}}}{{Cb{n`}}}}{{{f{l}}}{{Cd{A`}}}}5{fc{}}0{fBf}0{{{f{Ad}}{f{h}}{f{h}}}{{Af{n}}}}`{c{{Cb{e}}}{}{}}0000{{}{{Cb{c}}}{}}0000{{{f{Bh}}}{{Cb{{Al{l}}`}}}}{{{f{Bn}}}{{Cb{{Al{l}}`}}}}{fCf}00005`{{}b}`0`````````{{{f{jCh}}}Bl}0{{{f{Cj}}}{{f{{Aj{A`}}}}}}{{{f{jCj}}}{{f{j{Aj{A`}}}}}}{{b{Cn{Cl}}}{{Cn{{D`{`}}}}}}{{}n}{ChCn}{{{f{Db}}Bl{f{{Cn{Cl}}}}}Bl}{{{f{Db}}Bl}Bl}{f{{f{c}}}{}}00000{{{f{j}}}{{f{jc}}}{}}00000{{{f{Dd}}}n}{{{f{jDb}}{f{{Cn{Cl}}}}}{{Cd{Bl}}}}{{{Cn{Cl}}BlBl}{{Cn{{D`{Ch}}}}}}{{{f{Dd}}{f{h}}}{{Al{{Cn{Dd}}}}}}{DfBl}`0{{{f{Ch}}Bl}Bl}{{{f{Db}}}Bl}{{{f{jCh}}Bl}n}0{{{f{Db}}}An}{DbDh}{{{f{Ch}}Bl}{{Dj{Blb}}}}{{}Cj}{{{f{Dl}}{f{Dl}}}An}49{cc{}}00000{{{f{jDb}}Bl{Cd{Bl}}{f{{Cn{Cl}}}}}n}{DbBl}0{{{f{jDf}}BlBlBlBlBl}n}{{{f{jDb}}Dl}n}=`={{{f{Cj}}}Bl}{{}c{}}00000{{{f{Dd}}}{{Cd{Bf}}}}{{{f{Cj}}}{{f{h}}}}{{{f{h}}Bl}Cj}{{Blb{Cn{{D`{Ch}}}}{Cn{Cl}}}Dd}{{{Cn{Cl}}}{{Cn{{D`{Ch}}}}}}{{{f{Db}}b{f{j{Aj{A`}}}}{f{{Cn{Cl}}}}}b}{{{f{Dd}}b{f{j{Aj{A`}}}}}b}{{{f{Cl}}b{f{j{Aj{A`}}}}}n}{{{f{{Cn{{D`{Ch}}}}}}}Dd}={BlBl}{DfBl}{c{{Cb{e}}}{}{}}00000{{}{{Cb{c}}}{}}00000{fCf}00000{{{f{Df}}}An}{{{f{jDb}}b{f{{Aj{A`}}}}{f{{Cn{Cl}}}}}b}{{{f{Dd}}b{f{{Aj{A`}}}}}b}{{{f{Cl}}b{f{{Aj{A`}}}}}n}","D":"A@f","p":[[1,"usize"],[6,"LogLevel",11,229],[1,"reference",null,null,1],[1,"str"],[0,"mut"],[5,"LogMessage",11,229],[1,"unit"],[1,"u8"],[6,"Ordering",230],[5,"LogClient",11,231],[8,"LogResult",11,231],[8,"SyscallWriteFn",11,232],[1,"slice"],[6,"Option",233,null,1],[1,"bool"],[6,"LogError",11,231],[5,"Formatter",234],[8,"Result",234],[5,"String",235],[10,"LogTransport",11,232],[5,"Box",236,null,1],[1,"u32"],[5,"PipeTransport",11,232],[8,"SyscallReadFn",11,232],[6,"Result",237,null,1],[5,"Vec",238],[5,"TypeId",239],[5,"MicroFileSystem",123,240],[5,"DirEntry",123,241],[10,"BlockDevice",123,242],[5,"Arc",243,null,1],[5,"Mutex",244],[5,"DiskInode",123,241],[5,"Inode",123,245],[5,"SuperBlock",123,241],[1,"array"],[1,"tuple",null,null,1],[6,"DiskInodeType",123,241]],"r":[[0,231],[1,231],[2,229],[3,231],[12,229],[13,231],[14,229],[15,229],[16,231],[17,231],[18,229],[19,229],[20,231],[21,232],[24,231],[25,231],[26,231],[27,232],[28,232],[29,232],[30,229],[31,231],[32,229],[33,229],[34,231],[35,232],[36,231],[37,229],[38,229],[39,231],[40,232],[41,231],[42,229],[43,229],[44,229],[45,229],[46,229],[47,229],[48,229],[49,229],[50,229],[51,229],[52,231],[53,231],[54,229],[55,231],[56,0],[57,229],[58,229],[59,231],[60,0],[61,231],[62,229],[63,229],[64,229],[65,229],[66,229],[67,231],[68,232],[69,231],[70,229],[71,229],[72,231],[73,231],[74,0],[75,231],[76,231],[77,232],[78,231],[79,229],[80,229],[81,229],[82,231],[83,231],[84,229],[85,229],[86,231],[87,229],[88,232],[89,232],[90,229],[91,229],[92,232],[93,232],[94,232],[95,232],[96,229],[97,229],[98,229],[99,229],[100,229],[101,229],[102,231],[103,0],[104,231],[105,232],[106,231],[107,229],[108,229],[109,231],[110,232],[111,231],[112,229],[113,229],[114,232],[115,232],[116,231],[117,232],[118,231],[119,229],[120,229],[121,231],[122,0],[124,242],[125,241],[126,241],[127,241],[128,241],[129,241],[130,241],[131,241],[132,245],[133,240],[134,241],[135,240],[136,240],[137,241],[138,241],[139,246],[140,246],[141,240],[142,241],[143,241],[144,240],[145,241],[146,241],[147,241],[148,245],[149,241],[150,240],[151,241],[152,241],[153,241],[154,245],[155,241],[156,245],[157,241],[158,240],[159,245],[160,241],[161,240],[162,241],[163,240],[164,241],[165,240],[166,240],[167,241],[168,241],[169,240],[170,241],[171,241],[172,241],[173,245],[174,240],[175,241],[176,241],[177,241],[178,245],[179,241],[180,241],[181,241],[182,241],[183,241],[184,241],[185,241],[186,240],[187,241],[188,241],[189,240],[190,241],[191,241],[192,241],[193,245],[194,241],[195,245],[196,241],[197,241],[198,245],[199,240],[200,241],[201,245],[202,242],[203,240],[204,241],[205,241],[206,241],[207,240],[208,241],[209,241],[210,241],[211,245],[212,241],[213,240],[214,241],[215,241],[216,241],[217,245],[218,241],[219,240],[220,241],[221,241],[222,241],[223,245],[224,241],[225,241],[226,241],[227,245],[228,242]],"b":[[62,"impl-Debug-for-LogLevel"],[63,"impl-Display-for-LogLevel"],[64,"impl-Display-for-LogMessage"],[65,"impl-Debug-for-LogMessage"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAGIAGAABAAMADQAAAA8AAQAdAAAAHwAAACEAAAAjABAAOwAAAD4ABABbAAAAXgAAAGAAAABjAAMAaQAJAHQABQCOAAAAkQALAKEAAgCpAAAArAAAALYAAQC6AAIAzQAAAM8AEgA=","P":[[34,"T"],[44,""],[46,"T"],[48,""],[67,"T"],[72,""],[76,"U"],[81,""],[98,"T"],[100,""],[104,"U,T"],[109,"U"],[114,""],[144,"T"],[156,""],[174,"T"],[180,""],[189,"U"],[195,""],[207,"U,T"],[213,"U"],[219,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[8152]}